<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Keafmd&#39;s Blog</title>
  
  <subtitle>write code and love life</subtitle>
  <link href="https://keafmd.top/atom.xml" rel="self"/>
  
  <link href="https://keafmd.top/"/>
  <updated>2022-04-25T05:41:43.926Z</updated>
  <id>https://keafmd.top/</id>
  
  <author>
    <name>牛哄哄的柯南</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>配置文件加密（Jasypt的简单使用）</title>
    <link href="https://keafmd.top/2022/04/25/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8A%A0%E5%AF%86%EF%BC%88Jasypt%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%EF%BC%89/"/>
    <id>https://keafmd.top/2022/04/25/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8A%A0%E5%AF%86%EF%BC%88Jasypt%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%EF%BC%89/</id>
    <published>2022-04-25T03:54:56.000Z</published>
    <updated>2022-04-25T05:41:43.926Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="需求引入"   >          <a href="#需求引入" class="heading-link"><i class="fas fa-link"></i></a><a href="#需求引入" class="headerlink" title="需求引入"></a>需求引入</h1>      <p>当我们需要对SpringBoot项目的配置文件中的信息进行加密时，如数据库密码等，此时我们可以使用Jasypt来实现。</p><a id="more"></a>        <h1 id="解决方案"   >          <a href="#解决方案" class="heading-link"><i class="fas fa-link"></i></a><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1>              <h2 id="第一步，引入Jasypt依赖"   >          <a href="#第一步，引入Jasypt依赖" class="heading-link"><i class="fas fa-link"></i></a><a href="#第一步，引入Jasypt依赖" class="headerlink" title="第一步，引入Jasypt依赖"></a>第一步，引入Jasypt依赖</h2>      <figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.ulisesbocchio<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jasypt-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></div></figure>        <h2 id="第二步，编写工具类"   >          <a href="#第二步，编写工具类" class="heading-link"><i class="fas fa-link"></i></a><a href="#第二步，编写工具类" class="headerlink" title="第二步，编写工具类"></a>第二步，编写工具类</h2>      <p><strong>JasyptUtils：</strong></p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.keafmd.springdemo.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.jasypt.encryption.pbe.PooledPBEStringEncryptor;</span><br><span class="line"><span class="keyword">import</span> org.jasypt.encryption.pbe.StandardPBEByteEncryptor;</span><br><span class="line"><span class="keyword">import</span> org.jasypt.encryption.pbe.config.SimpleStringPBEConfig;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Keafmd</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: JasyptUtils</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: 牛哄哄的柯南</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2022-04-25 11:18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JasyptUtils</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Jasypt生成加密结果</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password 配置文件中设定的加密密码 jasypt.encryptor.password</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value    待加密值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encryptPwd</span><span class="params">(String password, String value)</span> </span>&#123;</span><br><span class="line">        PooledPBEStringEncryptor encryptOr = <span class="keyword">new</span> PooledPBEStringEncryptor();</span><br><span class="line">        encryptOr.setConfig(cryptOr(password));</span><br><span class="line">        String result = encryptOr.encrypt(value);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password 配置文件中设定的加密密码 jasypt.encryptor.password</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value    待解密密文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decyptPwd</span><span class="params">(String password, String value)</span> </span>&#123;</span><br><span class="line">        PooledPBEStringEncryptor encryptOr = <span class="keyword">new</span> PooledPBEStringEncryptor();</span><br><span class="line">        encryptOr.setConfig(cryptOr(password));</span><br><span class="line">        String result = encryptOr.decrypt(value);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password salt</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SimpleStringPBEConfig <span class="title">cryptOr</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        SimpleStringPBEConfig config = <span class="keyword">new</span> SimpleStringPBEConfig();</span><br><span class="line">        config.setPassword(password);</span><br><span class="line">        config.setAlgorithm(StandardPBEByteEncryptor.DEFAULT_ALGORITHM);</span><br><span class="line">        config.setKeyObtentionIterations(<span class="string">&quot;1000&quot;</span>);</span><br><span class="line">        config.setPoolSize(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        config.setProviderName(<span class="keyword">null</span>);</span><br><span class="line">        config.setSaltGeneratorClassName(<span class="string">&quot;org.jasypt.salt.RandomSaltGenerator&quot;</span>);</span><br><span class="line">        config.setStringOutputType(<span class="string">&quot;base64&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> config;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 加密</span></span><br><span class="line">        <span class="comment">// 盐值替换成自己熟悉的口令，此口令为解密密钥，需要妥善保管。</span></span><br><span class="line">        <span class="comment">// 盐值也需要在第三步写入配置文件</span></span><br><span class="line">        System.out.println(encryptPwd(<span class="string">&quot;keafmd&quot;</span>, <span class="string">&quot;123456&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="第三步，修改配置文件"   >          <a href="#第三步，修改配置文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#第三步，修改配置文件" class="headerlink" title="第三步，修改配置文件"></a>第三步，修改配置文件</h2>      <ul><li>把盐值写入配置文件</li><li>把明文密码替换为工具类生成的密文，并用ENC(）包着</li></ul><p><strong>eg：</strong></p><figure class="highlight yml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 连接数据源</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">ENC(aXcmM77CmYgj67mBxQgI2A==)</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://XXXX:XX/tt?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false</span></span><br><span class="line">    </span><br><span class="line"><span class="attr">jasypt:</span></span><br><span class="line">  <span class="attr">encryptor:</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">keafmd</span></span><br></pre></td></tr></table></div></figure><blockquote><p><strong>以上就是配置文件加密（Jasypt的简单使用）的全部内容</strong></p></blockquote><blockquote><p><strong>版权声明：keafmd</strong><br><strong>原创博主：牛哄哄的柯南</strong><br><strong>博主原文链接：<a href="https://keafmd.top/">https://keafmd.top/</a></strong></p></blockquote><p><strong>加油！</strong></p><p><strong>共同努力！</strong></p><p><strong>Keafmd</strong></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;需求引入&quot;   &gt;
          &lt;a href=&quot;#需求引入&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#需求引入&quot; class=&quot;headerlink&quot; title=&quot;需求引入&quot;&gt;&lt;/a&gt;需求引入&lt;/h1&gt;
      &lt;p&gt;当我们需要对SpringBoot项目的配置文件中的信息进行加密时，如数据库密码等，此时我们可以使用Jasypt来实现。&lt;/p&gt;</summary>
    
    
    
    <category term="Jasypt" scheme="https://keafmd.top/categories/Jasypt/"/>
    
    
    <category term="Jasypt" scheme="https://keafmd.top/tags/Jasypt/"/>
    
  </entry>
  
  <entry>
    <title>clion中cpp文件显示This file does not belong to any project ，code insight features might not work【解决方案】</title>
    <link href="https://keafmd.top/2022/04/24/clion%E4%B8%ADcpp%E6%96%87%E4%BB%B6%E6%98%BE%E7%A4%BAThis%20file%20does%20not%20belong%20to%20any%20project%20%EF%BC%8Ccode%20insight%20features%20might%20not%20work%E3%80%90%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E3%80%91/"/>
    <id>https://keafmd.top/2022/04/24/clion%E4%B8%ADcpp%E6%96%87%E4%BB%B6%E6%98%BE%E7%A4%BAThis%20file%20does%20not%20belong%20to%20any%20project%20%EF%BC%8Ccode%20insight%20features%20might%20not%20work%E3%80%90%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E3%80%91/</id>
    <published>2022-04-24T08:11:19.000Z</published>
    <updated>2022-04-25T05:41:50.129Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="问题"   >          <a href="#问题" class="heading-link"><i class="fas fa-link"></i></a><a href="#问题" class="headerlink" title="问题"></a>问题</h1>      <p>cpp文件上方出现<br><code>This file does not belong to any project ，code insight features might not work properly</code>，并且main函数无法运行<br><img src="https://img-blog.csdnimg.cn/1b60aaf08e6b4a988cca8a192be06a93.png" alt="在这里插入图片描述"></p><a id="more"></a>        <h1 id="解决方案"   >          <a href="#解决方案" class="heading-link"><i class="fas fa-link"></i></a><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1>              <h2 id="第一步：修改下CMakeLists-txt文件"   >          <a href="#第一步：修改下CMakeLists-txt文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#第一步：修改下CMakeLists-txt文件" class="headerlink" title="第一步：修改下CMakeLists.txt文件"></a>第一步：修改下CMakeLists.txt文件</h2>      <p>为了以后方便，我们先修改下CMakeLists.txt文件<br><img   src="https://img-blog.csdnimg.cn/7530aa84b8764a65862ddfd13ba7c7b2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA54mb5ZOE5ZOE55qE5p-v5Y2X,size_20,color_FFFFFF,t_70,g_se,x_16" style="width: image/watermark,type_d3F5LXplbmhlaQ,shadow_50,tepx;height: t_Q1NETiBA54mb5ZOE5ZOE55qE5p-v5Y2X,size_20,color_FFFFFF,t_70,g_se,px;"  alt="在这里插入图片描述"><br><strong>CMakeLists.txt：</strong></p><figure class="highlight cpp"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 遍历项目根目录下所有的 .cpp 文件</span><br><span class="line">file (GLOB_RECURSE files *.cpp)</span><br><span class="line">foreach (file $&#123;files&#125;)</span><br><span class="line">    <span class="built_in">string</span>(REGEX REPLACE <span class="string">&quot;.+/(.+)\\..*&quot;</span> <span class="string">&quot;\\1&quot;</span> exe $&#123;file&#125;)</span><br><span class="line">    add_executable ($&#123;exe&#125; $&#123;file&#125;)</span><br><span class="line">    message (\ \ \ \ --\ src/$&#123;exe&#125;.cpp\ will\ be\ compiled\ to\ bin/$&#123;exe&#125;)</span><br><span class="line">endforeach ()</span><br></pre></td></tr></table></div></figure><blockquote><p><strong>这样以后就不用再修改CMakeLists.txt这个文件了。</strong></p></blockquote>        <h2 id="第二步：重新加载下项目"   >          <a href="#第二步：重新加载下项目" class="heading-link"><i class="fas fa-link"></i></a><a href="#第二步：重新加载下项目" class="headerlink" title="第二步：重新加载下项目"></a>第二步：重新加载下项目</h2>      <p><img   src="https://img-blog.csdnimg.cn/b5b821740a284b0ab0ec3836a1067291.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA54mb5ZOE5ZOE55qE5p-v5Y2X,size_20,color_FFFFFF,t_70,g_se,x_16" style="width: image/watermark,type_d3F5LXplbmhlaQ,shadow_50,tepx;height: t_Q1NETiBA54mb5ZOE5ZOE55qE5p-v5Y2X,size_20,color_FFFFFF,t_70,g_se,px;"  alt="在这里插入图片描述"></p><blockquote><p><strong>加载完成后main函数就可以执行了，及时cpp文件上方还有那句话也不影响。</strong></p></blockquote><p><img   src="https://img-blog.csdnimg.cn/933a865697274b85971e81f4a86c2a31.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA54mb5ZOE5ZOE55qE5p-v5Y2X,size_20,color_FFFFFF,t_70,g_se,x_16" style="width: image/watermark,type_d3F5LXplbmhlaQ,shadow_50,tepx;height: t_Q1NETiBA54mb5ZOE5ZOE55qE5p-v5Y2X,size_20,color_FFFFFF,t_70,g_se,px;"  alt="在这里插入图片描述"></p><blockquote><p><strong>以上就是clion中cpp文件显示This file does not belong to any project ，code insight features might not work【解决方案】的全部内容</strong></p></blockquote><blockquote><p><strong>版权声明：</strong><br><strong>原创博主：牛哄哄的柯南</strong><br><strong>博主原文链接：<a href="https://keafmd.top/">https://keafmd.top/</a></strong></p></blockquote><p><strong>看完如果对你有帮助</strong></p><p><strong>加油！</strong></p><p><strong>共同努力！</strong></p><p><strong>Keafmd</strong></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;问题&quot;   &gt;
          &lt;a href=&quot;#问题&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h1&gt;
      &lt;p&gt;cpp文件上方出现&lt;br&gt;&lt;code&gt;This file does not belong to any project ，code insight features might not work properly&lt;/code&gt;，并且main函数无法运行&lt;br&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/1b60aaf08e6b4a988cca8a192be06a93.png&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="帮学妹解决问题" scheme="https://keafmd.top/tags/%E5%B8%AE%E5%AD%A6%E5%A6%B9%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>买卖股票的最佳时机</title>
    <link href="https://keafmd.top/2022/04/24/%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/"/>
    <id>https://keafmd.top/2022/04/24/%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/</id>
    <published>2022-04-24T05:35:24.000Z</published>
    <updated>2022-04-24T05:42:05.028Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="题目"   >          <a href="#题目" class="heading-link"><i class="fas fa-link"></i></a><a href="#题目" class="headerlink" title="题目"></a>题目</h1>      <p><span class="exturl"><a class="exturl__link"   href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/" >买卖股票的最佳时机</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>难度 简单</p><blockquote><p>给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。你只能选择 某一天 买入这只股票，并选择在 未来的某一个不同的日子 卖出该股票。设计一个算法来计算你所能获取的最大利润。返回你可以从这笔交易中获取的最大利润。如果你不能获取任何利润，返回 0 。</p></blockquote><a id="more"></a><blockquote><p>示例 1：</p><p>输入：[7,1,5,3,6,4]<br>输出：5<br>解释：在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6-1 = 5 。<br>注意利润不能是 7-1 = 6, 因为卖出价格需要大于买入价格；同时，你不能在买入前卖出股票。</p><p>示例 2：</p><p>输入：prices = [7,6,4,3,1]<br>输出：0<br>解释：在这种情况下, 没有交易完成, 所以最大利润为 0。</p></blockquote><blockquote><p>提示：1 &lt;= prices.length &lt;= 105<br>0 &lt;= prices[i] &lt;= 104</p></blockquote><p>代码：</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span>[] prices)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//dp dp[i]表示该天的最大利益</span></span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[prices.length];</span><br><span class="line">        <span class="comment">//最大利益</span></span><br><span class="line">        <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//从第二天开始，每天的最大利益取决于前一天的最大利益和当天的价格</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; prices.length; i++) &#123;</span><br><span class="line">            <span class="comment">//当前天的最大利益 = 前一天的最大利益 + 当天的价格 - 前一天的价格</span></span><br><span class="line">            <span class="comment">//如果当天的利益小于0，则当天的利益为0</span></span><br><span class="line">            dp[i] = Math.max(dp[i-<span class="number">1</span>] + prices[i] - prices[i-<span class="number">1</span>],<span class="number">0</span>);</span><br><span class="line">            <span class="comment">//更新最大利益</span></span><br><span class="line">            max = Math.max(max,dp[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//返回最大利益</span></span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h1 id="每日单词"   >          <a href="#每日单词" class="heading-link"><i class="fas fa-link"></i></a><a href="#每日单词" class="headerlink" title="每日单词"></a>每日单词</h1>      <p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204241341716.png" alt="image-20220424134137071"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;   &gt;
          &lt;a href=&quot;#题目&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;
      &lt;p&gt;&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/&quot; &gt;买卖股票的最佳时机&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;难度 简单&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。你只能选择 某一天 买入这只股票，并选择在 未来的某一个不同的日子 卖出该股票。设计一个算法来计算你所能获取的最大利润。返回你可以从这笔交易中获取的最大利润。如果你不能获取任何利润，返回 0 。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="每天进步一点点系列" scheme="https://keafmd.top/tags/%E6%AF%8F%E5%A4%A9%E8%BF%9B%E6%AD%A5%E4%B8%80%E7%82%B9%E7%82%B9%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>最长连续序列</title>
    <link href="https://keafmd.top/2022/04/22/%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97/"/>
    <id>https://keafmd.top/2022/04/22/%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97/</id>
    <published>2022-04-22T03:33:47.000Z</published>
    <updated>2022-04-22T03:47:57.155Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="题目"   >          <a href="#题目" class="heading-link"><i class="fas fa-link"></i></a><a href="#题目" class="headerlink" title="题目"></a>题目</h1>      <p>题目：<span class="exturl"><a class="exturl__link"   href="https://leetcode-cn.com/problems/longest-consecutive-sequence/" >最长连续序列</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>难度：中等</p><blockquote><p>给定一个未排序的整数数组 nums ，找出数字连续的最长序列（不要求序列元素在原数组中连续）的长度。请你设计并实现时间复杂度为 O(n) 的算法解决此问题。</p></blockquote><a id="more"></a><blockquote><p>示例 1：</p><p>输入：nums = [100,4,200,1,3,2]<br>输出：4<br>解释：最长数字连续序列是 [1, 2, 3, 4]。它的长度为 4。</p><p>示例 2：</p><p>输入：nums = [0,3,7,2,5,8,4,6,0,1]<br>输出：9</p><p>提示：0 &lt;= nums.length &lt;= 105<br>-109 &lt;= nums[i] &lt;= 109</p></blockquote><p><strong>题解：</strong>先排下序，用个一维dp数组，dp[n]记录长度，最后求出最大的dp值就行了，数组长度为0的先处理下就行了，注意点就是返回值默认值为1，先给dp数组都初始化为1，因为最小的连续长度肯定是包含自身也就是1</p><p><strong>代码：</strong></p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">longestConsecutive</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums.length==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//排序下</span></span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        <span class="comment">//max初始化为1，因为最小的连续序列长度为1，避免数组中只有一个元素的情况，也可以在上面写if提前过滤</span></span><br><span class="line">        <span class="keyword">int</span> max = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[nums.length];</span><br><span class="line">        <span class="comment">//先填充个初始长度，包括本身，也就是1</span></span><br><span class="line">        Arrays.fill(dp,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">            <span class="comment">//比前一个大，那么就是连续的</span></span><br><span class="line">            <span class="keyword">if</span>(nums[i]==nums[i-<span class="number">1</span>]+<span class="number">1</span>)&#123;</span><br><span class="line">                dp[i] = dp[i-<span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//和前一个相等，连续长度保持就行</span></span><br><span class="line">            <span class="keyword">if</span>(nums[i]==nums[i-<span class="number">1</span>])&#123;</span><br><span class="line">                dp[i] = dp[i-<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            max = Math.max(max,dp[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h1 id="每日单词"   >          <a href="#每日单词" class="heading-link"><i class="fas fa-link"></i></a><a href="#每日单词" class="headerlink" title="每日单词"></a>每日单词</h1>      <p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204221147708.png" alt="image-20220422114734937"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;   &gt;
          &lt;a href=&quot;#题目&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;
      &lt;p&gt;题目：&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://leetcode-cn.com/problems/longest-consecutive-sequence/&quot; &gt;最长连续序列&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;难度：中等&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给定一个未排序的整数数组 nums ，找出数字连续的最长序列（不要求序列元素在原数组中连续）的长度。请你设计并实现时间复杂度为 O(n) 的算法解决此问题。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="每天进步一点点系列" scheme="https://keafmd.top/tags/%E6%AF%8F%E5%A4%A9%E8%BF%9B%E6%AD%A5%E4%B8%80%E7%82%B9%E7%82%B9%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>只出现一次的数字（水了个简单题）</title>
    <link href="https://keafmd.top/2022/04/21/%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97%EF%BC%88%E6%B0%B4%E4%BA%86%E4%B8%AA%E7%AE%80%E5%8D%95%E9%A2%98%EF%BC%89/"/>
    <id>https://keafmd.top/2022/04/21/%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97%EF%BC%88%E6%B0%B4%E4%BA%86%E4%B8%AA%E7%AE%80%E5%8D%95%E9%A2%98%EF%BC%89/</id>
    <published>2022-04-21T11:59:40.000Z</published>
    <updated>2022-04-22T01:50:13.020Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="题目"   >          <a href="#题目" class="heading-link"><i class="fas fa-link"></i></a><a href="#题目" class="headerlink" title="题目"></a>题目</h1>      <p>题目：<span class="exturl"><a class="exturl__link"   href="https://leetcode-cn.com/problems/single-number/" >只出现一次的数字</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><blockquote><p>给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。</p><p>说明：你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？</p></blockquote><a id="more"></a><p><strong>示例 1:</strong></p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: [2,2,1]</span><br><span class="line">输出: 1</span><br></pre></td></tr></table></div></figure><p><strong>示例 2:</strong></p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: [4,1,2,1,2]</span><br><span class="line">输出: 4</span><br></pre></td></tr></table></div></figure><p><strong>题解：</strong></p><blockquote><p>本题可以直接使用异或(^,相同为0，不同为1)去解决，先说方案，异或数组中的所有数，最后剩下的就是只出现一次的数</p><p>分析：</p><p>a^a = 0  0^b = b ,所以 a^a ^ b = b</p><p>拿个数举例子：</p><p>3 ^ 3 = 0011^0011 = 0000 = 0</p><p>0 ^ 2 = 0000^0010 = 0010 = 2</p><p>所以 3^3 ^2 = 2</p><p>最后所有出现偶数次的数异或后都成0了，0在和出现一次的（其实出现奇数次也是一样）异或，得到的就是我们要的那个数了</p></blockquote><p><strong>代码：</strong></p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">singleNumber</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//用异或 ，因为 a^b^a = b </span></span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> num : nums) &#123;</span><br><span class="line">            <span class="comment">//所以</span></span><br><span class="line">            res ^= num;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;   &gt;
          &lt;a href=&quot;#题目&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;
      &lt;p&gt;题目：&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://leetcode-cn.com/problems/single-number/&quot; &gt;只出现一次的数字&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。&lt;/p&gt;
&lt;p&gt;说明：你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="每天进步一点点系列" scheme="https://keafmd.top/tags/%E6%AF%8F%E5%A4%A9%E8%BF%9B%E6%AD%A5%E4%B8%80%E7%82%B9%E7%82%B9%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>名侦探柯南核心人物图</title>
    <link href="https://keafmd.top/2022/04/19/%E5%90%8D%E4%BE%A6%E6%8E%A2%E6%9F%AF%E5%8D%97%E6%A0%B8%E5%BF%83%E4%BA%BA%E7%89%A9%E5%9B%BE/"/>
    <id>https://keafmd.top/2022/04/19/%E5%90%8D%E4%BE%A6%E6%8E%A2%E6%9F%AF%E5%8D%97%E6%A0%B8%E5%BF%83%E4%BA%BA%E7%89%A9%E5%9B%BE/</id>
    <published>2022-04-19T07:33:14.000Z</published>
    <updated>2022-04-19T07:55:08.475Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="核心人物图"   >          <a href="#核心人物图" class="heading-link"><i class="fas fa-link"></i></a><a href="#核心人物图" class="headerlink" title="核心人物图"></a>核心人物图</h1>      <p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/%E6%9F%AF%E5%8D%97.webp" alt="柯南"></p><a id="more"></a><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/%E6%96%B0%E4%B8%80.webp" alt="新一"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/%E5%B0%8F%E5%85%B0.webp" alt="小兰"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/%E6%AF%9B%E5%88%A9%E5%B0%8F%E4%BA%94%E9%83%8E.webp" alt="毛利小五郎"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191545827.webp" alt="阿笠博士"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191546437.webp" alt="妃英理"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191546944.webp" alt="工藤优作"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191546523.webp" alt="工藤有希子"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191546974.webp" alt="目暮警官"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191546545.webp" alt="高木"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191546185.webp" alt="佐藤"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191546688.webp" alt="光彦"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191546998.webp" alt="元太"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191547553.webp" alt="园子"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191547061.webp" alt="步美"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191547557.webp" alt="怪盗基德"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191547245.webp" alt="和叶"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191547818.webp" alt="平次"></p><p>来源</p><p>百度百科：<span class="exturl"><a class="exturl__link"   href="https://baike.baidu.com/item/%E5%90%8D%E4%BE%A6%E6%8E%A2%E6%9F%AF%E5%8D%97/3469662?fromtitle=%E6%9F%AF%E5%8D%97&fromid=14081833" >柯南</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;核心人物图&quot;   &gt;
          &lt;a href=&quot;#核心人物图&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#核心人物图&quot; class=&quot;headerlink&quot; title=&quot;核心人物图&quot;&gt;&lt;/a&gt;核心人物图&lt;/h1&gt;
      &lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/%E6%9F%AF%E5%8D%97.webp&quot; alt=&quot;柯南&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="柯南" scheme="https://keafmd.top/tags/%E6%9F%AF%E5%8D%97/"/>
    
  </entry>
  
  <entry>
    <title>组合总和-Leetcode</title>
    <link href="https://keafmd.top/2022/04/19/%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C-Leetcode/"/>
    <id>https://keafmd.top/2022/04/19/%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C-Leetcode/</id>
    <published>2022-04-19T01:47:00.000Z</published>
    <updated>2022-04-19T01:55:06.697Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="每日题目"   >          <a href="#每日题目" class="heading-link"><i class="fas fa-link"></i></a><a href="#每日题目" class="headerlink" title="每日题目"></a>每日题目</h1>      <p>题目：<span class="exturl"><a class="exturl__link"   href="https://leetcode-cn.com/problems/combination-sum/" >组合总和</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><blockquote><p>给你一个 无重复元素 的整数数组 candidates 和一个目标整数 target ，找出 candidates 中可以使数字和为目标数 target 的 所有 不同组合 ，并以列表形式返回。你可以按 任意顺序 返回这些组合。</p><p>candidates 中的 同一个 数字可以 无限制重复被选取 。如果至少一个数字的被选数量不同，则两种组合是不同的。 </p><p>对于给定的输入，保证和为 target 的不同组合数少于 150 个。</p></blockquote><a id="more"></a><p>示例：</p><blockquote><p>示例 1：</p><p>输入：candidates = [2,3,6,7], target = 7<br>输出：[[2,2,3],[7]]<br>解释：<br>2 和 3 可以形成一组候选，2 + 2 + 3 = 7 。注意 2 可以使用多次。<br>7 也是一个候选， 7 = 7 。<br>仅有这两种组合。</p><p>示例 2：</p><p>输入: candidates = [2,3,5], target = 8<br>输出: [[2,2,2,2],[2,3,3],[3,5]]</p><p>示例 3：</p><p>输入: candidates = [2], target = 1<br>输出: []</p></blockquote><blockquote><p>提示：</p><p>1 &lt;= candidates.length &lt;= 30<br>1 &lt;= candidates[i] &lt;= 200<br>candidate 中的每个元素都 互不相同<br>1 &lt;= target &lt;= 500</p></blockquote><p><strong>代码：</strong></p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; combinationSum(<span class="keyword">int</span>[] candidates, <span class="keyword">int</span> target) &#123;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; res =  <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">//如果数组为空，直接返回空结果</span></span><br><span class="line">        <span class="keyword">if</span>(candidates==<span class="keyword">null</span>||candidates.length==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//先排序</span></span><br><span class="line">        Arrays.sort(candidates);</span><br><span class="line">        <span class="comment">//dfs</span></span><br><span class="line">        dfs(candidates,target,<span class="number">0</span>,<span class="keyword">new</span> ArrayList&lt;&gt;(),res);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span>[] candidates,<span class="keyword">int</span> target ,<span class="keyword">int</span> start,List&lt;Integer&gt; list,List&lt;List&lt;Integer&gt;&gt; res)</span></span>&#123;</span><br><span class="line">        <span class="comment">//如果目标值为0，说明已经找到一个组合，添加到结果集中</span></span><br><span class="line">        <span class="keyword">if</span>(target==<span class="number">0</span>)&#123;</span><br><span class="line">            res.add(<span class="keyword">new</span> ArrayList&lt;&gt;(list));</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//遍历数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = start; i &lt; candidates.length; i++) &#123;</span><br><span class="line">            <span class="comment">//如果当前值大于目标值，则不需要继续遍历</span></span><br><span class="line">            <span class="keyword">if</span>(candidates[i]&gt;target)&#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            list.add(candidates[i]);</span><br><span class="line">            <span class="comment">//更新目标值和起始位置</span></span><br><span class="line">            dfs(candidates,target-candidates[i],i,list,res);</span><br><span class="line">            <span class="comment">//回溯,删除当前值</span></span><br><span class="line">            list.remove(list.size()-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h1 id="每日单词"   >          <a href="#每日单词" class="heading-link"><i class="fas fa-link"></i></a><a href="#每日单词" class="headerlink" title="每日单词"></a>每日单词</h1>      <p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/image-20220419095327903.png" alt="image-20220419095327903"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;每日题目&quot;   &gt;
          &lt;a href=&quot;#每日题目&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#每日题目&quot; class=&quot;headerlink&quot; title=&quot;每日题目&quot;&gt;&lt;/a&gt;每日题目&lt;/h1&gt;
      &lt;p&gt;题目：&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://leetcode-cn.com/problems/combination-sum/&quot; &gt;组合总和&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给你一个 无重复元素 的整数数组 candidates 和一个目标整数 target ，找出 candidates 中可以使数字和为目标数 target 的 所有 不同组合 ，并以列表形式返回。你可以按 任意顺序 返回这些组合。&lt;/p&gt;
&lt;p&gt;candidates 中的 同一个 数字可以 无限制重复被选取 。如果至少一个数字的被选数量不同，则两种组合是不同的。 &lt;/p&gt;
&lt;p&gt;对于给定的输入，保证和为 target 的不同组合数少于 150 个。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="每天进步一点点系列" scheme="https://keafmd.top/tags/%E6%AF%8F%E5%A4%A9%E8%BF%9B%E6%AD%A5%E4%B8%80%E7%82%B9%E7%82%B9%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>计算器</title>
    <link href="https://keafmd.top/2022/04/18/%E8%AE%A1%E7%AE%97%E5%99%A8/"/>
    <id>https://keafmd.top/2022/04/18/%E8%AE%A1%E7%AE%97%E5%99%A8/</id>
    <published>2022-04-18T07:15:13.000Z</published>
    <updated>2022-04-18T07:20:25.556Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="每日题目"   >          <a href="#每日题目" class="heading-link"><i class="fas fa-link"></i></a><a href="#每日题目" class="headerlink" title="每日题目"></a>每日题目</h1>      <p>题目：<span class="exturl"><a class="exturl__link"   href="https://leetcode-cn.com/problems/calculator-lcci/" >计算器</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><blockquote><p>给定一个包含正整数、加(+)、减(-)、乘(*)、除(/)的算数表达式(括号除外)，计算其结果。</p><p>表达式仅包含非负整数，+， - ，*，/ 四种运算符和空格  。 整数除法仅保留整数部分。</p></blockquote><a id="more"></a><p>示例：</p><blockquote><p>示例 1:</p><p>输入: “3+2*2”<br>输出: 7</p><p>示例 2:</p><p>输入: “ 3/2 “<br>输出: 1</p><p>示例 3:</p><p>输入: “ 3+5 / 2 “<br>输出: 5</p><p>说明：</p><p>你可以假设所给定的表达式都是有效的。<br>请不要使用内置的库函数 eval。</p></blockquote><blockquote><p>小坑，字符串里有空格，需要替换掉</p></blockquote><p>代码：</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">calculate</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        s =s.replaceAll(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">        Deque&lt;Integer&gt; stack = <span class="keyword">new</span> ArrayDeque&lt;&gt;();</span><br><span class="line">        <span class="comment">//先把第一个加进去</span></span><br><span class="line">        <span class="keyword">char</span> flag = <span class="string">&#x27;+&#x27;</span>;</span><br><span class="line">        <span class="comment">//数字的初始值</span></span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length();i++)&#123;</span><br><span class="line">            <span class="comment">//转换成数字</span></span><br><span class="line">            <span class="keyword">if</span>(Character.isDigit(s.charAt(i)))&#123;</span><br><span class="line">                num = num*<span class="number">10</span>+s.charAt(i)-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//根据符号进行运行，就是*和/，优先级高，先把栈中的数字拿出来，运算后放进去</span></span><br><span class="line">            <span class="keyword">if</span>(!Character.isDigit(s.charAt(i)) || i==s.length()-<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(flag==<span class="string">&#x27;+&#x27;</span>)&#123;</span><br><span class="line">                    stack.push(num);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(flag==<span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">                    stack.push(-num);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(flag==<span class="string">&#x27;*&#x27;</span>)&#123;</span><br><span class="line">                    stack.push(stack.pop()*num);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(flag==<span class="string">&#x27;/&#x27;</span>)&#123;</span><br><span class="line">                    stack.push(stack.pop()/num);</span><br><span class="line">                &#125;</span><br><span class="line">                flag = s.charAt(i);</span><br><span class="line">                num =<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//遍历栈，累加结果</span></span><br><span class="line">        <span class="keyword">int</span> res =<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(!stack.isEmpty())&#123;</span><br><span class="line">            res += stack.pop();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;每日题目&quot;   &gt;
          &lt;a href=&quot;#每日题目&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#每日题目&quot; class=&quot;headerlink&quot; title=&quot;每日题目&quot;&gt;&lt;/a&gt;每日题目&lt;/h1&gt;
      &lt;p&gt;题目：&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://leetcode-cn.com/problems/calculator-lcci/&quot; &gt;计算器&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给定一个包含正整数、加(+)、减(-)、乘(*)、除(/)的算数表达式(括号除外)，计算其结果。&lt;/p&gt;
&lt;p&gt;表达式仅包含非负整数，+， - ，*，/ 四种运算符和空格  。 整数除法仅保留整数部分。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="每天进步一点点系列" scheme="https://keafmd.top/tags/%E6%AF%8F%E5%A4%A9%E8%BF%9B%E6%AD%A5%E4%B8%80%E7%82%B9%E7%82%B9%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>使用LamdbaUpdateWrapper的setSql作用及风险</title>
    <link href="https://keafmd.top/2022/04/12/%E4%BD%BF%E7%94%A8LamdbaUpdateWrapper%E7%9A%84setSql%E4%BD%9C%E7%94%A8%E5%8F%8A%E9%A3%8E%E9%99%A9/"/>
    <id>https://keafmd.top/2022/04/12/%E4%BD%BF%E7%94%A8LamdbaUpdateWrapper%E7%9A%84setSql%E4%BD%9C%E7%94%A8%E5%8F%8A%E9%A3%8E%E9%99%A9/</id>
    <published>2022-04-12T10:10:34.000Z</published>
    <updated>2022-04-18T07:42:42.969Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="问题引入"   >          <a href="#问题引入" class="heading-link"><i class="fas fa-link"></i></a><a href="#问题引入" class="headerlink" title="问题引入"></a>问题引入</h1>      <blockquote><p>先思考下：我们要对数据库里面的某条数据进行更新，并且想要在某个字段原先的基础上修改，我们怎么办？</p></blockquote><a id="more"></a><blockquote><p>正常的情况下，我们需要先查出来再更新，可就是想直接更新，那就需要去Mapper中写sql，就为了一个字段感觉费劲，在这种情况下使用LamdbaUpdateWrapper的setSql()方法即可。</p></blockquote><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//把num字段加5</span></span><br><span class="line">LambdaUpdateWrapper&lt;User&gt; updateWrapper = Wrappers.&lt;User&gt;lambdaUpdate()</span><br><span class="line">.eq(User::getId, userId)</span><br><span class="line">.setSql(<span class="string">&quot;count = count + 5&quot;</span>);</span><br><span class="line"></span><br><span class="line">userService.update(updateWrapper);</span><br></pre></td></tr></table></div></figure><p>BUT，这样就会存在可能有风险，主要还是为了测试mybatis-plus，是否进行的防范，经过测试，并没有。</p><p>比如就使用最常见的 sleep()，把这部分加到sql段中 <code>+ sleep(5)</code></p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LambdaUpdateWrapper&lt;User&gt; updateWrapper = Wrappers.&lt;User&gt;lambdaUpdate()</span><br><span class="line">                .eq(User::getId, userId)</span><br><span class="line">                .setSql(<span class="string">&quot;count = count + 5 + sleep(5)&quot;</span>);</span><br></pre></td></tr></table></div></figure><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/image-20220418154212043.png" alt="image-20220418154212043"></p><p>不过话说回来，这也就是开发人员能接触到的，只是证明mybatis-plus并没有对setSql()进行过滤，是采取直接拼上去的方式。</p>        <h1 id="每日单词"   >          <a href="#每日单词" class="heading-link"><i class="fas fa-link"></i></a><a href="#每日单词" class="headerlink" title="每日单词"></a>每日单词</h1>      <p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/image-20220418154234138.png" alt="image-20220418154234138"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;问题引入&quot;   &gt;
          &lt;a href=&quot;#问题引入&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#问题引入&quot; class=&quot;headerlink&quot; title=&quot;问题引入&quot;&gt;&lt;/a&gt;问题引入&lt;/h1&gt;
      &lt;blockquote&gt;
&lt;p&gt;先思考下：我们要对数据库里面的某条数据进行更新，并且想要在某个字段原先的基础上修改，我们怎么办？&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="java" scheme="https://keafmd.top/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>最小差值（附加单词积累）</title>
    <link href="https://keafmd.top/2022/04/12/%E6%9C%80%E5%B0%8F%E5%B7%AE%E5%80%BC%EF%BC%88%E9%99%84%E5%8A%A0%E5%8D%95%E8%AF%8D%E7%A7%AF%E7%B4%AF%EF%BC%89/"/>
    <id>https://keafmd.top/2022/04/12/%E6%9C%80%E5%B0%8F%E5%B7%AE%E5%80%BC%EF%BC%88%E9%99%84%E5%8A%A0%E5%8D%95%E8%AF%8D%E7%A7%AF%E7%B4%AF%EF%BC%89/</id>
    <published>2022-04-12T03:49:14.000Z</published>
    <updated>2022-04-12T04:11:08.911Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="每日题目"   >          <a href="#每日题目" class="heading-link"><i class="fas fa-link"></i></a><a href="#每日题目" class="headerlink" title="每日题目"></a>每日题目</h1>      <p>题目：<span class="exturl"><a class="exturl__link"   href="https://leetcode-cn.com/problems/smallest-range-i/" >最小差值 I</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><blockquote><p>给你一个整数数组 nums，和一个整数 k 。</p><p>在一个操作中，您可以选择 0 &lt;= i &lt; nums 的任何索引 i 。将 nums[i] 改为 nums[i] + x ，其中 x 是一个范围为 [-k, k] 的整数。对于每个索引 i ，最多 只能 应用 一次 此操作。</p><p>nums 的 分数 是 nums 中最大和最小元素的差值。 </p><p>在对nums中的每个索引最多应用一次上述操作后，返回 nums 的最低 分数 。</p></blockquote><a id="more"></a><p>示例：</p><blockquote><p>示例 1：</p><p>输入：nums = [1], k = 0<br>输出：0<br>解释：分数是 max(nums) - min(nums) = 1 - 1 = 0。<br>示例 2：</p><p>输入：nums = [0,10], k = 2<br>输出：6<br>解释：将 nums 改为 [2,8]。分数是 max(nums) - min(nums) = 8 - 2 = 6。<br>示例 3：</p><p>输入：nums = [1,3,6], k = 3<br>输出：0<br>解释：将 nums 改为 [4,4,4]。分数是 max(nums) - min(nums) = 4 - 4 = 0。</p></blockquote><p>提示：</p><blockquote><p>1 &lt;= nums.length &lt;= 104<br>0 &lt;= nums[i] &lt;= 104<br>0 &lt;= k &lt;= 104</p></blockquote><p>代码：</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">smallestRangeI</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> res =<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> max = Integer.MIN_VALUE;</span><br><span class="line">        <span class="keyword">int</span> min = Integer.MAX_VALUE;</span><br><span class="line">        <span class="comment">//取最大最小值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> num : nums) &#123;</span><br><span class="line">            max = Math.max(max, num);</span><br><span class="line">            min = Math.min(min, num);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//这样取最大最小值速度慢</span></span><br><span class="line"><span class="comment">//        Arrays.sort(nums);</span></span><br><span class="line"><span class="comment">//        min = nums[0];</span></span><br><span class="line"><span class="comment">//        max = nums[nums.length - 1];</span></span><br><span class="line">        <span class="comment">//最大值减k，最小值加k，然后算差值res</span></span><br><span class="line">        res = max - min - <span class="number">2</span> * k;</span><br><span class="line">        <span class="comment">//因为k可变，如果res&lt;0,就证明可以把最大最小值变成一样，so，res = 0</span></span><br><span class="line">        <span class="keyword">if</span>(res &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            res = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h1 id="每日单词"   >          <a href="#每日单词" class="heading-link"><i class="fas fa-link"></i></a><a href="#每日单词" class="headerlink" title="每日单词"></a>每日单词</h1>      <p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/image-20220412120606361.png" alt="image-20220412120606361"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;每日题目&quot;   &gt;
          &lt;a href=&quot;#每日题目&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#每日题目&quot; class=&quot;headerlink&quot; title=&quot;每日题目&quot;&gt;&lt;/a&gt;每日题目&lt;/h1&gt;
      &lt;p&gt;题目：&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://leetcode-cn.com/problems/smallest-range-i/&quot; &gt;最小差值 I&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给你一个整数数组 nums，和一个整数 k 。&lt;/p&gt;
&lt;p&gt;在一个操作中，您可以选择 0 &amp;lt;= i &amp;lt; nums 的任何索引 i 。将 nums[i] 改为 nums[i] + x ，其中 x 是一个范围为 [-k, k] 的整数。对于每个索引 i ，最多 只能 应用 一次 此操作。&lt;/p&gt;
&lt;p&gt;nums 的 分数 是 nums 中最大和最小元素的差值。 &lt;/p&gt;
&lt;p&gt;在对nums中的每个索引最多应用一次上述操作后，返回 nums 的最低 分数 。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="每天进步一点点系列" scheme="https://keafmd.top/tags/%E6%AF%8F%E5%A4%A9%E8%BF%9B%E6%AD%A5%E4%B8%80%E7%82%B9%E7%82%B9%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>DataGrip连接人大金仓数据库（kingbase）详细教程【超详细】</title>
    <link href="https://keafmd.top/2022/03/18/DataGrip%E8%BF%9E%E6%8E%A5%E4%BA%BA%E5%A4%A7%E9%87%91%E4%BB%93%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%88kingbase%EF%BC%89%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B%E3%80%90%E8%B6%85%E8%AF%A6%E7%BB%86%E3%80%91/"/>
    <id>https://keafmd.top/2022/03/18/DataGrip%E8%BF%9E%E6%8E%A5%E4%BA%BA%E5%A4%A7%E9%87%91%E4%BB%93%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%88kingbase%EF%BC%89%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B%E3%80%90%E8%B6%85%E8%AF%A6%E7%BB%86%E3%80%91/</id>
    <published>2022-03-18T07:30:53.000Z</published>
    <updated>2022-04-02T08:34:44.991Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="DataGrip连接人大金仓数据库（kingbase）详细教程【超详细】"   >          <a href="#DataGrip连接人大金仓数据库（kingbase）详细教程【超详细】" class="heading-link"><i class="fas fa-link"></i></a><a href="#DataGrip连接人大金仓数据库（kingbase）详细教程【超详细】" class="headerlink" title="DataGrip连接人大金仓数据库（kingbase）详细教程【超详细】"></a>DataGrip连接人大金仓数据库（kingbase）详细教程【超详细】</h1>              <h1 id="第一步：下载DataGrip"   >          <a href="#第一步：下载DataGrip" class="heading-link"><i class="fas fa-link"></i></a><a href="#第一步：下载DataGrip" class="headerlink" title="第一步：下载DataGrip"></a>第一步：下载DataGrip</h1>      <p><strong>官网地址：<span class="exturl"><a class="exturl__link"   href="https://www.jetbrains.com/zh-cn/datagrip/download/#section=windows" >戳这里</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></strong></p><p><img src="https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021459816.png" alt="image-20210913111047913"></p><a id="more"></a>        <h1 id="第二步：添加人大金仓的数据库引擎"   >          <a href="#第二步：添加人大金仓的数据库引擎" class="heading-link"><i class="fas fa-link"></i></a><a href="#第二步：添加人大金仓的数据库引擎" class="headerlink" title="第二步：添加人大金仓的数据库引擎"></a>第二步：添加人大金仓的数据库引擎</h1>      <blockquote><p><strong>其实就是选择我们本地仓库引入的jar包</strong></p></blockquote><p><strong>如下图：</strong></p><p><img src="https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021459327.png" alt="image-20210913111417486"></p><blockquote><p><strong>选择Driver Files，也就是我们本地仓库中kingbase8的jar包</strong></p></blockquote><p><img src="https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021500539.png" alt="image-20210913111636394"></p><blockquote><p><strong>从本地仓库中找到</strong></p></blockquote><p><img src="https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021500709.png" alt="image-20210913111654473"></p><blockquote><p><strong>切换Class</strong></p></blockquote><p><img src="https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021500688.png" alt="image-20210913111758561"></p><blockquote><p><strong>完成后如下图：</strong></p></blockquote><p><img src="https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021500158.png" alt="image-20210913111507062"></p><blockquote><p><strong>点击Apply保存引擎</strong></p></blockquote><p><img src="https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021500077.png" alt="image-20210913111854079"></p>        <h1 id="第三步：输入账号密码连接"   >          <a href="#第三步：输入账号密码连接" class="heading-link"><i class="fas fa-link"></i></a><a href="#第三步：输入账号密码连接" class="headerlink" title="第三步：输入账号密码连接"></a>第三步：输入账号密码连接</h1>      <p><img src="https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021500183.png" alt="image-20210913112022474"></p><blockquote><p><strong>先测试连接一下</strong></p></blockquote><p><img src="https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021500322.png" alt="image-20210913112050134"></p><blockquote><p><strong>没有问题就点击OK</strong></p></blockquote>        <h1 id="第四步：查看数据库"   >          <a href="#第四步：查看数据库" class="heading-link"><i class="fas fa-link"></i></a><a href="#第四步：查看数据库" class="headerlink" title="第四步：查看数据库"></a>第四步：查看数据库</h1>      <blockquote><p><strong>我们需要勾选下All database，不然看不到表数据</strong></p></blockquote><p><img src="https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021500556.png" alt="image-20210913112202575"></p><blockquote><p><strong>这样就OK了</strong></p></blockquote><p><img src="https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021500427.png" alt="image-20210913112435055"></p>        <h1 id="关于连接其它数据库"   >          <a href="#关于连接其它数据库" class="heading-link"><i class="fas fa-link"></i></a><a href="#关于连接其它数据库" class="headerlink" title="关于连接其它数据库"></a>关于连接其它数据库</h1>      <blockquote><p><strong>连接其他数据库的时候，自定义性没有那么强，可以从支持的数据库中选择，上面连接kingbase数据库自定义性较强，使用DataGrip比较方便，对于MySQL这些比较常用的，使用我们比较熟悉的SQLYog、Naviate即可。</strong></p></blockquote><p><img src="https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021501149.png" alt="image-20210913112521317"></p><p><img src="https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021501799.png" alt="image-20210913112949157"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;DataGrip连接人大金仓数据库（kingbase）详细教程【超详细】&quot;   &gt;
          &lt;a href=&quot;#DataGrip连接人大金仓数据库（kingbase）详细教程【超详细】&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#DataGrip连接人大金仓数据库（kingbase）详细教程【超详细】&quot; class=&quot;headerlink&quot; title=&quot;DataGrip连接人大金仓数据库（kingbase）详细教程【超详细】&quot;&gt;&lt;/a&gt;DataGrip连接人大金仓数据库（kingbase）详细教程【超详细】&lt;/h1&gt;
      
        &lt;h1 id=&quot;第一步：下载DataGrip&quot;   &gt;
          &lt;a href=&quot;#第一步：下载DataGrip&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#第一步：下载DataGrip&quot; class=&quot;headerlink&quot; title=&quot;第一步：下载DataGrip&quot;&gt;&lt;/a&gt;第一步：下载DataGrip&lt;/h1&gt;
      &lt;p&gt;&lt;strong&gt;官网地址：&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://www.jetbrains.com/zh-cn/datagrip/download/#section=windows&quot; &gt;戳这里&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021459816.png&quot; alt=&quot;image-20210913111047913&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="kingbase" scheme="https://keafmd.top/tags/kingbase/"/>
    
  </entry>
  
  <entry>
    <title>mysql和oorcale日期区间查询【含左右区间问题】</title>
    <link href="https://keafmd.top/2021/12/13/mysql%E5%92%8Coorcale%E6%97%A5%E6%9C%9F%E5%8C%BA%E9%97%B4%E6%9F%A5%E8%AF%A2%E3%80%90%E5%90%AB%E5%B7%A6%E5%8F%B3%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98%E3%80%91/"/>
    <id>https://keafmd.top/2021/12/13/mysql%E5%92%8Coorcale%E6%97%A5%E6%9C%9F%E5%8C%BA%E9%97%B4%E6%9F%A5%E8%AF%A2%E3%80%90%E5%90%AB%E5%B7%A6%E5%8F%B3%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98%E3%80%91/</id>
    <published>2021-12-13T12:55:04.000Z</published>
    <updated>2022-03-18T07:31:36.242Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="mysql和oorcale日期区间查询【含左右区间问题】"   >          <a href="#mysql和oorcale日期区间查询【含左右区间问题】" class="heading-link"><i class="fas fa-link"></i></a><a href="#mysql和oorcale日期区间查询【含左右区间问题】" class="headerlink" title="mysql和oorcale日期区间查询【含左右区间问题】"></a>mysql和oorcale日期区间查询【含左右区间问题】</h1>      <blockquote><p><strong>直接看样例↓</strong></p></blockquote><p><strong>mysql：</strong></p><figure class="highlight sql"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">-- 查询区间[2021-12-01,2021-12-03)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> b <span class="keyword">WHERE</span> b.trigger_time <span class="operator">&gt;=</span> <span class="string">&#x27;2021-12-01&#x27;</span> </span><br><span class="line"><span class="keyword">AND</span> b.trigger_time <span class="operator">&lt;=</span> <span class="string">&#x27;2021-12-03&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询区间[2021-12-01,2021-12-03]</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> b <span class="keyword">WHERE</span> to_days( b.trigger_time ) <span class="operator">&gt;=</span> to_days( <span class="string">&#x27;2021-12-01&#x27;</span> ) </span><br><span class="line"><span class="keyword">AND</span> to_days( b.trigger_time ) <span class="operator">&lt;=</span> to_days( <span class="string">&#x27;2021-12-03&#x27;</span> )</span><br><span class="line"></span><br></pre></td></tr></table></div></figure><a id="more"></a><p><strong>orcale：</strong></p><figure class="highlight sql"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">-- 查询区间[2021-12-01,2021-12-03)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> b <span class="keyword">WHERE</span> b.trigger_time <span class="operator">&gt;=</span> to_date( <span class="string">&#x27;2021-12-01&#x27;</span>, <span class="string">&#x27;yyyy-MM-dd&#x27;</span> ) </span><br><span class="line"><span class="keyword">AND</span> b.trigger_time <span class="operator">&lt;=</span> to_date( <span class="string">&#x27;2021-12-03&#x27;</span>, <span class="string">&#x27;yyyy-MM-dd&#x27;</span> )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询区间[2021-12-01,2021-12-03]</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> b <span class="keyword">WHERE</span> to_char( b.trigger_time, <span class="string">&#x27;yyyy-MM-dd&#x27;</span> ) <span class="operator">&gt;=</span> <span class="string">&#x27;2021-12-01&#x27;</span> </span><br><span class="line"><span class="keyword">AND</span> to_char( b.trigger_time, <span class="string">&#x27;yyyy-MM-dd&#x27;</span> ) <span class="operator">&lt;=</span> <span class="string">&#x27;2021-12-03&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></div></figure><blockquote><p><strong>以上就是mysql和oorcale日期区间查询【含左右区间问题】的全部内容</strong></p></blockquote><blockquote><p><strong>版权声明：</strong><br><strong>原创博主：牛哄哄的柯南</strong><br><strong>博主原文链接：<span class="exturl"><a class="exturl__link"   href="https://keafmd.blog.csdn.net/" >https://keafmd.blog.csdn.net/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></strong></p></blockquote><p><strong>看完如果对你有帮助，感谢支持！</strong><br><img src="https://img-blog.csdnimg.cn/20201023201048810.gif#pic_center" alt="在这里插入图片描述"><br><strong>加油！</strong></p><p><strong>共同努力！</strong></p><p><strong>Keafmd</strong></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;mysql和oorcale日期区间查询【含左右区间问题】&quot;   &gt;
          &lt;a href=&quot;#mysql和oorcale日期区间查询【含左右区间问题】&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#mysql和oorcale日期区间查询【含左右区间问题】&quot; class=&quot;headerlink&quot; title=&quot;mysql和oorcale日期区间查询【含左右区间问题】&quot;&gt;&lt;/a&gt;mysql和oorcale日期区间查询【含左右区间问题】&lt;/h1&gt;
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;直接看样例↓&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;mysql：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;div class=&quot;table-container&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- 查询区间[2021-12-01,2021-12-03)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; b &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; b.trigger_time &lt;span class=&quot;operator&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;2021-12-01&amp;#x27;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; b.trigger_time &lt;span class=&quot;operator&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;2021-12-03&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- 查询区间[2021-12-01,2021-12-03]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; b &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; to_days( b.trigger_time ) &lt;span class=&quot;operator&quot;&gt;&amp;gt;=&lt;/span&gt; to_days( &lt;span class=&quot;string&quot;&gt;&amp;#x27;2021-12-01&amp;#x27;&lt;/span&gt; ) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; to_days( b.trigger_time ) &lt;span class=&quot;operator&quot;&gt;&amp;lt;=&lt;/span&gt; to_days( &lt;span class=&quot;string&quot;&gt;&amp;#x27;2021-12-03&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;</summary>
    
    
    
    
    <category term="mysql" scheme="https://keafmd.top/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>规范【锦上添花系列】</title>
    <link href="https://keafmd.top/2021/10/25/%E8%A7%84%E8%8C%83%E3%80%90%E9%94%A6%E4%B8%8A%E6%B7%BB%E8%8A%B1%E7%B3%BB%E5%88%97%E3%80%91/"/>
    <id>https://keafmd.top/2021/10/25/%E8%A7%84%E8%8C%83%E3%80%90%E9%94%A6%E4%B8%8A%E6%B7%BB%E8%8A%B1%E7%B3%BB%E5%88%97%E3%80%91/</id>
    <published>2021-10-25T09:19:00.000Z</published>
    <updated>2021-10-25T09:20:09.050Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>我们提交代码时，有时可能没有什么格式，就简单记录下这次提交了哪部分代码，但是当我们看gitee和github上的提交时就会发现，在提交信息前会有一些单词，那就是用来标识这次提交代码的类别的。</strong></p></blockquote><p><strong>规范的好处：</strong></p><ul><li><strong>首先可读性强，不比深看代码，即可知道本次commit的作用</strong></li><li><strong>便于根据项目开发历史</strong></li><li><strong>提高项目整体质量，提高个人专业性</strong></li><li><strong>为Code Reviewing做准备</strong></li><li>…</li></ul><a id="more"></a><p><strong>规范有很多种，本文介绍目前使用最广泛的Angular 规范</strong><br><img   src="https://img-blog.csdnimg.cn/0210eac7b05f4bc38b0a04fcd36c9a96.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA54mb5ZOE5ZOE55qE5p-v5Y2X,size_20,color_FFFFFF,t_70,g_se,x_16" style="width: image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,tepx;height: t_Q1NETiBA54mb5ZOE5ZOE55qE5p-v5Y2X,size_20,color_FFFFFF,t_70,g_se,px;"  alt="在这里插入图片描述"></p><blockquote><p><strong>关于commit的类别，Angular 规范提到了七种标识：</strong></p></blockquote><ul><li><strong>feat：最常用的，开发新功能</strong></li><li><strong>fix：也常用，修复bug</strong></li><li><strong>docs：文档</strong></li><li><strong>style：常用，格式修改（不改变代码运行）</strong></li><li><strong>refactor：重构，改变代码结构，不是新功能也不是修复bug</strong></li><li><strong>test：测试</strong></li><li><strong>chore：维护，一些其它修改</strong></li></ul><blockquote><p><strong>版权声明：</strong><br><strong>原创博主：牛哄哄的柯南</strong><br><strong>博主原文链接：<span class="exturl"><a class="exturl__link"   href="https://keafmd.blog.csdn.net/" >https://keafmd.blog.csdn.net/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></strong></p></blockquote><p><strong>看完如果对你有帮助，感谢点击下面的==一键三连==支持！<br>[哈哈][抱拳]</strong><br><img src="https://img-blog.csdnimg.cn/e76df83ccd6d4e139968fbb68f7b1f99.png" alt="请添加图片描述"><img src="https://img-blog.csdnimg.cn/20201023201048810.gif#pic_center" alt="在这里插入图片描述"><br><strong>加油！</strong></p><p><strong>共同努力！</strong></p><p><strong>Keafmd</strong></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;我们提交代码时，有时可能没有什么格式，就简单记录下这次提交了哪部分代码，但是当我们看gitee和github上的提交时就会发现，在提交信息前会有一些单词，那就是用来标识这次提交代码的类别的。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;规范的好处：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;首先可读性强，不比深看代码，即可知道本次commit的作用&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;便于根据项目开发历史&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;提高项目整体质量，提高个人专业性&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;为Code Reviewing做准备&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    
    <category term="git" scheme="https://keafmd.top/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>浅显理解Java泛型的super和extends</title>
    <link href="https://keafmd.top/2021/08/06/%E6%B5%85%E6%98%BE%E7%90%86%E8%A7%A3Java%E6%B3%9B%E5%9E%8B%E7%9A%84super%E5%92%8Cextends/"/>
    <id>https://keafmd.top/2021/08/06/%E6%B5%85%E6%98%BE%E7%90%86%E8%A7%A3Java%E6%B3%9B%E5%9E%8B%E7%9A%84super%E5%92%8Cextends/</id>
    <published>2021-08-06T03:43:47.000Z</published>
    <updated>2021-08-06T03:48:07.880Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="浅显理解Java泛型的super和extends"   >          <a href="#浅显理解Java泛型的super和extends" class="heading-link"><i class="fas fa-link"></i></a><a href="#浅显理解Java泛型的super和extends" class="headerlink" title="浅显理解Java泛型的super和extends"></a>浅显理解Java泛型的super和extends</h1>              <h1 id="目录"   >          <a href="#目录" class="heading-link"><i class="fas fa-link"></i></a><a href="#目录" class="headerlink" title="目录"></a>目录</h1>              <h2 id="概念简单理解"   >          <a href="#概念简单理解" class="heading-link"><i class="fas fa-link"></i></a><a href="#概念简单理解" class="headerlink" title="概念简单理解"></a>概念简单理解</h2>      <ul><li><p>List&lt;? extends T&gt;表示该集合中存在的都是类型T的子类，包括T自己</p></li><li><p>List&lt;? super T&gt;表示该集合中存的都是类型T的父类，包括T自己</p></li></ul><a id="more"></a>        <h2 id="代码样例解读"   >          <a href="#代码样例解读" class="heading-link"><i class="fas fa-link"></i></a><a href="#代码样例解读" class="headerlink" title="代码样例解读"></a>代码样例解读</h2>      <p>==<strong>父子类代码：</strong>==</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生物</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Biological</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 动物</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span> <span class="keyword">extends</span> <span class="title">Biological</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 植物</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Plant</span> <span class="keyword">extends</span> <span class="title">Biological</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Cat</span> <span class="keyword">extends</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Flower</span> <span class="keyword">extends</span> <span class="title">Plant</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Tree</span> <span class="keyword">extends</span> <span class="title">Plant</span></span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p><strong>==关系图：==</strong></p><p><img src="https://gitee.com/Keafmd/drawing-bed/raw/master/img/20210804161818.png" alt="fanxing"></p><p><strong>==测试代码：==</strong></p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    List&lt;? <span class="keyword">super</span> Animal&gt; listA = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    List&lt;? extends Plant&gt; listB = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//listA.add(new Biological());  </span></span><br><span class="line">    listA.add(<span class="keyword">new</span> Animal());</span><br><span class="line">    listA.add(<span class="keyword">new</span> Dog());</span><br><span class="line">    <span class="comment">//listA.add(new Flower());</span></span><br><span class="line">    Object object = listA.get(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//listB.add(new Plant());</span></span><br><span class="line">    <span class="comment">//listB.add(new Flower());</span></span><br><span class="line">    listB.add(<span class="keyword">null</span>);</span><br><span class="line">    Plant plant = listB.get(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="关于List-lt-super-T-gt"   >          <a href="#关于List-lt-super-T-gt" class="heading-link"><i class="fas fa-link"></i></a><a href="#关于List-lt-super-T-gt" class="headerlink" title="关于List&lt;? super T&gt;"></a>关于List&lt;? super T&gt;</h2>              <h3 id="add方面"   >          <a href="#add方面" class="heading-link"><i class="fas fa-link"></i></a><a href="#add方面" class="headerlink" title="add方面"></a>add方面</h3>      <figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;? <span class="keyword">super</span> Animal&gt; listA = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br></pre></td></tr></table></div></figure><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">listA.add(new Biological());  </span><br></pre></td></tr></table></div></figure><p>执行上面这行代码是不允许的，因为listA的集合类型是Animal或者更高的父类，想一下如果代表的类型是Animal，那怎么允许add它的父类Biological呢？当然不允许了。</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">listA.add(<span class="keyword">new</span> Animal());</span><br><span class="line">listA.add(<span class="keyword">new</span> Dog());</span><br></pre></td></tr></table></div></figure><p>执行上面这两句就是可以正常执行的，因为无论是Animal还是Animal的子类Dog，都是可以存到集合类型是Animal或者更高的父类的集合中的。有点拗口，不过就是这个意思。</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">listA.add(<span class="keyword">new</span> Flower());</span><br></pre></td></tr></table></div></figure><p>添加Flower当然是不可以的，因为它不是Animal的子类。</p>        <h3 id="返回值方面"   >          <a href="#返回值方面" class="heading-link"><i class="fas fa-link"></i></a><a href="#返回值方面" class="headerlink" title="返回值方面"></a>返回值方面</h3>      <figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Object object = listA.get(<span class="number">0</span>);</span><br></pre></td></tr></table></div></figure><p>因为listA的集合类型是Animal或者更高的父类，所以不清楚到底会是哪个类，但是我们都应该清楚所有类的父类都是Object，所以返回值是Object类型的。</p>        <h2 id="关于List-lt-extendsT-gt"   >          <a href="#关于List-lt-extendsT-gt" class="heading-link"><i class="fas fa-link"></i></a><a href="#关于List-lt-extendsT-gt" class="headerlink" title="关于List&lt;? extendsT&gt;"></a>关于List&lt;? extendsT&gt;</h2>              <h3 id="add方面-1"   >          <a href="#add方面-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#add方面-1" class="headerlink" title="add方面"></a>add方面</h3>      <figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;? extends Plant&gt; listB = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br></pre></td></tr></table></div></figure><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">listB.add(<span class="keyword">new</span> Plant());</span><br></pre></td></tr></table></div></figure><p>执行上面的代码是不允许的，因为listB的集合类型是Plant或Plant的子类，想一下如果代表的类型是Plant的子类Tree，那么怎么可能可以add它的父类Plant呢？所以跟上面的那个理解差不多，就是反过来理解。看图可以更加清晰。</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">listB.add(<span class="keyword">new</span> Flower());</span><br></pre></td></tr></table></div></figure><p>这个同理，如何代表的类型是Flower的子类Rose(玫瑰花)，这样当然不可以add它的父类Flower了。</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">listB.add(<span class="keyword">null</span>);</span><br></pre></td></tr></table></div></figure><p>特殊情况就是这个，可以add null，但是也没意义啊。</p>        <h3 id="返回值方面-1"   >          <a href="#返回值方面-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#返回值方面-1" class="headerlink" title="返回值方面"></a>返回值方面</h3>      <figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Plant plant = listB.get(<span class="number">0</span>);</span><br></pre></td></tr></table></div></figure><p>因为listB的集合类型是Plant或者它的子类，所以不清楚到底会是哪个类，但是我们可以知道，最高的类型就是Plant了，所以返回值就是Plant类型的。</p>        <h2 id="总结"   >          <a href="#总结" class="heading-link"><i class="fas fa-link"></i></a><a href="#总结" class="headerlink" title="总结"></a>总结</h2>      <ul><li><p>List&lt;? super T&gt;表示该集合中存的都是类型T的父类，包括T自己</p><ul><li>add：不能add任何对象（特例：可以添加null）</li></ul></li><li><p>get：get返回的对象类型为T</p></li><li><p>List&lt;? extends T&gt;表示该集合中存在的都是类型T的子类，包括T自己</p><ul><li><p>add：只能添加T及T的子类</p></li><li><p>get：get返回的对象类型为Object</p></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;浅显理解Java泛型的super和extends&quot;   &gt;
          &lt;a href=&quot;#浅显理解Java泛型的super和extends&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#浅显理解Java泛型的super和extends&quot; class=&quot;headerlink&quot; title=&quot;浅显理解Java泛型的super和extends&quot;&gt;&lt;/a&gt;浅显理解Java泛型的super和extends&lt;/h1&gt;
      
        &lt;h1 id=&quot;目录&quot;   &gt;
          &lt;a href=&quot;#目录&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;
      
        &lt;h2 id=&quot;概念简单理解&quot;   &gt;
          &lt;a href=&quot;#概念简单理解&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#概念简单理解&quot; class=&quot;headerlink&quot; title=&quot;概念简单理解&quot;&gt;&lt;/a&gt;概念简单理解&lt;/h2&gt;
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;List&amp;lt;? extends T&amp;gt;表示该集合中存在的都是类型T的子类，包括T自己&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;List&amp;lt;? super T&amp;gt;表示该集合中存的都是类型T的父类，包括T自己&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    
    <category term="java" scheme="https://keafmd.top/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>日常Java练习题（每天进步一点点系列）</title>
    <link href="https://keafmd.top/2021/05/13/%E6%97%A5%E5%B8%B8Java%E7%BB%83%E4%B9%A0%E9%A2%98%EF%BC%88%E6%AF%8F%E5%A4%A9%E8%BF%9B%E6%AD%A5%E4%B8%80%E7%82%B9%E7%82%B9%E7%B3%BB%E5%88%97%EF%BC%89/"/>
    <id>https://keafmd.top/2021/05/13/%E6%97%A5%E5%B8%B8Java%E7%BB%83%E4%B9%A0%E9%A2%98%EF%BC%88%E6%AF%8F%E5%A4%A9%E8%BF%9B%E6%AD%A5%E4%B8%80%E7%82%B9%E7%82%B9%E7%B3%BB%E5%88%97%EF%BC%89/</id>
    <published>2021-05-13T13:23:47.000Z</published>
    <updated>2021-05-13T13:26:35.618Z</updated>
    
    <content type="html"><![CDATA[<p><strong>==提示==：好多小伙伴反映，直接看到答案不太好，那我把答案的颜色设置为透明，答案位置还是在题目后面，需要鼠标选中才能看见（操作如下图），同时为了手机端的小伙伴，我还会把所有答案放到文章最下面，希望给每天进步一点点的小伙伴更好的体验，==末尾还有福利==。</strong></p><a id="more"></a><p><img   src="https://img-blog.csdnimg.cn/20210513143525820.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"></p><p><strong>==1==、以下程序段的输出结果为：<br>public class EqualsMethod<br>{<br>    public static void main(String[] args)<br>    {<br>        Integer n1 = new Integer(47);<br>        Integer n2 = new Integer(47);<br>        System.out.print(n1 == n2);<br>        System.out.print(“,”);<br>        System.out.println(n1 != n2);<br>    }<br>}<br><font color = white>正确答案: B   你的答案: B (正确)</font><br>false，false<br>false，true<br>true，false<br>true，true</strong></p><blockquote><p><strong>题解：<br>首先 我们要知道 <code>==</code> 这个比较符号<br><code>==</code>可用于基本类型和引用类型：当用于基本类型时候，是比较值是否相同；当用于引用类型的时候，是比较对象是否相同。<br>“==”和 “!=”比较的是地址 指第一个new()出来的地址<br>因为两次new() 出的内存也不同<br>所以System.out.print(n1 == n2);返回 false<br>所以System.out.println(n1 != n2);就返回true<br>所以选B</strong></p></blockquote><p><strong>==2==、在java7中，下列不能做switch()的参数类型是？<br><font color = white>正确答案: D   你的答案: D (正确)</font><br>int型<br>枚举类型<br>字符串<br>浮点型</strong></p><blockquote><p><strong>题解：<br>switch语句后的控制表达式只能是short、char、int、long整数类型和枚举类型，不能是float，double和boolean类型。String类型是java7开始支持。</strong></p></blockquote><p><strong>==3==、以下代码的输出结果是？<br>public class B<br>{<br>    public static B t1 = new B();<br>    public static B t2 = new B();<br>    {<br>        System.out.println(“构造块”);<br>    }<br>    static<br>    {<br>        System.out.println(“静态块”);<br>    }<br>    public static void main(String[] args)<br>    {<br>        B t = new B();<br>    }<br>}<br><font color = white>正确答案: C   你的答案: C (正确)</font><br>静态块 构造块 构造块 构造块<br>构造块 静态块 构造块 构造块<br>构造块 构造块 静态块 构造块<br>构造块 构造块 构造块 静态块</strong></p><blockquote><p><strong>题解：<br>开始时JVM加载B.class，对所有的静态成员进行声明，t1 t2被初始化为默认值，为null，又因为t1 t2需要被显式初始化，所以对t1进行显式初始化，初始化代码块→构造函数（没有就是调用默认的构造函数），咦！静态代码块咋不初始化？因为在开始时已经对static部分进行了初始化，虽然只对static变量进行了初始化，但在初始化t1时也不会再执行static块了，因为JVM认为这是第二次加载类B了，所以static会在t1初始化时被忽略掉，所以直接初始化非static部分，也就是构造块部分（输出’’构造块’’）接着构造函数（无输出）。接着对t2进行初始化过程同t1相同（输出’构造块’），此时就对所有的static变量都完成了初始化，接着就执行static块部分（输出’静态块’），接着执行，main方法，同样也，new了对象，调用构造函数输出（’构造块’），所以选C</strong></p></blockquote><p><strong>==4==、What results from the following code fragment?<br>（翻译：下面的代码片段产生了什么结果？）<br>int i = 5;<br>int j = 10;<br>System.out.println(i + <del>j);<br><font color = white>正确答案: C   你的答案: C (正确)</font><br>Compilation error because”</del>”doesn’t operate on integers<br>-5<br>-6<br>15</strong></p><blockquote><p><strong>题解：<br>公式-n=<del>n+1可推出</del>n=-n-1，所以~10=-11再加5结果为-6</strong></p></blockquote><p><strong>==5==、对于构造方法，下列叙述正确的是（ ）。<br><font color = white>正确答案: A C D   你的答案: A C D(正确)</font><br>构造方法的优先级一般比代码块低。<br>构造方法的返回类型只能是void型。<br>构造方法的主要作用是完成对类的对象的初始化工作。<br>一般在创建新对象时，系统会自动调用构造方法。</strong></p><blockquote><p><strong>题解：<br>A：静态成员变量或静态代码块&gt;main方法&gt;非静态成员变量或非静态代码块&gt;构造方法<br>B：think in java中提到构造器本身并没有任何返回值。<br>C: 构造方法的主要作用是完成对类的对象的初始化工作。<br>D: 一般在创建(new)新对象时，系统会自动调用构造方法。</strong></p></blockquote><p><strong>==6==、JDK1.7版本之前，接口和抽象类描述正确的有（ ）<br><font color = white>正确答案: B C   你的答案: B C (正确)</font><br>抽象类没有构造函数。<br>接口没有构造函数。<br>抽象类不允许多继承。<br>接口中的方法可以有方法体。</strong></p><blockquote><p><strong>题解：<br>A.抽象类可以有构造方法,只是不能直接创建抽象类的实例对象而已<br>B.在接口中 不可以有构造方法,在接口里写入构造方法时，编译器提示：Interfaces cannot have constructors。<br>C.Java不允许类多重继承<br>D.jdk1.8后接口中的方法可以有方法体，jdk1.8之前不可以有方法体</strong></p></blockquote><p><strong>==7==、以下关于JAVA语言异常处理描述正确的有？<br><font color = white>正确答案: C D   你的答案: C D (正确)</font><br>throw关键字可以在方法上声明该方法要抛出的异常。<br>throws用于抛出异常对象。<br>try是用于检测被包住的语句块是否出现异常，如果有异常，则抛出异常，并执行catch语句。<br>finally语句块是不管有没有出现异常都要执行的内容。<br>在try块中不可以抛出异常</strong></p><blockquote><p><strong>题解：<br>Java语言中的异常处理包括声明异常、抛出异常、捕获异常和处理异常四个环节。<br>throw用于抛出异常。<br>throws关键字可以在方法上声明该方法要抛出的异常，然后在方法内部通过throw抛出异常对象。<br>try是用于检测被包住的语句块是否出现异常，如果有异常，则抛出异常，并执行catch语句。<br>cacth用于捕获从try中抛出的异常并作出处理。<br>finally语句块是不管有没有出现异常都要执行的内容。</strong></p></blockquote><p><strong>==8==、下面程序输出结果为（）：<br>public class Demo{<br>public static void main (String [] args) {<br>String lx = “LeXin”;<br>String nb = lx;<br>lx = “Fenqile”;<br>System.out.println(nb);<br>}<br>}<br><font color = white>正确答案: B C   你的答案: B C (正确)</font><br>程序异常，编译不通过<br>程序编写正常，可正常运行<br>程序输出值为“LeXin”<br>程序输出值为“Fenqile”</strong></p><blockquote><p><strong>题解：<br>很显然是把“LeXin”的值赋给了nb</strong></p></blockquote><p><strong>==9==、java中关于继承的描述正确的是（）<br><font color = white>正确答案: A C D   你的答案: A C D (正确)</font><br>一个子类只能继承一个父类<br>子类可以继承父类的构造方法<br>继承具有传递性<br>父类一般具有通用性，子类更具体</strong></p><blockquote><p><strong>题解：<br>子类不可以继承父类的构造方法，只可以调用父类的构造方法。子类中所有的构造函数都会默认访问父类中的空参数构造函数，这是因为子类的构造函数内第一行都有默认的super（）语句。</strong></p></blockquote><p><strong>==10==、What is Static Method in Java（）<br><font color = white>正确答案: A B C   你的答案: A B C (正确)</font><br>It is a method which belongs to the class and not to the object(instance)<br>A static method can access only static data. It can not access non-static data (instance variables)<br>A static method can call only other static methods and can not call a non-static method from it.<br>A static method can not be accessed directly by the class name and doesn’t need any object</strong></p><blockquote><p><strong>题解：<br>A：静态方法是一个属于类而不属于对象(实例)的方法。（√）<br>B：静态方法只能访问静态数据。无法访问非静态数据(实例变量)。（√）<br>C：静态方法只能调用其他静态方法，不能从中调用非静态方法。（√）<br>D：静态方法不能通过类名直接访问，也不需要任何对象。（×） 静态方法可以直接用类名访问。</strong></p></blockquote><p><strong><font color =#40b1f7>最近很多小伙伴希望我推荐个比较详细的Java零基础教程，下面这个是我看过的觉得挺不错的，值得收藏系列。<br>链接：<span class="exturl"><a class="exturl__link"   href="https://www.bilibili.com/video/BV1Rx411876f" >点这里也可以</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br><span class="exturl"><a class="exturl__link"   href="https://www.bilibili.com/video/BV1Rx411876f" >https://www.bilibili.com/video/BV1Rx411876f</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></font></strong><br><img   src="https://img-blog.csdnimg.cn/20210513145838608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"><br><strong>答案汇总：<br>1、正确答案: B<br>2、正确答案: D<br>3、正确答案: C<br>4、正确答案: C<br>5、正确答案:  A C D<br>6、正确答案: B C<br>7、正确答案: C D<br>8、正确答案: B C<br>9、正确答案: A C D<br>10、正确答案:A B C</strong> </p><blockquote><p><strong>以上部分题解来自牛客评论区，感谢评论区大佬的解释。</strong></p></blockquote><blockquote><p><strong>每天进步一点点！<br>不进则退！</strong></p></blockquote><p><strong>看完如果对你有帮助，感谢点赞支持！</strong><br><img src="https://img-blog.csdnimg.cn/20201023201048810.gif#pic_center" alt="在这里插入图片描述"><br><strong>加油！</strong></p><p><strong>共同努力！</strong></p><p><strong>Keafmd</strong></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;==提示==：好多小伙伴反映，直接看到答案不太好，那我把答案的颜色设置为透明，答案位置还是在题目后面，需要鼠标选中才能看见（操作如下图），同时为了手机端的小伙伴，我还会把所有答案放到文章最下面，希望给每天进步一点点的小伙伴更好的体验，==末尾还有福利==。&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="每天进步一点点系列" scheme="https://keafmd.top/tags/%E6%AF%8F%E5%A4%A9%E8%BF%9B%E6%AD%A5%E4%B8%80%E7%82%B9%E7%82%B9%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot集成使用jsp（超详细）</title>
    <link href="https://keafmd.top/2021/04/06/SpringBoot%E9%9B%86%E6%88%90%E4%BD%BF%E7%94%A8jsp%EF%BC%88%E8%B6%85%E8%AF%A6%E7%BB%86%EF%BC%89/"/>
    <id>https://keafmd.top/2021/04/06/SpringBoot%E9%9B%86%E6%88%90%E4%BD%BF%E7%94%A8jsp%EF%BC%88%E8%B6%85%E8%AF%A6%E7%BB%86%EF%BC%89/</id>
    <published>2021-04-06T13:34:29.000Z</published>
    <updated>2021-04-06T14:04:49.912Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="添加依赖"   >          <a href="#添加依赖" class="heading-link"><i class="fas fa-link"></i></a><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h1>      <blockquote><p><strong>SpringBoot-starter-web内嵌的Tomcat无法解析jsp（Thymeleaf），需要额外添加类库：Jasper</strong></p></blockquote><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 解析jsp类库  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.embed<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat-embed-jasper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></div></figure><a id="more"></a>        <h1 id="添加上下文目录"   >          <a href="#添加上下文目录" class="heading-link"><i class="fas fa-link"></i></a><a href="#添加上下文目录" class="headerlink" title="添加上下文目录"></a>添加上下文目录</h1>      <p><img   src="https://img-blog.csdnimg.cn/20210402154650281.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"></p><p><img   src="https://img-blog.csdnimg.cn/20210402154835620.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"><br><img   src="https://img-blog.csdnimg.cn/20210402154918102.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"></p><p><img   src="https://img-blog.csdnimg.cn/20210402155329817.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"><br><strong>中途会提示是否生成文件夹，确认下就行了，最后会多个webapp文件夹，效果如下↓</strong><br><img   src="https://img-blog.csdnimg.cn/20210402155525552.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"></p>        <h1 id="指定SpringBoot的启动目录"   >          <a href="#指定SpringBoot的启动目录" class="heading-link"><i class="fas fa-link"></i></a><a href="#指定SpringBoot的启动目录" class="headerlink" title="指定SpringBoot的启动目录"></a>指定SpringBoot的启动目录</h1>      <p><img   src="https://img-blog.csdnimg.cn/20210402155626295.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"><br><strong>添加上<code>$ContentRoot$</code></strong><br><img   src="https://img-blog.csdnimg.cn/20210402155706249.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"></p>        <h1 id="设置application-properties"   >          <a href="#设置application-properties" class="heading-link"><i class="fas fa-link"></i></a><a href="#设置application-properties" class="headerlink" title="设置application.properties"></a>设置application.properties</h1>      <figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#页面默认前缀目录 默认在webapp下有别的文件夹可以，以文件夹/往下加</span><br><span class="line">spring.mvc.view.prefix=/</span><br><span class="line">#页面默认后缀目录</span><br><span class="line">spring.mvc.view.suffix=.jsp</span><br></pre></td></tr></table></div></figure>        <h1 id="测试是否可行"   >          <a href="#测试是否可行" class="heading-link"><i class="fas fa-link"></i></a><a href="#测试是否可行" class="headerlink" title="测试是否可行"></a>测试是否可行</h1>      <p><img   src="https://img-blog.csdnimg.cn/2021040216000554.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"><br>==<strong>ViewController：</strong>==</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.keafmd.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Keafmd ！</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: ViewController</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: 牛哄哄的柯南</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2021-04-02 14:47</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Blog</span>: https://keafmd.blog.csdn.net/</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;getname&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;keafmd&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;name&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;getage&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAge</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;age&quot;</span>,<span class="number">18</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;age&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p><strong>在webapp下创建name.jsp和age.jsp</strong></p><p>==<strong>name.jsp：</strong>==</p><figure class="highlight"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: lenovo</span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">4</span>/<span class="number">2</span></span><br><span class="line">  Time: <span class="number">14</span>:<span class="number">31</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;name&lt;/h1&gt;</span><br><span class="line">$&#123;name&#125;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></div></figure><p>==<strong>age.jsp：</strong>==</p><figure class="highlight"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: lenovo</span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">4</span>/<span class="number">2</span></span><br><span class="line">  Time: <span class="number">15</span>:<span class="number">29</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;age&lt;/h1&gt;</span><br><span class="line">$&#123;age&#125;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></div></figure><p><strong>———-启动程序———-</strong></p><p><strong>访问：<code>http://127.0.0.1:8080/getage</code></strong><br><img   src="https://img-blog.csdnimg.cn/20210402160347237.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"><br><strong>访问：<code>http://127.0.0.1:8080/getname</code></strong><br><img   src="https://img-blog.csdnimg.cn/20210402160420110.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"><br><strong>搞定！</strong></p><blockquote><p><strong>以上就是SpringBoot集成使用jsp（超详细）的全部内容。</strong></p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210115230629703.gif#pic_center" alt="在这里插入图片描述"></p><p><img src="https://gitee.com/Keafmd/drawing-bed/raw/master/img/timg7L0CY2U1.jpg"></p><p><strong>加油！</strong></p><p><strong>共同努力！</strong></p><p><strong>Keafmd</strong></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;添加依赖&quot;   &gt;
          &lt;a href=&quot;#添加依赖&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#添加依赖&quot; class=&quot;headerlink&quot; title=&quot;添加依赖&quot;&gt;&lt;/a&gt;添加依赖&lt;/h1&gt;
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;SpringBoot-starter-web内嵌的Tomcat无法解析jsp（Thymeleaf），需要额外添加类库：Jasper&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;div class=&quot;table-container&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 解析jsp类库  --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.apache.tomcat.embed&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;tomcat-embed-jasper&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;</summary>
    
    
    
    
    <category term="SpringBoot" scheme="https://keafmd.top/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis的动态SQL语句</title>
    <link href="https://keafmd.top/2021/02/13/Mybatis%E7%9A%84%E5%8A%A8%E6%80%81SQL%E8%AF%AD%E5%8F%A5/"/>
    <id>https://keafmd.top/2021/02/13/Mybatis%E7%9A%84%E5%8A%A8%E6%80%81SQL%E8%AF%AD%E5%8F%A5/</id>
    <published>2021-02-13T02:07:58.000Z</published>
    <updated>2021-02-13T02:12:57.815Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="项目目录"   >          <a href="#项目目录" class="heading-link"><i class="fas fa-link"></i></a><a href="#项目目录" class="headerlink" title="项目目录"></a>项目目录</h1>      <p><img   src="https://img-blog.csdnimg.cn/2021021221312397.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"></p><a id="more"></a>        <h1 id="动态-SQL-之if标签"   >          <a href="#动态-SQL-之if标签" class="heading-link"><i class="fas fa-link"></i></a><a href="#动态-SQL-之if标签" class="headerlink" title="动态 SQL 之if标签"></a>动态 SQL 之if标签</h1>              <h2 id="持久层-Dao-接口"   >          <a href="#持久层-Dao-接口" class="heading-link"><i class="fas fa-link"></i></a><a href="#持久层-Dao-接口" class="headerlink" title="持久层 Dao 接口"></a>持久层 Dao 接口</h2>      <figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据传入的参数条件</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> user 查询的条件，有可能有用户名 ，性别，或都没有</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">finduserCondition</span><span class="params">(User user)</span></span>;</span><br></pre></td></tr></table></div></figure>        <h2 id="持久层-Dao-映射配置"   >          <a href="#持久层-Dao-映射配置" class="heading-link"><i class="fas fa-link"></i></a><a href="#持久层-Dao-映射配置" class="headerlink" title="持久层 Dao 映射配置"></a>持久层 Dao 映射配置</h2>      <figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--根据条件查询--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;finduserCondition&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;userMap&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    select * from user where 1=1</span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;userName != null&quot;</span>&gt;</span></span><br><span class="line">        and username = #&#123;userName&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;userSex != null&quot;</span>&gt;</span></span><br><span class="line">        and sex = #&#123;userSex&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></div></figure>        <h2 id="测试代码"   >          <a href="#测试代码" class="heading-link"><i class="fas fa-link"></i></a><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h2>      <figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据条件查询 if标签</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testfinduserCondition</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">    User u = <span class="keyword">new</span> User();</span><br><span class="line">    u.setUserName(<span class="string">&quot;老王&quot;</span>);</span><br><span class="line">    u.setUserSex(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">    <span class="comment">//5.使用代理对象执行方法</span></span><br><span class="line">    List&lt;User&gt; users = userDao.finduserCondition(u);</span><br><span class="line">    <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>==<strong>测试结果：</strong>==<br><img   src="https://img-blog.csdnimg.cn/20210212211927937.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"></p>        <h1 id="动态-SQL-之where标签"   >          <a href="#动态-SQL-之where标签" class="heading-link"><i class="fas fa-link"></i></a><a href="#动态-SQL-之where标签" class="headerlink" title="动态 SQL 之where标签"></a>动态 SQL 之where标签</h1>      <blockquote><p><strong>为了简化上面 where 1=1 的条件拼装，我们可以采用<code>&lt;where&gt;</code>标签来简化开发。</strong></p></blockquote>        <h2 id="持久层-Dao-映射配置-1"   >          <a href="#持久层-Dao-映射配置-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#持久层-Dao-映射配置-1" class="headerlink" title="持久层 Dao 映射配置"></a>持久层 Dao 映射配置</h2>      <figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;finduserCondition&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;userMap&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    select * from user</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;userName != null&quot;</span>&gt;</span></span><br><span class="line">            and username = #&#123;userName&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;userSex != null&quot;</span>&gt;</span></span><br><span class="line">            and sex = #&#123;userSex&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></div></figure><blockquote><p><strong>效果和上面的if标签一样</strong></p></blockquote>        <h1 id="动态-SQL-之foreach标签"   >          <a href="#动态-SQL-之foreach标签" class="heading-link"><i class="fas fa-link"></i></a><a href="#动态-SQL-之foreach标签" class="headerlink" title="动态 SQL 之foreach标签"></a>动态 SQL 之foreach标签</h1>              <h2 id="需求"   >          <a href="#需求" class="heading-link"><i class="fas fa-link"></i></a><a href="#需求" class="headerlink" title="需求"></a>需求</h2>      <blockquote><p><strong>传入多个 id 查询用户信息，用下边两个 sql 实现：<br>SELECT * FROM USERS WHERE username LIKE ‘%王%’ AND (id =10 OR id =19 OR id=36)<br>SELECT * FROM USERS WHERE username LIKE ‘%王%’ AND id IN (10,19,36)</strong><br><strong>这样我们在进行范围查询时，就要将一个集合中的值，作为参数动态添加进来。</strong></p></blockquote>        <h2 id="在-QueryVo-中加入一个-List-集合用于封装参数"   >          <a href="#在-QueryVo-中加入一个-List-集合用于封装参数" class="heading-link"><i class="fas fa-link"></i></a><a href="#在-QueryVo-中加入一个-List-集合用于封装参数" class="headerlink" title="在 QueryVo 中加入一个 List 集合用于封装参数"></a>在 QueryVo 中加入一个 List 集合用于封装参数</h2>      <p>==<strong>QueryVo：</strong>==</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.keafmd.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Keafmd</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: QueryVo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: 牛哄哄的柯南</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2021-02-08 21:08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueryVo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span>  User user;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Integer&gt; ids;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">getIds</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ids;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIds</span><span class="params">(List&lt;Integer&gt; ids)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ids = ids;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.user = user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="持久层-Dao-接口-1"   >          <a href="#持久层-Dao-接口-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#持久层-Dao-接口-1" class="headerlink" title="持久层 Dao 接口"></a>持久层 Dao 接口</h2>      <figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据QueryVo中提供的id集合查询</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> vo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">findUserInIds</span><span class="params">(QueryVo vo)</span></span>;</span><br></pre></td></tr></table></div></figure>        <h2 id="持久层-Dao-映射配置-2"   >          <a href="#持久层-Dao-映射配置-2" class="heading-link"><i class="fas fa-link"></i></a><a href="#持久层-Dao-映射配置-2" class="headerlink" title="持久层 Dao 映射配置"></a>持久层 Dao 映射配置</h2>      <figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--根据QueryVo中的id集合实现查询查询用户列表--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findUserInIds&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;userMap&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;queryvo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;defaultUser&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;ids!=null and ids.size()&gt;0&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;ids&quot;</span> <span class="attr">open</span> = <span class="string">&quot;and id in (&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span> <span class="attr">item</span>=<span class="string">&quot;uid&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span>&gt;</span></span><br><span class="line">                #&#123;uid&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></div></figure>        <h2 id="测试代码-1"   >          <a href="#测试代码-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#测试代码-1" class="headerlink" title="测试代码"></a>测试代码</h2>      <figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testfindUserInIds</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">    QueryVo vo = <span class="keyword">new</span> QueryVo();</span><br><span class="line">    List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">    list.add(<span class="number">41</span>);</span><br><span class="line">    list.add(<span class="number">42</span>);</span><br><span class="line">    list.add(<span class="number">50</span>);</span><br><span class="line">    vo.setIds(list);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5.使用代理对象执行方法</span></span><br><span class="line">    List&lt;User&gt; users = userDao.findUserInIds(vo);</span><br><span class="line">    <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>==<strong>测试结果：</strong>==<br><img   src="https://img-blog.csdnimg.cn/2021021221354223.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"></p>        <h1 id="Mybatis中简化编写的-SQL-片段"   >          <a href="#Mybatis中简化编写的-SQL-片段" class="heading-link"><i class="fas fa-link"></i></a><a href="#Mybatis中简化编写的-SQL-片段" class="headerlink" title="Mybatis中简化编写的 SQL 片段"></a>Mybatis中简化编写的 SQL 片段</h1>      <blockquote><p><strong>Sql 中可将重复的 sql 提取出来，使用时用 include 引用即可，最终达到 sql 重用的目的。</strong><br><strong>这样可以简化我们每次都需要在sql语句中写的<code>select * from user</code>。</strong></p></blockquote>        <h2 id="定义代码片段"   >          <a href="#定义代码片段" class="heading-link"><i class="fas fa-link"></i></a><a href="#定义代码片段" class="headerlink" title="定义代码片段"></a>定义代码片段</h2>      <figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--了解的内容，抽取重复的sql语句--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;defaultUser&quot;</span>&gt;</span></span><br><span class="line">    select * from user</span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br></pre></td></tr></table></div></figure><blockquote><p><strong>==注意细节==：在抽取重复的sql语句尽量不要写分号<code>;</code>,因为可能还会和后面的sql语句进行拼接，有分号就会导致报错。</strong></p></blockquote>        <h2 id="引用代码片段"   >          <a href="#引用代码片段" class="heading-link"><i class="fas fa-link"></i></a><a href="#引用代码片段" class="headerlink" title="引用代码片段"></a>引用代码片段</h2>      <figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置查询所有--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;userMap&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;defaultUser&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--根据QueryVo中的id集合实现查询查询用户列表--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findUserInIds&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;userMap&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;queryvo&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;defaultUser&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;ids!=null and ids.size()&gt;0&quot;</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;ids&quot;</span> <span class="attr">open</span> = <span class="string">&quot;and id in (&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span> <span class="attr">item</span>=<span class="string">&quot;uid&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span>&gt;</span></span><br><span class="line">                 #&#123;uid&#125;</span><br><span class="line">             <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"></span><br><span class="line">         <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></div></figure><blockquote><p><strong>以上就是Mybatis的动态SQL语句的全部内容。</strong></p></blockquote><p><strong>看完如果对你有帮助，感谢支持！</strong><br><img src="https://img-blog.csdnimg.cn/20210115230629703.gif#pic_center" alt="在这里插入图片描述"></p><p><strong>加油！</strong></p><p><strong>共同努力！</strong></p><p><strong>Keafmd</strong></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;项目目录&quot;   &gt;
          &lt;a href=&quot;#项目目录&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#项目目录&quot; class=&quot;headerlink&quot; title=&quot;项目目录&quot;&gt;&lt;/a&gt;项目目录&lt;/h1&gt;
      &lt;p&gt;&lt;img   src=&quot;https://img-blog.csdnimg.cn/2021021221312397.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70&quot; style=&quot;width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;&quot;  alt=&quot;在这里插入图片描述&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="Mybatis" scheme="https://keafmd.top/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>解决访问tomcat下文件夹（如temp）显示有权限【在tomcat目录下创建文件需要管理员权限】的问题</title>
    <link href="https://keafmd.top/2021/01/30/%E8%A7%A3%E5%86%B3%E8%AE%BF%E9%97%AEtomcat%E4%B8%8B%E6%96%87%E4%BB%B6%E5%A4%B9%EF%BC%88%E5%A6%82temp%EF%BC%89%E6%98%BE%E7%A4%BA%E6%9C%89%E6%9D%83%E9%99%90%E3%80%90%E5%9C%A8tomcat%E7%9B%AE%E5%BD%95%E4%B8%8B%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%E9%9C%80%E8%A6%81%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E3%80%91%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://keafmd.top/2021/01/30/%E8%A7%A3%E5%86%B3%E8%AE%BF%E9%97%AEtomcat%E4%B8%8B%E6%96%87%E4%BB%B6%E5%A4%B9%EF%BC%88%E5%A6%82temp%EF%BC%89%E6%98%BE%E7%A4%BA%E6%9C%89%E6%9D%83%E9%99%90%E3%80%90%E5%9C%A8tomcat%E7%9B%AE%E5%BD%95%E4%B8%8B%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%E9%9C%80%E8%A6%81%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E3%80%91%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2021-01-30T15:22:26.000Z</published>
    <updated>2021-01-30T15:24:41.025Z</updated>
    
    <content type="html"><![CDATA[        <h3 id="有些时候我们会看到错误日志，显示没有权限访问tomcat下的某某目录，或者用tomcat时报出了一些错误，极有可能和我们的tomcat文件夹存在访问权限的问题有关！我们试一下在tomcat下的某些目录，特别是在temp文件夹下创建文件，看是否需要管理员权限，有时我们把tomcat装到了系统盘，就会显示需要管理员权限才可以创建文件，这样会导致很多情况下提示在tomcat的目录下存在访问权限的问题。"   >          <a href="#有些时候我们会看到错误日志，显示没有权限访问tomcat下的某某目录，或者用tomcat时报出了一些错误，极有可能和我们的tomcat文件夹存在访问权限的问题有关！我们试一下在tomcat下的某些目录，特别是在temp文件夹下创建文件，看是否需要管理员权限，有时我们把tomcat装到了系统盘，就会显示需要管理员权限才可以创建文件，这样会导致很多情况下提示在tomcat的目录下存在访问权限的问题。" class="heading-link"><i class="fas fa-link"></i></a><a href="#有些时候我们会看到错误日志，显示没有权限访问tomcat下的某某目录，或者用tomcat时报出了一些错误，极有可能和我们的tomcat文件夹存在访问权限的问题有关！我们试一下在tomcat下的某些目录，特别是在temp文件夹下创建文件，看是否需要管理员权限，有时我们把tomcat装到了系统盘，就会显示需要管理员权限才可以创建文件，这样会导致很多情况下提示在tomcat的目录下存在访问权限的问题。" class="headerlink" title="有些时候我们会看到错误日志，显示没有权限访问tomcat下的某某目录，或者用tomcat时报出了一些错误，极有可能和我们的tomcat文件夹存在访问权限的问题有关！我们试一下在tomcat下的某些目录，特别是在temp文件夹下创建文件，看是否需要管理员权限，有时我们把tomcat装到了系统盘，就会显示需要管理员权限才可以创建文件，这样会导致很多情况下提示在tomcat的目录下存在访问权限的问题。"></a>有些时候我们会看到错误日志，显示没有权限访问tomcat下的某某目录，或者用tomcat时报出了一些错误，极有可能和我们的tomcat文件夹存在访问权限的问题有关！我们试一下在tomcat下的某些目录，特别是在temp文件夹下创建文件，看是否需要管理员权限，有时我们把tomcat装到了系统盘，就会显示需要管理员权限才可以创建文件，这样会导致很多情况下提示在tomcat的目录下存在访问权限的问题。</h3>              <h1 id="解决办法："   >          <a href="#解决办法：" class="heading-link"><i class="fas fa-link"></i></a><a href="#解决办法：" class="headerlink" title="解决办法："></a><font color=red>解决办法：</font></h1>      <a id="more"></a><p> <strong>进到tomcat所在的文件夹，我的是：D:\Program Files\apache\apache-tomcat-8.5.60（我的D盘是当初C盘分出来的，所以存在权限问题）</strong><br><img   src="https://img-blog.csdnimg.cn/20210130225015329.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"><br> <strong>在apache目录下：==鼠标右键–&gt;属性–&gt;安全–&gt;编辑==把==ALL APPLICATION PACKAGES==和==User(xxxx\Users)==下的访问权限==全部允许==就可以了，基本上就是==完全控制和修改==没有打上勾，勾上就可以了。</strong><br><img   src="https://img-blog.csdnimg.cn/20210130225818409.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"><br><img   src="https://img-blog.csdnimg.cn/20210130225745956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"><br> <strong>这样基本就可以解决很多时候由于访问tomcat而导致的权限问题了。</strong></p><blockquote><p><strong>以上就是解决访问tomcat下文件夹（如temp）显示有权限【在tomcat目录下创建文件需要管理员权限】的问题的全部内容。</strong></p></blockquote><p><strong>看完如果对你有帮助，感谢支持！</strong><br><img src="https://img-blog.csdnimg.cn/20210115230629703.gif#pic_center" alt="在这里插入图片描述"></p><p><strong>加油！</strong></p><p><strong>共同努力！</strong></p><p><strong>Keafmd</strong></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;有些时候我们会看到错误日志，显示没有权限访问tomcat下的某某目录，或者用tomcat时报出了一些错误，极有可能和我们的tomcat文件夹存在访问权限的问题有关！我们试一下在tomcat下的某些目录，特别是在temp文件夹下创建文件，看是否需要管理员权限，有时我们把tomcat装到了系统盘，就会显示需要管理员权限才可以创建文件，这样会导致很多情况下提示在tomcat的目录下存在访问权限的问题。&quot;   &gt;
          &lt;a href=&quot;#有些时候我们会看到错误日志，显示没有权限访问tomcat下的某某目录，或者用tomcat时报出了一些错误，极有可能和我们的tomcat文件夹存在访问权限的问题有关！我们试一下在tomcat下的某些目录，特别是在temp文件夹下创建文件，看是否需要管理员权限，有时我们把tomcat装到了系统盘，就会显示需要管理员权限才可以创建文件，这样会导致很多情况下提示在tomcat的目录下存在访问权限的问题。&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#有些时候我们会看到错误日志，显示没有权限访问tomcat下的某某目录，或者用tomcat时报出了一些错误，极有可能和我们的tomcat文件夹存在访问权限的问题有关！我们试一下在tomcat下的某些目录，特别是在temp文件夹下创建文件，看是否需要管理员权限，有时我们把tomcat装到了系统盘，就会显示需要管理员权限才可以创建文件，这样会导致很多情况下提示在tomcat的目录下存在访问权限的问题。&quot; class=&quot;headerlink&quot; title=&quot;有些时候我们会看到错误日志，显示没有权限访问tomcat下的某某目录，或者用tomcat时报出了一些错误，极有可能和我们的tomcat文件夹存在访问权限的问题有关！我们试一下在tomcat下的某些目录，特别是在temp文件夹下创建文件，看是否需要管理员权限，有时我们把tomcat装到了系统盘，就会显示需要管理员权限才可以创建文件，这样会导致很多情况下提示在tomcat的目录下存在访问权限的问题。&quot;&gt;&lt;/a&gt;有些时候我们会看到错误日志，显示没有权限访问tomcat下的某某目录，或者用tomcat时报出了一些错误，极有可能和我们的tomcat文件夹存在访问权限的问题有关！我们试一下在tomcat下的某些目录，特别是在temp文件夹下创建文件，看是否需要管理员权限，有时我们把tomcat装到了系统盘，就会显示需要管理员权限才可以创建文件，这样会导致很多情况下提示在tomcat的目录下存在访问权限的问题。&lt;/h3&gt;
      
        &lt;h1 id=&quot;解决办法：&quot;   &gt;
          &lt;a href=&quot;#解决办法：&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#解决办法：&quot; class=&quot;headerlink&quot; title=&quot;解决办法：&quot;&gt;&lt;/a&gt;&lt;font color=red&gt;解决办法：&lt;/font&gt;&lt;/h1&gt;</summary>
    
    
    
    
    <category term="tomcat" scheme="https://keafmd.top/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>Spring入门案例【spring框架创建对象】（超详细）</title>
    <link href="https://keafmd.top/2021/01/26/Spring%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8B%E3%80%90spring%E6%A1%86%E6%9E%B6%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E3%80%91%EF%BC%88%E8%B6%85%E8%AF%A6%E7%BB%86%EF%BC%89/"/>
    <id>https://keafmd.top/2021/01/26/Spring%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8B%E3%80%90spring%E6%A1%86%E6%9E%B6%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E3%80%91%EF%BC%88%E8%B6%85%E8%AF%A6%E7%BB%86%EF%BC%89/</id>
    <published>2021-01-26T10:38:50.000Z</published>
    <updated>2021-01-26T14:27:53.766Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="Spring框架概述"   >          <a href="#Spring框架概述" class="heading-link"><i class="fas fa-link"></i></a><a href="#Spring框架概述" class="headerlink" title="Spring框架概述"></a>Spring框架概述</h1>      <p><strong>（1）Spring是轻量级的开源的JavaEE框架。<br>（2）Spring可以解决企业应用开发的复杂性。<br>（3）Spring框架主要由七部分组成，分别是 Spring Core、 Spring AOP、 Spring ORM、 Spring DAO、Spring Context、 Spring Web和 Spring Web MVC。<br>（4）<font color=red>Spring有两个核心部分：IOC和AOP<br>&nbsp; &nbsp;&nbsp;1、IOC：控制反转，把创建对象的过程交给Spring进行管理。<br>  &nbsp;&nbsp; &nbsp;2、AOP：面向切面，不修改源代码进行功能增强。</font></strong></p><a id="more"></a>        <h1 id="Spring框架特点"   >          <a href="#Spring框架特点" class="heading-link"><i class="fas fa-link"></i></a><a href="#Spring框架特点" class="headerlink" title="Spring框架特点"></a>Spring框架特点</h1>      <p><strong>（1）方便解耦，简化开发。<br>（2）AOP编程支持。<br>（3）方便程序测试。<br>（4）方便和其他框架进行整合。<br>（5）方便进行事务操作。<br>（6）降低API开发难度。</strong></p>        <h1 id="准备过程"   >          <a href="#准备过程" class="heading-link"><i class="fas fa-link"></i></a><a href="#准备过程" class="headerlink" title="准备过程"></a>准备过程</h1>      <p><strong>本文是按照spring-5.2.6进行演示。</strong></p>        <h2 id="下载-spring-5-2-6-RELEASE-dist-zip"   >          <a href="#下载-spring-5-2-6-RELEASE-dist-zip" class="heading-link"><i class="fas fa-link"></i></a><a href="#下载-spring-5-2-6-RELEASE-dist-zip" class="headerlink" title="下载 spring-5.2.6.RELEASE-dist.zip"></a>下载 spring-5.2.6.RELEASE-dist.zip</h2>      <p><strong>下载地址：<span class="exturl"><a class="exturl__link"   href="https://repo.spring.io/release/org/springframework/spring/5.2.6.RELEASE/" > spring-5.2.6</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></strong><br><img   src="https://img-blog.csdnimg.cn/20210114231911473.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"></p>        <h2 id="下载-commons-logging-1-2-bin-zip"   >          <a href="#下载-commons-logging-1-2-bin-zip" class="heading-link"><i class="fas fa-link"></i></a><a href="#下载-commons-logging-1-2-bin-zip" class="headerlink" title="下载 commons-logging-1.2-bin.zip"></a>下载 commons-logging-1.2-bin.zip</h2>      <p><strong>下载地址：<span class="exturl"><a class="exturl__link"   href="http://commons.apache.org/proper/commons-logging/download_logging.cgi" >commons-logging-1.2</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></strong><br><img   src="https://img-blog.csdnimg.cn/20210114232119862.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"></p>        <h2 id="把两个zip解压挑选核心基础的五个jar包放到新创建的文件夹中"   >          <a href="#把两个zip解压挑选核心基础的五个jar包放到新创建的文件夹中" class="heading-link"><i class="fas fa-link"></i></a><a href="#把两个zip解压挑选核心基础的五个jar包放到新创建的文件夹中" class="headerlink" title="把两个zip解压挑选核心基础的五个jar包放到新创建的文件夹中"></a>把两个zip解压挑选核心基础的五个jar包放到新创建的文件夹中</h2>      <p><strong>如下图所示即可，创建个新的文件夹core用于存放核心基础的五个jar包。</strong><br><img   src="https://img-blog.csdnimg.cn/20210114232403922.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"><br><strong>从 spring和commons中复制出来这五个。</strong><br><img   src="https://img-blog.csdnimg.cn/20210114232708594.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"><br><strong>Spring中四个jar包的路径：spring-framework-5.2.6.RELEASE\libs下</strong><br><strong>从这里面复制出来放到core里面</strong><br><img   src="https://img-blog.csdnimg.cn/20210114232921741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"><br><strong>commons中一个jar包的路径：commons-logging-1.2下</strong><br><strong>把这个复制出来放到core里面</strong><br><img   src="https://img-blog.csdnimg.cn/20210114233108249.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"><br><strong>操作完成以上步骤后就可以进入idea操作了</strong></p>        <h1 id="创建一个新的Java项目"   >          <a href="#创建一个新的Java项目" class="heading-link"><i class="fas fa-link"></i></a><a href="#创建一个新的Java项目" class="headerlink" title="创建一个新的Java项目"></a>创建一个新的Java项目</h1>      <p><strong>New Project</strong><br><img   src="https://img-blog.csdnimg.cn/20210114233421875.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"><br><strong>勾选上继续下一步</strong><br><img   src="https://img-blog.csdnimg.cn/20210114233511869.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"><br><strong>写个项目名，Base package根据自己想命名的改，也可以不改，Finish。</strong><br><img   src="https://img-blog.csdnimg.cn/20210114233643327.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"></p>        <h1 id="创建lib文件夹，导入jar包"   >          <a href="#创建lib文件夹，导入jar包" class="heading-link"><i class="fas fa-link"></i></a><a href="#创建lib文件夹，导入jar包" class="headerlink" title="创建lib文件夹，导入jar包"></a>创建lib文件夹，导入jar包</h1>      <p><strong>在这个位置创建好lib文件夹后，直接从刚才准备好的core文件夹中把那五个核心jar包复制粘贴过来即可。</strong><br><img   src="https://img-blog.csdnimg.cn/20210114234353903.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"></p>        <h1 id="添加依赖"   >          <a href="#添加依赖" class="heading-link"><i class="fas fa-link"></i></a><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h1>      <p><strong>1、如图所示点击打开。</strong><br><img   src="https://img-blog.csdnimg.cn/20210114234639631.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"><br><strong>2、继续按图操作</strong><br><img   src="https://img-blog.csdnimg.cn/20210114234747976.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"><br><strong>3、找到lib把那五个jar包全部选中点击OK</strong><br><img   src="https://img-blog.csdnimg.cn/20210114234915642.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"><br><strong>4、这样就导入进来了然后点击</strong><br><img   src="https://img-blog.csdnimg.cn/20210114235234132.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"></p>        <h1 id="创建个User类"   >          <a href="#创建个User类" class="heading-link"><i class="fas fa-link"></i></a><a href="#创建个User类" class="headerlink" title="创建个User类"></a>创建个User类</h1>      <p><strong>有一些是我写的其它的，忽略即可。</strong><br><img   src="https://img-blog.csdnimg.cn/20210114234156235.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"><br>==<strong>User类代码：</strong>==</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.Keafmd.spring5;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Keafmd</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: User</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: User类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: 牛哄哄的柯南</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2021-01-14 19:58</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//只写个方法就行了</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;add....&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h1 id="在src下创建bean1-xml"   >          <a href="#在src下创建bean1-xml" class="heading-link"><i class="fas fa-link"></i></a><a href="#在src下创建bean1-xml" class="headerlink" title="在src下创建bean1.xml"></a>在src下创建bean1.xml</h1>      <p><strong>我的写的有些其它内容，具体代码看下面的代码即可。</strong><br><img   src="https://img-blog.csdnimg.cn/2021011423552534.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"></p><p>==<strong>bean1.xml：</strong>==</p><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 添加这一行就可以了,配置User对象的创建--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.Keafmd.spring5.User&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></div></figure>        <h1 id="创建测试样例"   >          <a href="#创建测试样例" class="heading-link"><i class="fas fa-link"></i></a><a href="#创建测试样例" class="headerlink" title="创建测试样例"></a>创建测试样例</h1>      <p><strong>在如图位置创建即可。</strong><br><img   src="https://img-blog.csdnimg.cn/20210115000039864.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"><br>==<strong>测试代码：</strong>==</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.Keafmd.spring5.testdemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.Keafmd.spring5.User;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Keafmd</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: TestSpring5</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: 牛哄哄的柯南</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2021-01-14 20:06</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestSpring5</span> </span>&#123;</span><br><span class="line"><span class="comment">//写完 @Test有红色提醒是因为没导入，直接导入就可以了。</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAdd</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//1、载Spring的配置文件</span></span><br><span class="line">        ApplicationContext applicationContext = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;bean1.xml&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2、获取配置文件中创建的对象  默认是执行无参的构造方法创建</span></span><br><span class="line">        User user =applicationContext.getBean(<span class="string">&quot;user&quot;</span>, User.class);</span><br><span class="line"></span><br><span class="line">        System.out.println(user);</span><br><span class="line">        user.add();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>==<strong>测试结果：</strong>==</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">com.Keafmd.spring5.User@150c158</span><br><span class="line">add....</span><br><span class="line"></span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br></pre></td></tr></table></div></figure><p><strong>运行测试代码，输出user对象的地址和add方法的输出语句就证明完成了入门案例。Spring的核心思想是IOC，即所有对象的创建都是通过Spring，而不需要自己手动生成，这样我们就完成了用spring框架创建对象的入门案例。</strong></p><p><strong>写作不易，看完如果对你有帮助，感谢点赞支持！<br>如果你是电脑端，看到右下角的 “==一键三连==” 了吗，没错点它[哈哈]</strong><br><img src="https://img-blog.csdnimg.cn/20201023201048810.gif#pic_center" alt="在这里插入图片描述"><br><strong>加油！</strong></p><p><strong>共同努力！</strong></p><p><strong>Keafmd</strong></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Spring框架概述&quot;   &gt;
          &lt;a href=&quot;#Spring框架概述&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#Spring框架概述&quot; class=&quot;headerlink&quot; title=&quot;Spring框架概述&quot;&gt;&lt;/a&gt;Spring框架概述&lt;/h1&gt;
      &lt;p&gt;&lt;strong&gt;（1）Spring是轻量级的开源的JavaEE框架。&lt;br&gt;（2）Spring可以解决企业应用开发的复杂性。&lt;br&gt;（3）Spring框架主要由七部分组成，分别是 Spring Core、 Spring AOP、 Spring ORM、 Spring DAO、Spring Context、 Spring Web和 Spring Web MVC。&lt;br&gt;（4）&lt;font color=red&gt;Spring有两个核心部分：IOC和AOP&lt;br&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;1、IOC：控制反转，把创建对象的过程交给Spring进行管理。&lt;br&gt;  &amp;nbsp;&amp;nbsp; &amp;nbsp;2、AOP：面向切面，不修改源代码进行功能增强。&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>SpringMVC中常用注解（案例讲解）</title>
    <link href="https://keafmd.top/2021/01/25/SpringMVC%E4%B8%AD%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3%EF%BC%88%E6%A1%88%E4%BE%8B%E8%AE%B2%E8%A7%A3%EF%BC%89/"/>
    <id>https://keafmd.top/2021/01/25/SpringMVC%E4%B8%AD%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3%EF%BC%88%E6%A1%88%E4%BE%8B%E8%AE%B2%E8%A7%A3%EF%BC%89/</id>
    <published>2021-01-25T14:13:45.000Z</published>
    <updated>2021-01-26T14:33:08.273Z</updated>
    
    <content type="html"><![CDATA[        <h3 id="SpringMVC中常用注解"   >          <a href="#SpringMVC中常用注解" class="heading-link"><i class="fas fa-link"></i></a><a href="#SpringMVC中常用注解" class="headerlink" title="SpringMVC中常用注解"></a>SpringMVC中常用注解</h3>      <a id="more"></a>        <h1 id="RequestParam"   >          <a href="#RequestParam" class="heading-link"><i class="fas fa-link"></i></a><a href="#RequestParam" class="headerlink" title="RequestParam"></a>RequestParam</h1>      <p><font size =5><strong>说明</strong></font></p><blockquote><p><strong>==作用：==<br>把请求中指定名称的参数给控制器中的形参赋值。<br>==属性：==<br>value：请求参数中的名称。<br>required：请求参数中是否必须提供此参数。默认值：true。表示必须提供，如果不提供将报错。</strong></p></blockquote><p><font size =5><strong>代码示例</strong></font></p><p>==<strong>jsp代码：</strong>==</p><figure class="highlight"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Keafmd</span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">1</span>/<span class="number">25</span></span><br><span class="line">  Time: <span class="number">10</span>:<span class="number">48</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;常用注解&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- requestParams 注解的使用 --&gt;</span><br><span class="line">    &lt;a href=&quot;anno/testRequestParam?name=keafmd&quot;&gt;RequestParam&lt;/a&gt;&lt;br/&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></div></figure><p>==<strong>控制器代码：</strong>==</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.Keafmd.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.Keafmd.domain.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.ModelMap;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.support.SessionStatus;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Keafmd</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: AnnoConteoller</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 注解的控制器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: 牛哄哄的柯南</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2021-01-25 10:50</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/anno&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AnnoConteoller</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * requestParams 注解的使用</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/testRequestParam&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">testRequestParam</span><span class="params">(<span class="meta">@RequestParam(value=&quot;name&quot;)</span> String username)</span></span>&#123;</span><br><span class="line">        <span class="comment">// @RequestParam(value=&quot;name&quot;) 必须传name,required：请求参数中是否必须提供此参数，默认值是true，必须提供</span></span><br><span class="line">        <span class="comment">// 获得当前类名</span></span><br><span class="line">        String clazz = Thread.currentThread().getStackTrace()[<span class="number">1</span>].getClassName();</span><br><span class="line">        <span class="comment">// 获得当前方法名</span></span><br><span class="line">        String method = Thread.currentThread().getStackTrace()[<span class="number">1</span>].getMethodName();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;执行了：&quot;</span>+clazz+<span class="string">&quot; - &quot;</span>+method);</span><br><span class="line">        System.out.println(<span class="string">&quot;username:&quot;</span>+username);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>==<strong>输出结果：</strong>==</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">执行了：com.Keafmd.controller.AnnoConteoller - testRequestParam</span><br><span class="line">username:keafmd</span><br></pre></td></tr></table></div></figure><blockquote><p><strong>这样我们在href中传入name就会赋值给username。</strong></p></blockquote>        <h1 id="RequestBody"   >          <a href="#RequestBody" class="heading-link"><i class="fas fa-link"></i></a><a href="#RequestBody" class="headerlink" title="RequestBody"></a>RequestBody</h1>      <p><font size =5><strong>说明</strong></font></p><blockquote><p><strong>==作用：==<br>用于获取请求体内容。直接使用得到是 key=value&amp;key=value…结构的数据。<br>get 请求方式不适用。<br>==属性：==<br>required：是否必须有请求体。默认值是:true。当取值为 true 时,get 请求方式会报错。如果取值为 false，get 请求得到是 null。</strong></p></blockquote><p><font size =5><strong>代码示例</strong></font></p><p>==<strong>jsp代码：</strong>==</p><figure class="highlight"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">&quot;anno/testRequestBody&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">        用户姓名：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;uname&quot;</span> /&gt;&lt;br/&gt;</span><br><span class="line">        用户年龄：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;age&quot;</span> /&gt;&lt;br/&gt;</span><br><span class="line">        用户生日：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;birthday&quot;</span> /&gt;&lt;br/&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></div></figure><p>==<strong>控制器代码：</strong>==</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 获取到请求体的内容 RequestBody</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/testRequestBody&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testRequestBody</span><span class="params">(<span class="meta">@RequestBody</span> String body)</span></span>&#123;</span><br><span class="line">    String method = Thread.currentThread().getStackTrace()[<span class="number">1</span>].getMethodName();</span><br><span class="line">    System.out.println(<span class="string">&quot;执行了：&quot;</span>+<span class="string">&quot; &quot;</span>+method);</span><br><span class="line">    System.out.println(<span class="string">&quot;body:&quot;</span>+body);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>==<strong>输出结果：</strong>==</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">执行了： testRequestBody</span><br><span class="line">body:uname=Keafmd&amp;age=<span class="number">21</span>&amp;birthday=<span class="number">2000</span>-<span class="number">01</span>-<span class="number">01</span></span><br></pre></td></tr></table></div></figure>        <h1 id="PathVaribale"   >          <a href="#PathVaribale" class="heading-link"><i class="fas fa-link"></i></a><a href="#PathVaribale" class="headerlink" title="PathVaribale"></a>PathVaribale</h1>              <h2 id="先了解下REST-风格-URL"   >          <a href="#先了解下REST-风格-URL" class="heading-link"><i class="fas fa-link"></i></a><a href="#先了解下REST-风格-URL" class="headerlink" title="先了解下REST 风格 URL"></a>先了解下REST 风格 URL</h2>      <blockquote><p><strong>REST（英文：Representational State Transfer，简称 REST）描述了一个架构样式的网络系统，比如 web 应用程序。值得注意的是 REST 并没有一个明确的标准，而更像是一种设计的风格。</strong><br><img   src="https://img-blog.csdnimg.cn/20210125191242816.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4MzkxNw==,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg4Mzkpx;"  alt="在这里插入图片描述"></p></blockquote><p><font size =5><strong>说明</strong></font></p><blockquote><p><strong>==作用：==<br>用于绑定 url 中的占位符。例如：请求 url 中 /delete/{id}，这个{id}就是 url 占位符。<br>url 支持占位符是 spring3.0 之后加入的。是 springmvc 支持 rest 风格 URL 的一个重要标志。<br>==属性：==<br>value：用于指定 url 中占位符名称。<br>required：是否必须提供占位符。</strong></p></blockquote><p><font size =5><strong>代码示例</strong></font></p><p>==<strong>jsp代码：</strong>==</p><figure class="highlight"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;anno/testPathVariable/10&quot;&gt;testPathVariable&lt;/a&gt;&lt;br/&gt;</span><br></pre></td></tr></table></div></figure><p>==<strong>控制器代码：</strong>==</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* PathVariable</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/testPathVariable/&#123;sid&#125;&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testPathVariable</span><span class="params">(<span class="meta">@PathVariable(name=&quot;sid&quot;)</span> String id)</span></span>&#123;</span><br><span class="line">   <span class="comment">// 获得当前方法名</span></span><br><span class="line">   String method = Thread.currentThread().getStackTrace()[<span class="number">1</span>].getMethodName();</span><br><span class="line">   System.out.println(<span class="string">&quot;执行了：&quot;</span>+<span class="string">&quot; &quot;</span>+method);</span><br><span class="line">   System.out.println(<span class="string">&quot;id:&quot;</span>+id);</span><br><span class="line">   <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>==<strong>输出结果：</strong>==</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">执行了： testPathVariable</span><br><span class="line">id:<span class="number">10</span></span><br></pre></td></tr></table></div></figure>        <h1 id="RequestHeader"   >          <a href="#RequestHeader" class="heading-link"><i class="fas fa-link"></i></a><a href="#RequestHeader" class="headerlink" title="RequestHeader"></a>RequestHeader</h1>      <p><font size =5><strong>说明</strong></font></p><blockquote><p><strong>==作用：==<br>用于获取请求消息头。<br>==属性：==<br>value：提供消息头名称<br>required：是否必须有此消息头<br>==提示：==<br>在实际开发中一般不常用</strong></p></blockquote><p><font size =5><strong>代码示例</strong></font></p><p>==<strong>jsp代码：</strong>==</p><figure class="highlight"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;anno/testRequestHeader&quot;&gt;testRequestHeader&lt;/a&gt;&lt;br/&gt;</span><br></pre></td></tr></table></div></figure><p>==<strong>控制器代码：</strong>==</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* RequestHeader获取请求头的值  不常用</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> head</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/testRequestHeader&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testRequestHeader</span><span class="params">(<span class="meta">@RequestHeader(value = &quot;Accept&quot;)</span> String head)</span></span>&#123;</span><br><span class="line">   <span class="comment">// 获得当前方法名</span></span><br><span class="line">   String method = Thread.currentThread().getStackTrace()[<span class="number">1</span>].getMethodName();</span><br><span class="line">   System.out.println(<span class="string">&quot;执行了：&quot;</span>+<span class="string">&quot; &quot;</span>+method);</span><br><span class="line"></span><br><span class="line">   System.out.println(<span class="string">&quot;head:&quot;</span>+head);</span><br><span class="line">   <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>==<strong>输出结果：</strong>==</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">执行了： testRequestHeader</span><br><span class="line">head:text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,image/apng,*<span class="comment">/*;q=0.8,application/signed-exchange;v=b3</span></span><br></pre></td></tr></table></div></figure>        <h1 id="CookieValue"   >          <a href="#CookieValue" class="heading-link"><i class="fas fa-link"></i></a><a href="#CookieValue" class="headerlink" title="CookieValue"></a>CookieValue</h1>      <p><font size =5><strong>说明</strong></font></p><blockquote><p><strong>==作用：==<br>用于把指定 cookie 名称的值传入控制器方法参数。<br>==属性：==<br>value：指定 cookie 的名称。<br>required：是否必须有此 cookie。</strong></p></blockquote><p><font size =5><strong>代码示例</strong></font></p><p>==<strong>jsp代码：</strong>==</p><figure class="highlight"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;anno/testCookieValue&quot;&gt;testCookValue&lt;/a&gt;&lt;br/&gt;</span><br></pre></td></tr></table></div></figure><p>==<strong>控制器代码：</strong>==</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * CookieValue 不常用</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> cookievalue</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/testCookieValue&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testCookieValue</span><span class="params">(<span class="meta">@CookieValue(value = &quot;JSESSIONID&quot;)</span> String cookievalue)</span></span>&#123;</span><br><span class="line">    <span class="comment">// 获得当前方法名</span></span><br><span class="line">    String method = Thread.currentThread().getStackTrace()[<span class="number">1</span>].getMethodName();</span><br><span class="line">    System.out.println(<span class="string">&quot;执行了：&quot;</span>+<span class="string">&quot; &quot;</span>+method);</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;cookievalue:&quot;</span>+cookievalue);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>==<strong>输出结果：</strong>==</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">执行了： testCookieValue</span><br><span class="line">cookievalue:DCCFE2C1F975AC04D4F55973ADA5C89C</span><br></pre></td></tr></table></div></figure>        <h1 id="ModelAttribute"   >          <a href="#ModelAttribute" class="heading-link"><i class="fas fa-link"></i></a><a href="#ModelAttribute" class="headerlink" title="ModelAttribute"></a>ModelAttribute</h1>      <p><font size =5><strong>说明</strong></font></p><blockquote><p><strong>==作用：==<br>该注解是 SpringMVC4.3 版本以后新加入的。它可以用于修饰方法和参数。<br>出现在方法上，表示==当前方法会在控制器的方法执行之前，先执行==。它可以修饰没有返回值的方法，也可以修饰有具体返回值的方法。<br>出现在参数上，获取指定的数据给参数赋值。<br>==属性：==<br>value：用于获取数据的 key。key 可以是 POJO 的属性名称，也可以是 map 结构的 key。<br>==应用场景：==<br>当表单提交数据不是完整的实体类数据时，保证没有提交数据的字段使用数据库对象原来的数据。</strong></p></blockquote><p><font size =5><strong>代码示例</strong></font></p><p>==<strong>jsp代码：</strong>==</p><figure class="highlight"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">&quot;anno/testModelAttribute&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">用户姓名：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;uname&quot;</span> /&gt;&lt;br/&gt;</span><br><span class="line">    用户年龄：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;age&quot;</span> /&gt;&lt;br/&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></div></figure>        <h2 id="修饰的方法有返回值"   >          <a href="#修饰的方法有返回值" class="heading-link"><i class="fas fa-link"></i></a><a href="#修饰的方法有返回值" class="headerlink" title="修饰的方法有返回值"></a>修饰的方法有返回值</h2>      <p>==<strong>控制器代码：</strong>==</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ModelAttribute</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/testModelAttribute&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testModelAttribute</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line">    <span class="comment">// 获得当前方法名</span></span><br><span class="line">    String method = Thread.currentThread().getStackTrace()[<span class="number">1</span>].getMethodName();</span><br><span class="line">    System.out.println(<span class="string">&quot;执行了：&quot;</span>+<span class="string">&quot; &quot;</span>+method);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//有返回值</span></span><br><span class="line"><span class="meta">@ModelAttribute</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">showUser</span><span class="params">(String uname)</span></span>&#123;</span><br><span class="line">    String method = Thread.currentThread().getStackTrace()[<span class="number">1</span>].getMethodName();</span><br><span class="line">    System.out.println(<span class="string">&quot;执行了：&quot;</span>+<span class="string">&quot; &quot;</span>+method);</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setUname(uname);</span><br><span class="line">    user.setAge(<span class="number">20</span>);</span><br><span class="line">    user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">    <span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>==<strong>输出结果：</strong>==</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">执行了： testModelAttribute</span><br><span class="line">User&#123;uname=<span class="string">&#x27;牛哄哄的柯南&#x27;</span>, age=<span class="number">21</span>, birthday=Mon Jan <span class="number">25</span> <span class="number">19</span>:<span class="number">34</span>:<span class="number">46</span> CST <span class="number">2021</span>&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="修饰的方法没有返回值"   >          <a href="#修饰的方法没有返回值" class="heading-link"><i class="fas fa-link"></i></a><a href="#修饰的方法没有返回值" class="headerlink" title="修饰的方法没有返回值"></a>修饰的方法没有返回值</h2>      <blockquote><p><strong>==注意==：没有返回值的时候利用Map把参数传回去，testModelAttribute的参数User前加上@ModelAttribute(“abc”)接收Map传回的数据。</strong></p></blockquote><p>==<strong>控制器代码：</strong>==</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ModelAttribute</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/testModelAttribute&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testModelAttribute</span><span class="params">(<span class="meta">@ModelAttribute(&quot;abc&quot;)</span>User user)</span></span>&#123;</span><br><span class="line">    <span class="comment">// 获得当前方法名</span></span><br><span class="line">    String method = Thread.currentThread().getStackTrace()[<span class="number">1</span>].getMethodName();</span><br><span class="line">    System.out.println(<span class="string">&quot;执行了：&quot;</span>+<span class="string">&quot; &quot;</span>+method);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//无返回值</span></span><br><span class="line"><span class="meta">@ModelAttribute</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showUser</span><span class="params">(String uname, Map&lt;String,User&gt; map)</span></span>&#123;</span><br><span class="line">    String method = Thread.currentThread().getStackTrace()[<span class="number">1</span>].getMethodName();</span><br><span class="line">    System.out.println(<span class="string">&quot;执行了：&quot;</span>+<span class="string">&quot; &quot;</span>+method);</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setUname(uname);</span><br><span class="line">    user.setAge(<span class="number">20</span>);</span><br><span class="line">    user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">    map.put(<span class="string">&quot;abc&quot;</span>,user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>==<strong>输出结果：</strong>==</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">执行了： testModelAttribute</span><br><span class="line">User&#123;uname=<span class="string">&#x27;牛哄哄的柯南&#x27;</span>, age=<span class="number">21</span>, birthday=Mon Jan <span class="number">25</span> <span class="number">19</span>:<span class="number">32</span>:<span class="number">20</span> CST <span class="number">2021</span>&#125;</span><br></pre></td></tr></table></div></figure>        <h1 id="SessionAttribute"   >          <a href="#SessionAttribute" class="heading-link"><i class="fas fa-link"></i></a><a href="#SessionAttribute" class="headerlink" title="SessionAttribute"></a>SessionAttribute</h1>      <p><font size =5><strong>说明</strong></font></p><blockquote><p><strong>==作用：==<br>用于多次执行控制器方法间的参数共享。<br>==属性：==<br>value：用于指定存入的属性名称<br>type：用于指定存入的数据类型。</strong></p></blockquote><p><font size =5><strong>代码示例</strong></font></p><p>==<strong>jsp代码：</strong>==</p><figure class="highlight"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;anno/testSessionAttributes&quot;&gt;存入SessionAttributes&lt;/a&gt;&lt;br/&gt;</span><br><span class="line">&lt;a href=&quot;anno/getSessionAttributes&quot;&gt;获取SessionAttributes&lt;/a&gt;&lt;br/&gt;</span><br><span class="line">&lt;a href=&quot;anno/delSessionAttributes&quot;&gt;清除SessionAttributes&lt;/a&gt;&lt;br/&gt;</span><br></pre></td></tr></table></div></figure><p>==<strong>控制器代码：</strong>==</p><blockquote><p><strong>注意：需要在类的上面添加<code>@SessionAttributes(value = &#123;&quot;msg&quot;&#125;) //把msg=牛哄哄的柯南存到session域中</code>。</strong></p></blockquote><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.Keafmd.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.Keafmd.domain.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.ModelMap;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.support.SessionStatus;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Keafmd</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: AnnoConteoller</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 注解的控制器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: 牛哄哄的柯南</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2021-01-25 10:50</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/anno&quot;)</span></span><br><span class="line"><span class="meta">@SessionAttributes(value = &#123;&quot;msg&quot;&#125;)</span> <span class="comment">//把msg=牛哄哄的柯南存到session域中</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AnnoConteoller</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * SessionAttributes注解，存入msg</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/testSessionAttributes&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">testSessionAttributes</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 获得当前方法名</span></span><br><span class="line">        String method = Thread.currentThread().getStackTrace()[<span class="number">1</span>].getMethodName();</span><br><span class="line">        System.out.println(<span class="string">&quot;执行了：&quot;</span>+<span class="string">&quot; &quot;</span>+method);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//底层会存到Request域中</span></span><br><span class="line">        model.addAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;牛哄哄的柯南&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> modelMap</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/getSessionAttributes&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSessionAttributes</span><span class="params">(ModelMap modelMap)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 获得当前方法名</span></span><br><span class="line">        String method = Thread.currentThread().getStackTrace()[<span class="number">1</span>].getMethodName();</span><br><span class="line">        System.out.println(<span class="string">&quot;执行了：&quot;</span>+<span class="string">&quot; &quot;</span>+method);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//从session域中取出来</span></span><br><span class="line">        String msg = (String)modelMap.get(<span class="string">&quot;msg&quot;</span>);</span><br><span class="line">        System.out.println(msg);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 清除</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sessionStatus</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/delSessionAttributes&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">delSessionAttributes</span><span class="params">(SessionStatus sessionStatus)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 获得当前方法名</span></span><br><span class="line">        String method = Thread.currentThread().getStackTrace()[<span class="number">1</span>].getMethodName();</span><br><span class="line">        System.out.println(<span class="string">&quot;执行了：&quot;</span>+<span class="string">&quot; &quot;</span>+method);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//从session域中清除</span></span><br><span class="line">        sessionStatus.setComplete();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></div></figure><blockquote><p><strong>依次点击存入-&gt;获取-&gt;清除-&gt;获取。</strong></p></blockquote><p>==<strong>输出结果：</strong>==</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">执行了： testSessionAttributes</span><br><span class="line">执行了： getSessionAttributes</span><br><span class="line">牛哄哄的柯南</span><br><span class="line">执行了： delSessionAttributes</span><br><span class="line">执行了： getSessionAttributes</span><br><span class="line"><span class="keyword">null</span></span><br></pre></td></tr></table></div></figure><blockquote><p><strong>在success.jsp可以通过<code>$&#123;msg&#125;和$&#123;sessionScope&#125;</code>获取到在类上面把msg存入到session域的内容：<code>牛哄哄的柯南和&#123;msg=牛哄哄的柯南&#125;</code></strong><br><strong>在success.jsp可以通过<code>$&#123;requestScope&#125;</code>获取到在testSessionAttributes方法中存入Request域中的内容。</strong></p></blockquote><blockquote><p><strong>以上就是SpringMVC中常用注解（案例讲解）的全部内容。</strong></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;SpringMVC中常用注解&quot;   &gt;
          &lt;a href=&quot;#SpringMVC中常用注解&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#SpringMVC中常用注解&quot; class=&quot;headerlink&quot; title=&quot;SpringMVC中常用注解&quot;&gt;&lt;/a&gt;SpringMVC中常用注解&lt;/h3&gt;</summary>
    
    
    
    
    <category term="Keafmd" scheme="https://keafmd.top/tags/Keafmd/"/>
    
  </entry>
  
</feed>
