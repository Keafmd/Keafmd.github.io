<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Keafmd&#39;s Blog</title>
  
  <subtitle>write code and love life</subtitle>
  <link href="https://keafmd.top/atom.xml" rel="self"/>
  
  <link href="https://keafmd.top/"/>
  <updated>2022-08-09T08:15:47.734Z</updated>
  <id>https://keafmd.top/</id>
  
  <author>
    <name>牛哄哄的柯南</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>常用注解：让生产力爆表！</title>
    <link href="https://keafmd.top/2022/08/09/40%E4%B8%AASpringBoot%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3%EF%BC%9A%E8%AE%A9%E7%94%9F%E4%BA%A7%E5%8A%9B%E7%88%86%E8%A1%A8%EF%BC%81/"/>
    <id>https://keafmd.top/2022/08/09/40%E4%B8%AASpringBoot%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3%EF%BC%9A%E8%AE%A9%E7%94%9F%E4%BA%A7%E5%8A%9B%E7%88%86%E8%A1%A8%EF%BC%81/</id>
    <published>2022-08-09T08:07:54.000Z</published>
    <updated>2022-08-09T08:15:47.734Z</updated>
    
    <content type="html"><![CDATA[<div id="readmore-container"><ul><li><p>  一、Spring Web MVC 与 Spring Bean 注解</p></li><li><p>  Spring Web MVC 注解</p></li><li><p>  二、Spring Bean 注解</p></li><li><p>  三、Spring Dependency Inject 与 Bean Scops注解</p></li><li><p>  Spring DI注解</p></li><li><p>  Scops注解</p></li><li><p>  四、容器配置注解</p></li><li><p>  @Autowired</p></li><li><p>  @Primary</p></li><li><p>  @PostConstruct与@PreDestroy</p></li><li><p>  @Qualifier</p></li><li><p>  五、Spring Boot注解</p></li><li><p>  总结</p></li></ul><p>大家好，企业开发项目SpringBoot已经是必备框架了，其中注解是开发中的小工具（谁处可见哦），用好了开发效率大大提升，当然用错了也会引入缺陷。</p><hr>        <h2 id="一、Spring-Web-MVC-与-Spring-Bean-注解"   >          <a href="#一、Spring-Web-MVC-与-Spring-Bean-注解" class="heading-link"><i class="fas fa-link"></i></a><a href="#一、Spring-Web-MVC-与-Spring-Bean-注解" class="headerlink" title="一、Spring Web MVC 与 Spring Bean 注解"></a>一、Spring Web MVC 与 Spring Bean 注解</h2>              <h3 id="Spring-Web-MVC-注解"   >          <a href="#Spring-Web-MVC-注解" class="heading-link"><i class="fas fa-link"></i></a><a href="#Spring-Web-MVC-注解" class="headerlink" title="Spring Web MVC 注解"></a>Spring Web MVC 注解</h3>      <p><strong>@RequestMapping</strong></p><p>@RequestMapping注解的主要用途是将Web请求与请求处理类中的方法进行映射。Spring MVC和Spring WebFlux都通过<code>RquestMappingHandlerMapping</code>和<code>RequestMappingHndlerAdapter</code>两个类来提供对@RequestMapping注解的支持。</p><a id="more"></a><p><code>@RequestMapping</code>注解对请求处理类中的请求处理方法进行标注；<code>@RequestMapping</code>注解拥有以下的六个配置属性：</p><ul><li><p>  <code>value</code>:映射的请求URL或者其别名</p></li><li><p>  <code>method</code>:兼容HTTP的方法名</p></li><li><p>  <code>params</code>:根据HTTP参数的存在、缺省或值对请求进行过滤</p></li><li><p>  <code>header</code>:根据HTTP Header的存在、缺省或值对请求进行过滤</p></li><li><p>  <code>consume</code>:设定在HTTP请求正文中允许使用的媒体类型</p></li><li><p>  <code>product</code>:在HTTP响应体中允许使用的媒体类型</p></li></ul><p>提示：在使用@RequestMapping之前，请求处理类还需要使用@Controller或@RestController进行标记</p><p>下面是使用@RequestMapping的两个示例：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/c049070f8cf067e6b4bd4947803ef6c9.png" alt="图片">图片</p><p>@RequestMapping还可以对类进行标记，这样类中的处理方法在映射请求路径时，会自动将类上@RequestMapping设置的value拼接到方法中映射路径之前，如下：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/bd7ee913a35f438289f0169045bfd155.png" alt="图片">图片</p><p><strong>@RequestBody</strong></p><p>@RequestBody在处理请求方法的参数列表中使用，它可以将请求主体中的参数绑定到一个对象中，请求主体参数是通过<code>HttpMessageConverter</code>传递的，根据请求主体中的参数名与对象的属性名进行匹配并绑定值。此外，还可以通过@Valid注解对请求主体中的参数进行校验。</p><p>下面是一个使用<code>@RequestBody</code>的示例：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/590b31c2a0dc451d3ddf094f7e0da8c2.jpeg" alt="图片">图片</p><p><strong>@GetMapping</strong></p><p><code>@GetMapping</code>注解用于处理HTTP GET请求，并将请求映射到具体的处理方法中。具体来说，@GetMapping是一个组合注解，它相当于是<code>@RequestMapping(method=RequestMethod.GET)</code>的快捷方式。</p><p>下面是<code>@GetMapping</code>的一个使用示例：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/9e56b9f5441f6f3deaf110158c56cd6e.jpeg" alt="图片">图片</p><p><strong>@PostMapping</strong></p><p><code>@PostMapping</code>注解用于处理HTTP POST请求，并将请求映射到具体的处理方法中。@PostMapping与@GetMapping一样，也是一个组合注解，它相当于是<code>@RequestMapping(method=HttpMethod.POST)</code>的快捷方式。</p><p>下面是使用<code>@PostMapping</code>的一个示例：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/451fafe83b86cc7342661cc828c80f70.jpeg" alt="图片">图片</p><p><strong>@PutMapping</strong></p><p><code>@PutMapping</code>注解用于处理HTTP PUT请求，并将请求映射到具体的处理方法中，@PutMapping是一个组合注解，相当于是<code>@RequestMapping(method=HttpMethod.PUT)</code>的快捷方式。</p><p>下面是使用<code>@PutMapping</code>的一个示例：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/d27a2ea40d64e958bde7f75ecd211ffe.jpeg" alt="图片">图片</p><p><strong>@DeleteMapping</strong></p><p><code>@DeleteMapping</code>注解用于处理HTTP DELETE请求，并将请求映射到删除方法中。@DeleteMapping是一个组合注解，它相当于是<code>@RequestMapping(method=HttpMethod.DELETE)</code>的快捷方式。</p><p>下面是使用<code>@DeleteMapping</code>的一个示例：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/05035d547175ebbb3c1b49700eebd25a.jpeg" alt="图片">图片</p><p><strong>@PatchMapping</strong></p><p><code>@PatchMapping</code>注解用于处理HTTP PATCH请求，并将请求映射到对应的处理方法中。@PatchMapping相当于是<code>@RequestMapping(method=HttpMethod.PATCH)</code>的快捷方式。</p><p>下面是一个简单的示例：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/73c617f6073e6ba06c9ca61c37fb9bf2.jpeg" alt="图片">图片</p><p><strong>@ControllerAdvice</strong></p><p><code>@ControllerAdvice</code>是@Component注解的一个延伸注解，Spring会自动扫描并检测被@ControllerAdvice所标注的类。<code>@ControllerAdvice</code>需要和<code>@ExceptionHandler</code>、<code>@InitBinder</code>以及<code>@ModelAttribute</code>注解搭配使用，主要是用来处理控制器所抛出的异常信息。</p><p>首先，我们需要定义一个被<code>@ControllerAdvice</code>所标注的类，在该类中，定义一个用于处理具体异常的方法，并使用@ExceptionHandler注解进行标记。</p><p>此外，在有必要的时候，可以使用<code>@InitBinder</code>在类中进行全局的配置，还可以使用@ModelAttribute配置与视图相关的参数。使用<code>@ControllerAdvice</code>注解，就可以快速的创建统一的，自定义的异常处理类。</p><p>下面是一个使用<code>@ControllerAdvice</code>的示例代码：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/ab43ffc186dde5e84182783af560ae4f.jpeg" alt="图片">图片</p><p><strong>@ResponseBody</strong></p><p><code>@ResponseBody</code>会自动将控制器中方法的返回值写入到HTTP响应中。特别的，<code>@ResponseBody</code>注解只能用在被<code>@Controller</code>注解标记的类中。如果在被<code>@RestController</code>标记的类中，则方法不需要使用<code>@ResponseBody</code>注解进行标注。<code>@RestController</code>相当于是<code>@Controller</code>和<code>@ResponseBody</code>的组合注解。</p><p>下面是使用该注解的一个示例</p><p><img src="https://img-blog.csdnimg.cn/img_convert/6c4f0078965006254a3e23b4437235d2.png" alt="图片">图片</p><p><strong>@ExceptionHandler</strong></p><p><code>@ExceptionHander</code>注解用于标注处理特定类型异常类所抛出异常的方法。当控制器中的方法抛出异常时，Spring会自动捕获异常，并将捕获的异常信息传递给被<code>@ExceptionHandler</code>标注的方法。</p><p>下面是使用该注解的一个示例：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/87abc347de27ba54881a63d3ea38a012.jpeg" alt="图片">图片</p><p><strong>@ResponseStatus</strong></p><p><code>@ResponseStatus</code>注解可以标注请求处理方法。使用此注解，可以指定响应所需要的HTTP STATUS。特别地，我们可以使用HttpStauts类对该注解的value属性进行赋值。</p><p>下面是使用<code>@ResponseStatus</code>注解的一个示例：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/484ca596a7cafdb9836ccf6c9f41bf23.jpeg" alt="图片">图片</p><p><strong>@PathVariable</strong></p><p><code>@PathVariable</code>注解是将方法中的参数绑定到请求URI中的模板变量上。可以通过<code>@RequestMapping</code>注解来指定URI的模板变量，然后使用<code>@PathVariable</code>注解将方法中的参数绑定到模板变量上。</p><p>特别地，<code>@PathVariable</code>注解允许我们使用value或name属性来给参数取一个别名。下面是使用此注解的一个示例：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/28c5130f110c0b4527da8ac83b031e0b.jpeg" alt="图片">图片</p><p>模板变量名需要使用<code>&#123; &#125;</code>进行包裹，如果方法的参数名与URI模板变量名一致，则在<code>@PathVariable</code>中就可以省略别名的定义。</p><p>下面是一个简写的示例：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/01f6837d0ea8786ec7ffc346715765f4.jpeg" alt="图片">图片</p><p>提示：如果参数是一个非必须的，可选的项，则可以在<code>@PathVariable</code>中设置<code>require = false</code></p><p><strong>@RequestParam</strong></p><p><code>@RequestParam</code>注解用于将方法的参数与Web请求的传递的参数进行绑定。使用<code>@RequestParam</code>可以轻松的访问HTTP请求参数的值。</p><p>下面是使用该注解的代码示例：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/48d08d0d8678df109f15d3875c559dcf.png" alt="图片">图片</p><p>该注解的其他属性配置与<code>@PathVariable</code>的配置相同，特别的，如果传递的参数为空，还可以通过defaultValue设置一个默认值。示例代码如下：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/97bc5776a7ed1819b880cfd0194c725a.jpeg" alt="图片">图片</p><p><strong>@Controller</strong></p><p><code>@Controller</code>是<code>@Component</code>注解的一个延伸，Spring 会自动扫描并配置被该注解标注的类。此注解用于标注Spring MVC的控制器。下面是使用此注解的示例代码：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/46a28332cfc528f9543d4afeb62988bc.jpeg" alt="图片">图片</p><p><strong>@RestController</strong></p><p><code>@RestController</code>是在Spring 4.0开始引入的，这是一个特定的控制器注解。此注解相当于<code>@Controller</code>和<code>@ResponseBody</code>的快捷方式。当使用此注解时，不需要再在方法上使用<code>@ResponseBody</code>注解。</p><p>下面是使用此注解的示例代码：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/1f3d1ed55876a9f0a3f7c9c106d3d92d.jpeg" alt="图片">图片</p><p><strong>@ModelAttribute</strong></p><p>通过此注解，可以通过模型索引名称来访问已经存在于控制器中的model。下面是使用此注解的一个简单示例：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/1fdcd4cd52cb85c8c690277c73f56353.png" alt="图片">图片</p><p>与<code>@PathVariable</code>和<code>@RequestParam</code>注解一样，如果参数名与模型具有相同的名字，则不必指定索引名称，简写示例如下：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/a887b399c34940ac75fadb051bf00b57.png" alt="图片">图片</p><p>特别地，如果使用<code>@ModelAttribute</code>对方法进行标注，Spring会将方法的返回值绑定到具体的Model上。示例如下：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/6ec9d4e1550baa452fb88ac4f72a56ae.png" alt="图片">图片</p><p>在Spring调用具体的处理方法之前，被<code>@ModelAttribute</code>注解标注的所有方法都将被执行。</p><p><strong>@CrossOrigin</strong></p><p><code>@CrossOrigin</code>注解将为请求处理类或请求处理方法提供跨域调用支持。如果我们将此注解标注类，那么类中的所有方法都将获得支持跨域的能力。使用此注解的好处是可以微调跨域行为。使用此注解的示例如下：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/6764cdbbd020ddb6f1ef757756996744.jpeg" alt="图片">图片</p><p><strong>@InitBinder</strong></p><p><code>@InitBinder</code>注解用于标注初始化<strong>WebDataBinider</strong> 的方法，该方法用于对Http请求传递的表单数据进行处理，如时间格式化、字符串处理等。下面是使用此注解的示例：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/65a89145880bdfa6ad00bf648a9e7c82.png" alt="图片">图片</p><blockquote><p>二、Spring Bean 注解  </p></blockquote><p>在本小节中，主要列举与Spring Bean相关的4个注解以及它们的使用方式。</p><p><strong>@ComponentScan</strong></p><p><code>@ComponentScan</code>注解用于配置Spring需要扫描的被组件注解注释的类所在的包。可以通过配置其basePackages属性或者value属性来配置需要扫描的包路径。value属性是basePackages的别名。此注解的用法如下：</p><p><strong>@Component</strong></p><p>@Component注解用于标注一个普通的组件类，它没有明确的业务范围，只是通知Spring被此注解的类需要被纳入到Spring Bean容器中并进行管理。此注解的使用示例如下：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/da99ccd31b5dd8cf98a630917324f7b5.png" alt="图片">图片</p><p><strong>@Service</strong></p><p><code>@Service</code>注解是<code>@Component</code>的一个延伸（特例），它用于标注业务逻辑类。与<code>@Component</code>注解一样，被此注解标注的类，会自动被Spring所管理。下面是使用<code>@Service</code>注解的示例：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/411d09d676360168cdd0befb96537b60.jpeg" alt="图片">图片</p><p><strong>@Repository</strong></p><p><code>@Repository</code>注解也是<code>@Component</code>注解的延伸，与<code>@Component</code>注解一样，被此注解标注的类会被Spring自动管理起来，<code>@Repository</code>注解用于标注DAO层的数据持久化类。此注解的用法如下：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/e78e5e64313195884bbc0361b0b9ae4c.jpeg" alt="图片">图片 <span class="exturl"><a class="exturl__link"   href="http://mp.weixin.qq.com/s?__biz=Mzg2ODU0NTA2Mw==&mid=2247488419&idx=2&sn=0b80c7f9f73fca89b91e257a269cfada&chksm=ceabf4ebf9dc7dfdaa605a9bb92d31c9fc0a10a7a94351234181a89ba5800672c6e7da2ebfbe&scene=21#wechat_redirect" >Java项目分享  最新整理全集，找项目不累啦 07版</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h2 id="三、Spring-Dependency-Inject-与-Bean-Scops注解"   >          <a href="#三、Spring-Dependency-Inject-与-Bean-Scops注解" class="heading-link"><i class="fas fa-link"></i></a><a href="#三、Spring-Dependency-Inject-与-Bean-Scops注解" class="headerlink" title="三、Spring Dependency Inject 与 Bean Scops注解"></a>三、Spring Dependency Inject 与 Bean Scops注解</h2>              <h3 id="Spring-DI注解"   >          <a href="#Spring-DI注解" class="heading-link"><i class="fas fa-link"></i></a><a href="#Spring-DI注解" class="headerlink" title="Spring DI注解"></a>Spring DI注解</h3>      <p><strong>@DependsOn</strong></p><p><code>@DependsOn</code>注解可以配置Spring IoC容器在初始化一个Bean之前，先初始化其他的Bean对象。下面是此注解使用示例代码：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/049897c16b568c336270e31cae59b477.jpeg" alt="图片">图片</p><p><strong>@Bean</strong></p><p>@Bean注解主要的作用是告知Spring，被此注解所标注的类将需要纳入到Bean管理工厂中。@Bean注解的用法很简单，在这里，着重介绍@Bean注解中<code>initMethod</code>和<code>destroyMethod</code>的用法。示例如下：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/c3541921067909f3f15b0758235cbc0b.jpeg" alt="图片">图片</p>        <h3 id="Scops注解"   >          <a href="#Scops注解" class="heading-link"><i class="fas fa-link"></i></a><a href="#Scops注解" class="headerlink" title="Scops注解"></a>Scops注解</h3>      <p><strong>@Scope</strong></p><p>@Scope注解可以用来定义@Component标注的类的作用范围以及@Bean所标记的类的作用范围。@Scope所限定的作用范围有：<code>singleton</code>、<code>prototype</code>、<code>request</code>、<code>session</code>、<code>globalSession</code>或者其他的自定义范围。这里以prototype为例子进行讲解。</p><p>当一个Spring Bean被声明为prototype（原型模式）时，在每次需要使用到该类的时候，Spring IoC容器都会初始化一个新的改类的实例。在定义一个Bean时，可以设置Bean的scope属性为<code>prototype：scope=“prototype”</code>,也可以使用@Scope注解设置，如下：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@Scope(value&#x3D;ConfigurableBeanFactory.SCOPE_PROPTOTYPE)</span><br><span class="line"></span><br></pre></td></tr></table></div></figure><p>下面将给出两种不同的方式来使用@Scope注解，示例代码如下：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/4daf3961d6dd262dc6755ae9710135ce.jpeg" alt="图片">图片</p><p><strong>@Scope 单例模式</strong></p><p>当@Scope的作用范围设置成Singleton时，被此注解所标注的类只会被Spring IoC容器初始化一次。在默认情况下，Spring IoC容器所初始化的类实例都为singleton。同样的原理，此情形也有两种配置方式，示例代码如下：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/e1dc6568ef0606d7d5eedd3e77cbcdb5.png" alt="图片">图片</p>        <h2 id="四、容器配置注解"   >          <a href="#四、容器配置注解" class="heading-link"><i class="fas fa-link"></i></a><a href="#四、容器配置注解" class="headerlink" title="四、容器配置注解"></a>四、容器配置注解</h2>              <h3 id="Autowired"   >          <a href="#Autowired" class="heading-link"><i class="fas fa-link"></i></a><a href="#Autowired" class="headerlink" title="@Autowired"></a>@Autowired</h3>      <p>@Autowired注解用于标记Spring将要解析和注入的依赖项。此注解可以作用在构造函数、字段和setter方法上。</p><p><strong>作用于构造函数</strong></p><p>下面是@Autowired注解标注构造函数的使用示例：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/8fd3a4663347aa2bb0ba99da07f7866c.png" alt="图片">图片</p><p><strong>作用于setter方法</strong></p><p>下面是@Autowired注解标注setter方法的示例代码：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/f966e7adada367e35cc84eb8455595ef.png" alt="图片">图片</p><p><strong>作用于字段</strong></p><p>@Autowired注解标注字段是最简单的，只需要在对应的字段上加入此注解即可，示例代码如下：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/1e89ff750da34954053ad35b069dc4ff.png" alt="图片">图片</p>        <h3 id="Primary"   >          <a href="#Primary" class="heading-link"><i class="fas fa-link"></i></a><a href="#Primary" class="headerlink" title="@Primary"></a>@Primary</h3>      <p>当系统中需要配置多个具有相同类型的bean时，@Primary可以定义这些Bean的优先级。下面将给出一个实例代码来说明这一特性：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/7b7e8cbecc3db64987620ffe97ad72df.png" alt="图片">图片</p><p>输出结果：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">this is send DingDing method message.</span><br><span class="line"></span><br></pre></td></tr></table></div></figure>        <h3 id="PostConstruct与-PreDestroy"   >          <a href="#PostConstruct与-PreDestroy" class="heading-link"><i class="fas fa-link"></i></a><a href="#PostConstruct与-PreDestroy" class="headerlink" title="@PostConstruct与@PreDestroy"></a>@PostConstruct与@PreDestroy</h3>      <p>值得注意的是，这两个注解不属于Spring,它们是源于JSR-250中的两个注解，位于<code>common-annotations.jar</code>中。@PostConstruct注解用于标注在Bean被Spring初始化之前需要执行的方法。@PreDestroy注解用于标注Bean被销毁前需要执行的方法。下面是具体的示例代码：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/7b889595346d66149bbdadceb8e681eb.png" alt="图片">图片</p>        <h3 id="Qualifier"   >          <a href="#Qualifier" class="heading-link"><i class="fas fa-link"></i></a><a href="#Qualifier" class="headerlink" title="@Qualifier"></a>@Qualifier</h3>      <p>当系统中存在同一类型的多个Bean时，@Autowired在进行依赖注入的时候就不知道该选择哪一个实现类进行注入。此时，我们可以使用@Qualifier注解来微调，帮助@Autowired选择正确的依赖项。下面是一个关于此注解的代码示例：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/be0625708bd2402c4ce1c4316d1717eb.png" alt="图片">图片</p>        <h2 id="五、Spring-Boot注解"   >          <a href="#五、Spring-Boot注解" class="heading-link"><i class="fas fa-link"></i></a><a href="#五、Spring-Boot注解" class="headerlink" title="五、Spring Boot注解"></a>五、Spring Boot注解</h2>      <p><strong>@SpringBootApplication</strong></p><p><code>@SpringBootApplication</code>注解是一个快捷的配置注解，在被它标注的类中，可以定义一个或多个Bean，并自动触发自动配置Bean和自动扫描组件。此注解相当于<code>@Configuration</code>、<code>@EnableAutoConfiguration</code>和<code>@ComponentScan</code>的组合。</p><p>在Spring Boot应用程序的主类中，就使用了此注解。示例代码如下：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@SpringBootApplication</span><br><span class="line">public class Application&#123;</span><br><span class="line">    public static void main(String [] args)&#123;</span><br><span class="line">        SpringApplication.run(Application.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></div></figure><p><strong>@EnableAutoConfiguration</strong></p><p>@EnableAutoConfiguration注解用于通知Spring，根据当前类路径下引入的依赖包，自动配置与这些依赖包相关的配置项。</p><p><strong>@ConditionalOnClass与@ConditionalOnMissingClass</strong></p><p>这两个注解属于类条件注解，它们根据是否存在某个类作为判断依据来决定是否要执行某些配置。下面是一个简单的示例代码：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">@ConditionalOnClass(DataSource.class)</span><br><span class="line">class MySQLAutoConfiguration &#123;</span><br><span class="line">    &#x2F;&#x2F;...</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></div></figure><p><strong>@ConditionalOnBean与@ConditionalOnMissingBean</strong></p><p>这两个注解属于对象条件注解，根据是否存在某个对象作为依据来决定是否要执行某些配置方法。示例代码如下：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@Bean</span><br><span class="line">@ConditionalOnBean(name&#x3D;&quot;dataSource&quot;)</span><br><span class="line">LocalContainerEntityManagerFactoryBean entityManagerFactory()&#123;</span><br><span class="line">        &#x2F;&#x2F;...</span><br><span class="line">        &#125;</span><br><span class="line">@Bean</span><br><span class="line">@ConditionalOnMissingBean</span><br><span class="line">public MyBean myBean()&#123;</span><br><span class="line">        &#x2F;&#x2F;...</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></div></figure><p><strong>@ConditionalOnProperty</strong></p><p>@ConditionalOnProperty注解会根据Spring配置文件中的配置项是否满足配置要求，从而决定是否要执行被其标注的方法。示例代码如下：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@Bean</span><br><span class="line">@ConditionalOnProperty(name&#x3D;&quot;alipay&quot;,havingValue&#x3D;&quot;on&quot;)</span><br><span class="line">Alipay alipay()&#123;</span><br><span class="line">        return new Alipay();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></div></figure><p><strong>@ConditionalOnResource</strong></p><p>此注解用于检测当某个配置文件存在使，则触发被其标注的方法，下面是使用此注解的代码示例：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@ConditionalOnResource(resources &#x3D; &quot;classpath:website.properties&quot;)</span><br><span class="line">Properties addWebsiteProperties()&#123;</span><br><span class="line">        &#x2F;&#x2F;...</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></div></figure><p><strong>@ConditionalOnWebApplication与@ConditionalOnNotWebApplication</strong></p><p>这两个注解用于判断当前的应用程序是否是Web应用程序。如果当前应用是Web应用程序，则使用Spring WebApplicationContext,并定义其会话的生命周期。下面是一个简单的示例：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@ConditionalOnWebApplication</span><br><span class="line">HealthCheckController healthCheckController()&#123;</span><br><span class="line">        &#x2F;&#x2F;...</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></div></figure><p><strong>@ConditionalExpression</strong></p><p>此注解可以让我们控制更细粒度的基于表达式的配置条件限制。当表达式满足某个条件或者表达式为真的时候，将会执行被此注解标注的方法。</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@Bean</span><br><span class="line">@ConditionalException(&quot;$&#123;localstore&#125; &amp;&amp; $&#123;local &#x3D;&#x3D; &#39;true&#39;&#125;&quot;)</span><br><span class="line">LocalFileStore store()&#123;</span><br><span class="line">        &#x2F;&#x2F;...</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></div></figure><p><strong>@Conditional</strong></p><p>@Conditional注解可以控制更为复杂的配置条件。在Spring内置的条件控制注解不满足应用需求的时候，可以使用此注解定义自定义的控制条件，以达到自定义的要求。下面是使用该注解的简单示例：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@Conditioanl(CustomConditioanl.class)</span><br><span class="line">CustomProperties addCustomProperties()&#123;</span><br><span class="line">        &#x2F;&#x2F;...</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></div></figure>        <h2 id="总结"   >          <a href="#总结" class="heading-link"><i class="fas fa-link"></i></a><a href="#总结" class="headerlink" title="总结"></a>总结</h2>      <p>本次课程总结了Spring Boot中常见的各类型注解的使用方式，让大家能够统一的对Spring Boot常用注解有一个全面的了解。</p><p>由于篇幅的原因，关于Spring Boot不常用的一些注解，将在下一次分享中进行补充和说明。</p><p>声明：文章来源：<span class="exturl"><a class="exturl__link"   href="http://8r5.cn/Sn6qu" >http://8r5.cn/Sn6qu</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>所有归原作者所有，仅转载，交流学习使用！</p></div><script src="https://qiniu.techgrow.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {try {var plugin = new ReadmorePlugin();plugin.init({"id": "readmore-container","blogId": "63908-3467185019870-067","name": "牛哄哄的柯南","qrcode": "https://img-blog.csdnimg.cn/57e716984422402281cef814553b2ae9.png#pic_center","keyword": "柯南","lockToc": "yes","random": "1"});} catch(e) {console.warn(e.name + " : " + e.message);}}</script>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;  一、Spring Web MVC 与 Spring Bean 注解&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;  Spring Web MVC 注解&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;  二、Spring Bean 注解&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;  三、Spring Dependency Inject 与 Bean Scops注解&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;  Spring DI注解&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;  Scops注解&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;  四、容器配置注解&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;  @Autowired&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;  @Primary&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;  @PostConstruct与@PreDestroy&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;  @Qualifier&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;  五、Spring Boot注解&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;  总结&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大家好，企业开发项目SpringBoot已经是必备框架了，其中注解是开发中的小工具（谁处可见哦），用好了开发效率大大提升，当然用错了也会引入缺陷。&lt;/p&gt;
&lt;hr&gt;

        &lt;h2 id=&quot;一、Spring-Web-MVC-与-Spring-Bean-注解&quot;   &gt;
          &lt;a href=&quot;#一、Spring-Web-MVC-与-Spring-Bean-注解&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#一、Spring-Web-MVC-与-Spring-Bean-注解&quot; class=&quot;headerlink&quot; title=&quot;一、Spring Web MVC 与 Spring Bean 注解&quot;&gt;&lt;/a&gt;一、Spring Web MVC 与 Spring Bean 注解&lt;/h2&gt;
      
        &lt;h3 id=&quot;Spring-Web-MVC-注解&quot;   &gt;
          &lt;a href=&quot;#Spring-Web-MVC-注解&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#Spring-Web-MVC-注解&quot; class=&quot;headerlink&quot; title=&quot;Spring Web MVC 注解&quot;&gt;&lt;/a&gt;Spring Web MVC 注解&lt;/h3&gt;
      &lt;p&gt;&lt;strong&gt;@RequestMapping&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;@RequestMapping注解的主要用途是将Web请求与请求处理类中的方法进行映射。Spring MVC和Spring WebFlux都通过&lt;code&gt;RquestMappingHandlerMapping&lt;/code&gt;和&lt;code&gt;RequestMappingHndlerAdapter&lt;/code&gt;两个类来提供对@RequestMapping注解的支持。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Keafmd" scheme="https://keafmd.top/tags/Keafmd/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://keafmd.top/2022/08/09/hello-world/"/>
    <id>https://keafmd.top/2022/08/09/hello-world/</id>
    <published>2022-08-09T08:00:33.127Z</published>
    <updated>2021-01-26T14:32:13.108Z</updated>
    
    <content type="html"><![CDATA[<div id="readmore-container"><p>Welcome to <span class="exturl"><a class="exturl__link"   href="https://hexo.io/" >Hexo</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>! This is your very first post. Check <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/" >documentation</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> for more info. If you get any problems when using Hexo, you can find the answer in <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> or you can ask me on <span class="exturl"><a class="exturl__link"   href="https://github.com/hexojs/hexo/issues" >GitHub</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>.</p><a id="more"></a>        <h2 id="Quick-Start"   >          <a href="#Quick-Start" class="heading-link"><i class="fas fa-link"></i></a><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2>              <h3 id="Create-a-new-post"   >          <a href="#Create-a-new-post" class="heading-link"><i class="fas fa-link"></i></a><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3>      <figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></div></figure><p>More info: <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/writing.html" >Writing</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h3 id="Run-server"   >          <a href="#Run-server" class="heading-link"><i class="fas fa-link"></i></a><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3>      <figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></div></figure><p>More info: <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/server.html" >Server</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h3 id="Generate-static-files"   >          <a href="#Generate-static-files" class="heading-link"><i class="fas fa-link"></i></a><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3>      <figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></div></figure><p>More info: <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/generating.html" >Generating</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h3 id="Deploy-to-remote-sites"   >          <a href="#Deploy-to-remote-sites" class="heading-link"><i class="fas fa-link"></i></a><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3>      <figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></div></figure><p>More info: <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p></div><script src="https://qiniu.techgrow.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {try {var plugin = new ReadmorePlugin();plugin.init({"id": "readmore-container","blogId": "63908-3467185019870-067","name": "牛哄哄的柯南","qrcode": "https://img-blog.csdnimg.cn/57e716984422402281cef814553b2ae9.png#pic_center","keyword": "柯南","lockToc": "yes","random": "1"});} catch(e) {console.warn(e.name + " : " + e.message);}}</script>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://hexo.io/&quot; &gt;Hexo&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;! This is your very first post. Check &lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://hexo.io/docs/&quot; &gt;documentation&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://hexo.io/docs/troubleshooting.html&quot; &gt;troubleshooting&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt; or you can ask me on &lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://github.com/hexojs/hexo/issues&quot; &gt;GitHub&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Linux部署Tomcat踩的坑以及解决方案【8080无法访问、日志显示XX端口被占用、修改默认端口、无法提供安全连接】</title>
    <link href="https://keafmd.top/2022/06/17/Linux%E9%83%A8%E7%BD%B2Tomcat%E8%B8%A9%E7%9A%84%E5%9D%91%E4%BB%A5%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E3%80%908080%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E3%80%81%E6%97%A5%E5%BF%97%E6%98%BE%E7%A4%BAXX%E7%AB%AF%E5%8F%A3%E8%A2%AB%E5%8D%A0%E7%94%A8%E3%80%81%E4%BF%AE%E6%94%B9%E9%BB%98%E8%AE%A4%E7%AB%AF%E5%8F%A3%E3%80%81%E6%97%A0%E6%B3%95%E6%8F%90%E4%BE%9B%E5%AE%89%E5%85%A8%E8%BF%9E%E6%8E%A5%E3%80%91/"/>
    <id>https://keafmd.top/2022/06/17/Linux%E9%83%A8%E7%BD%B2Tomcat%E8%B8%A9%E7%9A%84%E5%9D%91%E4%BB%A5%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E3%80%908080%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E3%80%81%E6%97%A5%E5%BF%97%E6%98%BE%E7%A4%BAXX%E7%AB%AF%E5%8F%A3%E8%A2%AB%E5%8D%A0%E7%94%A8%E3%80%81%E4%BF%AE%E6%94%B9%E9%BB%98%E8%AE%A4%E7%AB%AF%E5%8F%A3%E3%80%81%E6%97%A0%E6%B3%95%E6%8F%90%E4%BE%9B%E5%AE%89%E5%85%A8%E8%BF%9E%E6%8E%A5%E3%80%91/</id>
    <published>2022-06-17T10:11:05.000Z</published>
    <updated>2022-08-08T12:40:13.475Z</updated>
    
    <content type="html"><![CDATA[<div id="readmore-container">        <h1 id="Linux部署Tomcat踩的坑以及解决方案【8080无法访问、日志显示XX端口被占用、修改默认端口、无法提供安全连接】"   >          <a href="#Linux部署Tomcat踩的坑以及解决方案【8080无法访问、日志显示XX端口被占用、修改默认端口、无法提供安全连接】" class="heading-link"><i class="fas fa-link"></i></a><a href="#Linux部署Tomcat踩的坑以及解决方案【8080无法访问、日志显示XX端口被占用、修改默认端口、无法提供安全连接】" class="headerlink" title="Linux部署Tomcat踩的坑以及解决方案【8080无法访问、日志显示XX端口被占用、修改默认端口、无法提供安全连接】"></a>Linux部署Tomcat踩的坑以及解决方案【8080无法访问、日志显示XX端口被占用、修改默认端口、无法提供安全连接】</h1>              <h3 id="8080无法访问"   >          <a href="#8080无法访问" class="heading-link"><i class="fas fa-link"></i></a><a href="#8080无法访问" class="headerlink" title="8080无法访问"></a>8080无法访问</h3>      <p>解压开压缩包后，执行bin目录下的 <code>startup.sh</code> 后，访问8080端口 ，不能访问，效果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202206170943856.png" alt="image-20220617094355793"></p>        <h2 id="解决过程"   >          <a href="#解决过程" class="heading-link"><i class="fas fa-link"></i></a><a href="#解决过程" class="headerlink" title="解决过程"></a>解决过程</h2>      <p>==先看下日志==，在logs目录下的<code>catalina.out</code>：</p><a id="more"></a><p>会发现提示有错误：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">17-Jun-2022 09:30:17.525 SEVERE [main] org.apache.catalina.core.StandardService.initInternal Failed to initialize connector [Connector[AJP&#x2F;1.3-8009]]</span><br><span class="line">        org.apache.catalina.LifecycleException: Protocol handler initialization failed</span><br><span class="line">...</span><br><span class="line">        Caused by: java.net.BindException: Address already in use</span><br></pre></td></tr></table></div></figure>        <h3 id="日志显示XX端口被占用"   >          <a href="#日志显示XX端口被占用" class="heading-link"><i class="fas fa-link"></i></a><a href="#日志显示XX端口被占用" class="headerlink" title="日志显示XX端口被占用"></a>日志显示XX端口被占用</h3>      <p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202206170947456.png" alt="image-20220617094725106"></p><p>端口 8009被占用了</p><blockquote><p>查看： lsof -i:8009</p></blockquote><blockquote><p>杀掉：fuser -k 8009/tcp</p></blockquote><p>日志中有其它的端口被占用，同理。</p>        <h3 id="修改默认端口"   >          <a href="#修改默认端口" class="heading-link"><i class="fas fa-link"></i></a><a href="#修改默认端口" class="headerlink" title="修改默认端口"></a>修改默认端口</h3>      <p><strong>还有一个问题8080端口 被其它应用用了，不能杀死，我需要修改。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202206171004229.png" alt="image-20220617100404940"></p><p>==再次关闭然后执行：在bin目录下先执行 <code>./shutdown.sh</code> 然后在执行<code>./startup.sh</code>==</p><p>再看日志：【阿西，还有报错】</p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202206171042479.png" alt="image-20220617100559866"></p><p>在tomcat的<code>/conf</code>下的<code>server.xml</code>文件中加入：</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">maxHttpHeaderSize=<span class="string">&quot;8192&quot;</span></span><br></pre></td></tr></table></div></figure><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202206171028712.png" alt="image-20220617102843849"></p><p>再次重启，再看日志</p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202206171042606.png" alt="image-20220617103213404"></p><p>没毛病了，再次访问，注意是修改后的端口，不是默认的8080了，是修改后的8069，注意==需要提前打开防火墙或安全组==</p>        <h3 id="无法提供安全连接"   >          <a href="#无法提供安全连接" class="heading-link"><i class="fas fa-link"></i></a><a href="#无法提供安全连接" class="headerlink" title="无法提供安全连接"></a>无法提供安全连接</h3>      <p>访问效果：</p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202206171042175.png" alt="image-20220617103109889"></p><p>出现这样，是==写成了<code>https</code>,改成<code>http</code>就好了==</p><p><img src="C:%5CUsers%5C%E7%AB%A0%E8%B4%BA%E9%BE%99%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220617103353118.png" alt="image-20220617103353118"></p><p><strong>搞定</strong> </p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202206171042924.png" alt="image-20220617103424018"></p><blockquote><p>一起加油</p></blockquote><blockquote><p>keafmd</p></blockquote></div><script src="https://qiniu.techgrow.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {try {var plugin = new ReadmorePlugin();plugin.init({"id": "readmore-container","blogId": "63908-3467185019870-067","name": "牛哄哄的柯南","qrcode": "https://img-blog.csdnimg.cn/57e716984422402281cef814553b2ae9.png#pic_center","keyword": "柯南","lockToc": "yes","random": "1"});} catch(e) {console.warn(e.name + " : " + e.message);}}</script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Linux部署Tomcat踩的坑以及解决方案【8080无法访问、日志显示XX端口被占用、修改默认端口、无法提供安全连接】&quot;   &gt;
          &lt;a href=&quot;#Linux部署Tomcat踩的坑以及解决方案【8080无法访问、日志显示XX端口被占用、修改默认端口、无法提供安全连接】&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#Linux部署Tomcat踩的坑以及解决方案【8080无法访问、日志显示XX端口被占用、修改默认端口、无法提供安全连接】&quot; class=&quot;headerlink&quot; title=&quot;Linux部署Tomcat踩的坑以及解决方案【8080无法访问、日志显示XX端口被占用、修改默认端口、无法提供安全连接】&quot;&gt;&lt;/a&gt;Linux部署Tomcat踩的坑以及解决方案【8080无法访问、日志显示XX端口被占用、修改默认端口、无法提供安全连接】&lt;/h1&gt;
      
        &lt;h3 id=&quot;8080无法访问&quot;   &gt;
          &lt;a href=&quot;#8080无法访问&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#8080无法访问&quot; class=&quot;headerlink&quot; title=&quot;8080无法访问&quot;&gt;&lt;/a&gt;8080无法访问&lt;/h3&gt;
      &lt;p&gt;解压开压缩包后，执行bin目录下的 &lt;code&gt;startup.sh&lt;/code&gt; 后，访问8080端口 ，不能访问，效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202206170943856.png&quot; alt=&quot;image-20220617094355793&quot;&gt;&lt;/p&gt;

        &lt;h2 id=&quot;解决过程&quot;   &gt;
          &lt;a href=&quot;#解决过程&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#解决过程&quot; class=&quot;headerlink&quot; title=&quot;解决过程&quot;&gt;&lt;/a&gt;解决过程&lt;/h2&gt;
      &lt;p&gt;==先看下日志==，在logs目录下的&lt;code&gt;catalina.out&lt;/code&gt;：&lt;/p&gt;</summary>
    
    
    
    
    <category term="linux" scheme="https://keafmd.top/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>加油站（贪心）</title>
    <link href="https://keafmd.top/2022/04/29/%E5%8A%A0%E6%B2%B9%E7%AB%99%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/"/>
    <id>https://keafmd.top/2022/04/29/%E5%8A%A0%E6%B2%B9%E7%AB%99%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/</id>
    <published>2022-04-29T06:43:09.000Z</published>
    <updated>2022-04-29T06:55:33.775Z</updated>
    
    <content type="html"><![CDATA[<div id="readmore-container">        <h1 id="题目"   >          <a href="#题目" class="heading-link"><i class="fas fa-link"></i></a><a href="#题目" class="headerlink" title="题目"></a>题目</h1>      <p><span class="exturl"><a class="exturl__link"   href="https://leetcode-cn.com/problems/gas-station/" >加油站</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>难度 中等</p><blockquote><p>在一条环路上有 n 个加油站，其中第 i 个加油站有汽油 gas[i] 升。你有一辆油箱容量无限的的汽车，从第 i 个加油站开往第 i+1 个加油站需要消耗汽油 cost[i] 升。你从其中的一个加油站出发，开始时油箱为空。给定两个整数数组 gas 和 cost ，如果你可以绕环路行驶一周，则返回出发时加油站的编号，否则返回 -1 。如果存在解，则 保证 它是 唯一 的。</p></blockquote><a id="more"></a><blockquote><p>示例 1:</p><p>输入: gas = [1,2,3,4,5], cost = [3,4,5,1,2]<br>输出: 3<br>解释:<br>从 3 号加油站(索引为 3 处)出发，可获得 4 升汽油。此时油箱有 = 0 + 4 = 4 升汽油<br>开往 4 号加油站，此时油箱有 4 - 1 + 5 = 8 升汽油<br>开往 0 号加油站，此时油箱有 8 - 2 + 1 = 7 升汽油<br>开往 1 号加油站，此时油箱有 7 - 3 + 2 = 6 升汽油<br>开往 2 号加油站，此时油箱有 6 - 4 + 3 = 5 升汽油<br>开往 3 号加油站，你需要消耗 5 升汽油，正好足够你返回到 3 号加油站。<br>因此，3 可为起始索引。</p></blockquote><blockquote><p>示例 2:</p><p>输入: gas = [2,3,4], cost = [3,4,3]<br>输出: -1</p><p>解释:<br>你不能从 0 号或 1 号加油站出发，因为没有足够的汽油可以让你行驶到下一个加油站。<br>我们从 2 号加油站出发，可以获得 4 升汽油。 此时油箱有 = 0 + 4 = 4 升汽油<br>开往 0 号加油站，此时油箱有 4 - 3 + 2 = 3 升汽油<br>开往 1 号加油站，此时油箱有 3 - 3 + 3 = 3 升汽油<br>你无法返回 2 号加油站，因为返程需要消耗 4 升汽油，但是你的油箱只有 3 升汽油。<br>因此，无论怎样，你都不可能绕环路行驶一周。</p></blockquote><blockquote><p>提示:gas.length == n<br>cost.length == n<br>1 &lt;= n &lt;= 105<br>0 &lt;= gas[i], cost[i] &lt;= 104</p></blockquote><p><strong>代码：</strong></p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">canCompleteCircuit</span><span class="params">(<span class="keyword">int</span>[] gas, <span class="keyword">int</span>[] cost)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//先排除特殊情况</span></span><br><span class="line">        <span class="keyword">if</span>(gas == <span class="keyword">null</span> || cost == <span class="keyword">null</span> || gas.length == <span class="number">0</span> || cost.length == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(gas.length == <span class="number">1</span> &amp;&amp; cost[<span class="number">0</span>]== gas[<span class="number">0</span>])&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//剩余的数组</span></span><br><span class="line">        <span class="keyword">int</span>[] last = <span class="keyword">new</span> <span class="keyword">int</span>[gas.length];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//起点的可能位置列表</span></span><br><span class="line">        List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; gas.length; i++) &#123;</span><br><span class="line">            last[i] = gas[i] - cost[i];</span><br><span class="line">            sum+=last[i];</span><br><span class="line">            <span class="keyword">if</span>(last[i]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                list.add(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//不可能跑一圈</span></span><br><span class="line">        <span class="keyword">if</span>(sum&lt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> res = -<span class="number">1</span>;</span><br><span class="line">        <span class="comment">//遍历所有的可能节点</span></span><br><span class="line">        <span class="keyword">for</span> (Integer i : list) &#123;</span><br><span class="line">            <span class="keyword">boolean</span>[] flag = <span class="keyword">new</span> <span class="keyword">boolean</span>[gas.length];</span><br><span class="line">            flag[i] = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">int</span> curr = i;</span><br><span class="line">            <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">            sum = last[curr];</span><br><span class="line">            <span class="comment">//跑圈</span></span><br><span class="line">            <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;gas.length;j++)&#123;</span><br><span class="line">                <span class="keyword">int</span> next = curr+<span class="number">1</span>==gas.length?<span class="number">0</span>:curr+<span class="number">1</span>;</span><br><span class="line">                sum +=last[next];</span><br><span class="line">                <span class="comment">//油不够了</span></span><br><span class="line">                <span class="keyword">if</span>(sum &lt; <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                curr = curr+<span class="number">1</span>==gas.length?<span class="number">0</span>:curr+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//可以跑一圈</span></span><br><span class="line">            <span class="keyword">if</span>(j==gas.length)&#123;</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p><strong>精简代码：</strong></p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">canCompleteCircuit</span><span class="params">(<span class="keyword">int</span>[] gas, <span class="keyword">int</span>[] cost)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> start = <span class="number">0</span>, sum = <span class="number">0</span>, tank = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; gas.length; i++) &#123;</span><br><span class="line">            tank += gas[i] - cost[i];</span><br><span class="line">            <span class="keyword">if</span> (tank &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                start = i + <span class="number">1</span>;</span><br><span class="line">                sum += tank;</span><br><span class="line">                tank = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum + tank &gt;= <span class="number">0</span> ? start : -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></div><script src="https://qiniu.techgrow.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {try {var plugin = new ReadmorePlugin();plugin.init({"id": "readmore-container","blogId": "63908-3467185019870-067","name": "牛哄哄的柯南","qrcode": "https://img-blog.csdnimg.cn/57e716984422402281cef814553b2ae9.png#pic_center","keyword": "柯南","lockToc": "yes","random": "1"});} catch(e) {console.warn(e.name + " : " + e.message);}}</script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;   &gt;
          &lt;a href=&quot;#题目&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;
      &lt;p&gt;&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://leetcode-cn.com/problems/gas-station/&quot; &gt;加油站&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;难度 中等&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在一条环路上有 n 个加油站，其中第 i 个加油站有汽油 gas[i] 升。你有一辆油箱容量无限的的汽车，从第 i 个加油站开往第 i+1 个加油站需要消耗汽油 cost[i] 升。你从其中的一个加油站出发，开始时油箱为空。给定两个整数数组 gas 和 cost ，如果你可以绕环路行驶一周，则返回出发时加油站的编号，否则返回 -1 。如果存在解，则 保证 它是 唯一 的。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="LeetCode" scheme="https://keafmd.top/categories/LeetCode/"/>
    
    
    <category term="每天进步一点点系列" scheme="https://keafmd.top/tags/%E6%AF%8F%E5%A4%A9%E8%BF%9B%E6%AD%A5%E4%B8%80%E7%82%B9%E7%82%B9%E7%B3%BB%E5%88%97/"/>
    
    <category term="贪心" scheme="https://keafmd.top/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>机器人的运动范围（DFS）</title>
    <link href="https://keafmd.top/2022/04/28/%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%9A%84%E8%BF%90%E5%8A%A8%E8%8C%83%E5%9B%B4%EF%BC%88DFS%EF%BC%89/"/>
    <id>https://keafmd.top/2022/04/28/%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%9A%84%E8%BF%90%E5%8A%A8%E8%8C%83%E5%9B%B4%EF%BC%88DFS%EF%BC%89/</id>
    <published>2022-04-28T05:44:27.000Z</published>
    <updated>2022-04-28T06:52:10.881Z</updated>
    
    <content type="html"><![CDATA[<div id="readmore-container">        <h1 id="题目"   >          <a href="#题目" class="heading-link"><i class="fas fa-link"></i></a><a href="#题目" class="headerlink" title="题目"></a>题目</h1>      <p><span class="exturl"><a class="exturl__link"   href="https://leetcode-cn.com/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof/" >机器人的运动范围</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>难度 中等</p><blockquote><p>地上有一个m行n列的方格，从坐标 [0,0] 到坐标 [m-1,n-1] 。一个机器人从坐标 [0, 0] 的格子开始移动，它每次可以向左、右、上、下移动一格（不能移动到方格外），也不能进入行坐标和列坐标的数位之和大于k的格子。例如，当k为18时，机器人能够进入方格 [35, 37] ，因为3+5+3+7=18。但它不能进入方格 [35, 38]，因为3+5+3+8=19。请问该机器人能够到达多少个格子？</p></blockquote><a id="more"></a><blockquote><p>示例 1：</p><p>输入：m = 2, n = 3, k = 1<br>输出：3</p><p>示例 2：</p><p>输入：m = 3, n = 1, k = 0<br>输出：1</p></blockquote><blockquote><p>提示：</p><p>1 &lt;= n,m &lt;= 100<br>0 &lt;= k &lt;= 20</p></blockquote><p><strong>代码：</strong></p><p><strong>Java：</strong></p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">//结果</span></span><br><span class="line">    <span class="keyword">int</span> sum =<span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">movingCount</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//初始化一个二维数组表示是否访问过</span></span><br><span class="line">        <span class="keyword">boolean</span>[][] visited = <span class="keyword">new</span> <span class="keyword">boolean</span>[m][n];</span><br><span class="line">        dfs(<span class="number">0</span>,<span class="number">0</span>,m,n,k,visited);</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j,<span class="keyword">int</span> m,<span class="keyword">int</span> n,<span class="keyword">int</span> k,<span class="keyword">boolean</span>[][] visited)</span></span>&#123;</span><br><span class="line">        <span class="comment">//判断是否符合条件</span></span><br><span class="line">        <span class="keyword">if</span> (i &lt; <span class="number">0</span> || i &gt;= m || j &lt; <span class="number">0</span> || j &gt;= n || visited[i][j] || getSum(i)+getSum(j) &gt; k)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//标记访问过了</span></span><br><span class="line">        visited[i][j] = <span class="keyword">true</span>;</span><br><span class="line">        <span class="comment">//结果加1</span></span><br><span class="line">        sum++;</span><br><span class="line">        <span class="comment">//深度优先搜索 四个方向</span></span><br><span class="line">        dfs(i-<span class="number">1</span>,j,m,n,k,visited);</span><br><span class="line">        dfs(i+<span class="number">1</span>,j,m,n,k,visited);</span><br><span class="line">        dfs(i,j-<span class="number">1</span>,m,n,k,visited);</span><br><span class="line">        dfs(i,j+<span class="number">1</span>,m,n,k,visited);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//计算数位和</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">getSum</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum =<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            sum+=num%<span class="number">10</span>;</span><br><span class="line">            num/=<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p><strong>C++：</strong></p><figure class="highlight c++"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">movingCount</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">bool</span>&gt;&gt; visited(m, <span class="built_in">vector</span>&lt;<span class="keyword">bool</span>&gt;(n, <span class="number">0</span>));</span><br><span class="line">        dfs(<span class="number">0</span>, <span class="number">0</span>, m, n, k, visited);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> m, <span class="keyword">int</span> n, <span class="keyword">int</span> k, <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">bool</span>&gt;&gt; &amp;visited)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; <span class="number">0</span> || i &gt;= m || j &lt; <span class="number">0</span> || j &gt;= n || visited[i][j] || getSum(i) + getSum(j) &gt; k) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        visited[i][j] = <span class="literal">true</span>;</span><br><span class="line">        res++;</span><br><span class="line">        dfs(i + <span class="number">1</span>, j, m, n, k, visited);</span><br><span class="line">        dfs(i - <span class="number">1</span>, j, m, n, k, visited);</span><br><span class="line">        dfs(i, j + <span class="number">1</span>, m, n, k, visited);</span><br><span class="line">        dfs(i, j - <span class="number">1</span>, m, n, k, visited);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getSum</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (n) &#123;</span><br><span class="line">            sum += n % <span class="number">10</span>;</span><br><span class="line">            n /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></div></figure></div><script src="https://qiniu.techgrow.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {try {var plugin = new ReadmorePlugin();plugin.init({"id": "readmore-container","blogId": "63908-3467185019870-067","name": "牛哄哄的柯南","qrcode": "https://img-blog.csdnimg.cn/57e716984422402281cef814553b2ae9.png#pic_center","keyword": "柯南","lockToc": "yes","random": "1"});} catch(e) {console.warn(e.name + " : " + e.message);}}</script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;   &gt;
          &lt;a href=&quot;#题目&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;
      &lt;p&gt;&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://leetcode-cn.com/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof/&quot; &gt;机器人的运动范围&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;难度 中等&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;地上有一个m行n列的方格，从坐标 [0,0] 到坐标 [m-1,n-1] 。一个机器人从坐标 [0, 0] 的格子开始移动，它每次可以向左、右、上、下移动一格（不能移动到方格外），也不能进入行坐标和列坐标的数位之和大于k的格子。例如，当k为18时，机器人能够进入方格 [35, 37] ，因为3+5+3+7=18。但它不能进入方格 [35, 38]，因为3+5+3+8=19。请问该机器人能够到达多少个格子？&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="LeetCode" scheme="https://keafmd.top/categories/LeetCode/"/>
    
    
    <category term="每天进步一点点系列" scheme="https://keafmd.top/tags/%E6%AF%8F%E5%A4%A9%E8%BF%9B%E6%AD%A5%E4%B8%80%E7%82%B9%E7%82%B9%E7%B3%BB%E5%88%97/"/>
    
    <category term="DFS" scheme="https://keafmd.top/tags/DFS/"/>
    
  </entry>
  
  <entry>
    <title>Linux部署前后端分离项目（SpringBoot+Vue）【Nginx部署】</title>
    <link href="https://keafmd.top/2022/04/26/Linux%E9%83%A8%E7%BD%B2%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE%EF%BC%88SpringBoot-Vue%EF%BC%89%E3%80%90Nginx%E9%83%A8%E7%BD%B2%E3%80%91/"/>
    <id>https://keafmd.top/2022/04/26/Linux%E9%83%A8%E7%BD%B2%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE%EF%BC%88SpringBoot-Vue%EF%BC%89%E3%80%90Nginx%E9%83%A8%E7%BD%B2%E3%80%91/</id>
    <published>2022-04-26T09:27:50.000Z</published>
    <updated>2022-04-26T11:32:49.588Z</updated>
    
    <content type="html"><![CDATA[<div id="readmore-container">        <h1 id="需求引入"   >          <a href="#需求引入" class="heading-link"><i class="fas fa-link"></i></a><a href="#需求引入" class="headerlink" title="需求引入"></a>需求引入</h1>      <blockquote><p>题外话：这种标题网上一搜全是，我为啥还写这篇文章，一是作为笔记，二是可能不同人遇到的问题不一样，处理方案也不同，我多发一篇，就帮助读这篇文章的你多一种部署成功的情况。</p><p>这个时候最多的是部署毕设吧，今天有朋友问我，我就整理成一篇文章供大家参考。</p></blockquote><p>需求很简单，就是想把自己写的前后端分离的项目部署到Linux服务器上，我们要准备啥，首先就是前后端分离的一个项目，其次一个安装好nginx和jdk的服务器，我相信你也都有了，才看到这篇文章的，来吧，跟着开始。</p><p>Linux安装jdk可以看我的这篇文章：<span class="exturl"><a class="exturl__link"   href="https://blog.csdn.net/weixin_43883917/article/details/117256094" >学妹跑过来抱着我的胳膊让我帮她在Linux上装jdk【手把手教学】</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><a id="more"></a>        <h1 id="步骤"   >          <a href="#步骤" class="heading-link"><i class="fas fa-link"></i></a><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1>              <h2 id="1、对前端项目的baseURL进行修改"   >          <a href="#1、对前端项目的baseURL进行修改" class="heading-link"><i class="fas fa-link"></i></a><a href="#1、对前端项目的baseURL进行修改" class="headerlink" title="1、对前端项目的baseURL进行修改"></a>1、对前端项目的baseURL进行修改</h2>      <p>  82是你想在服务器那个端口访问这个项目，自己根据情况更改，XXXX是自己的服务器ip</p><p>加个api是为了后面在nginx处理，随便写，不一样非要是api，后面nginx中对应上就行</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; baseURL: &#39;http:&#x2F;&#x2F;127.0.0.1:8082&#x2F;pethospital&#x2F;&#39;,</span><br><span class="line">baseURL: &#39;http:&#x2F;&#x2F;XXXX:82&#x2F;api&#x2F;pethospital&#x2F;&#39;,</span><br></pre></td></tr></table></div></figure><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204261746333.png" alt="image-20220426174636615"></p>        <h2 id="2、打包前端项目"   >          <a href="#2、打包前端项目" class="heading-link"><i class="fas fa-link"></i></a><a href="#2、打包前端项目" class="headerlink" title="2、打包前端项目"></a>2、打包前端项目</h2>      <p>在前端项目所在目录的控制台执行<code>npm run build</code></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204261749220.png" alt="image-20220426174930105"></p><p>然后就会在项目的根目录下生成 <code>dist</code> 文件夹，一会再用。</p>        <h2 id="3、打包后端项目"   >          <a href="#3、打包后端项目" class="heading-link"><i class="fas fa-link"></i></a><a href="#3、打包后端项目" class="headerlink" title="3、打包后端项目"></a>3、打包后端项目</h2>      <p>注意点说一下，打成jar包（其它什么包都行）但是后面步骤就不同了，就跟着打jar包即可，在pom.xml中加上<code>spring-boot-maven-plugin</code></p><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></div></figure><blockquote><p>控制台执行<code>mvn clean install -Dmaven.test.skip=true</code>，打包同时抛弃测试用例。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204261757250.png" alt="image-20220426175717713"></p><p>打包完成后，在target目录下就会出现一个jar包，留着下一步用，还有上面的前端的dist文件夹。</p>        <h2 id="4、把jar包和dist文件夹上传的服务器"   >          <a href="#4、把jar包和dist文件夹上传的服务器" class="heading-link"><i class="fas fa-link"></i></a><a href="#4、把jar包和dist文件夹上传的服务器" class="headerlink" title="4、把jar包和dist文件夹上传的服务器"></a>4、把jar包和dist文件夹上传的服务器</h2>      <p><strong>用什么工具都行xftp或MobaXterm，为了能跟着搞成，我下面说的可能很细，嫌弃多余跳着看即可，有基础的根据自己情况变更都可以，没经验的就跟着来，至少能成功。</strong></p><p>在服务器根目录下创建个 文件夹存放 <code>mkdir pet</code>，然后把jar包和dist文件夹都移动到这里就行</p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204261852044.png" alt="image-20220426185159386"></p>        <h2 id="5、修改nginx的配置文件"   >          <a href="#5、修改nginx的配置文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#5、修改nginx的配置文件" class="headerlink" title="5、修改nginx的配置文件"></a>5、修改nginx的配置文件</h2>      <p>我的配置文件目录在 <code>/etc/nginx</code>（cd /etc/nginx），编辑<code>nginx.conf</code>文件（vim nginx.conf），因为我的里面配置了其它的内容，我都粘贴出来看起来可能更复杂，我截取重点粘出来。</p><p>设置个跳转路径 ，相当于<code> ip地址/pet</code> 跳转到 <code>IP地址:82端口</code>，这一步不配置也行，直接访问82端口也行。</p><blockquote><p>:zero: 此处请 <font color=red >注意</font> ：提前把服务器的82端口打开</p></blockquote><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">            listen 80;</span><br><span class="line">                #填写绑定证书的域名</span><br><span class="line">                server_name XXXX;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">              location &#x2F;pet &#123;</span><br><span class="line">                  rewrite ^&#x2F;(.*) http:&#x2F;&#x2F;XXXX:82;</span><br><span class="line">              &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></div></figure><blockquote><p>:one:<font color = red>注意</font> ：配置到这就把服务器对应的后端项目对应的端口打开，我的后端设置的8083端口</p><p>两个注意点：</p><p><code># 这里就是 dist 的文件位置 root /pet/dist;</code></p><p><code># 这里端口对应后端端口 proxy_pass http://XXXX:8083;</code></p></blockquote><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">http&#123;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 82;</span><br><span class="line">    server_name pet;</span><br><span class="line"></span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        # 这里就是 dist 的文件位置</span><br><span class="line">        root &#x2F;pet&#x2F;dist;</span><br><span class="line">        index index.html;</span><br><span class="line">        proxy_ssl_session_reuse off;</span><br><span class="line">        try_files  $uri $uri&#x2F; &#x2F;index.html;</span><br><span class="line">    &#125;</span><br><span class="line">    #拦截&#x2F;api&#x2F;请求，因为所有的请求在前端被处理成 &#39;&#x2F;api+后端接口&#39;形式</span><br><span class="line">    location &#x2F;api&#x2F; &#123;</span><br><span class="line">        #开启重写日志记录，这个会记录在error.log里面，级别为notice</span><br><span class="line">        rewrite_log on;</span><br><span class="line">        #重写规则，可根据实际情况调整。</span><br><span class="line">        rewrite ^.+api&#x2F;?(.*)$ &#x2F;$1 break;</span><br><span class="line">        # 这里端口对应后端端口</span><br><span class="line">        proxy_pass http:&#x2F;&#x2F;XXXX:8083;</span><br><span class="line">        proxy_redirect    off;</span><br><span class="line">        proxy_set_header  Host $host;</span><br><span class="line">        proxy_set_header  X-real-ip $remote_addr;</span><br><span class="line">        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></div></figure><p><strong>执行下面两步：</strong></p><p>校验配置文件：<code>nginx -t</code></p><p>重启gninx：<code>nginx -s reload</code></p>        <h2 id="6、启动后端项目"   >          <a href="#6、启动后端项目" class="heading-link"><i class="fas fa-link"></i></a><a href="#6、启动后端项目" class="headerlink" title="6、启动后端项目"></a>6、启动后端项目</h2>      <p>切换到 <code>/pet</code> 目录下</p><p>启动命令：</p><p><code>nohup java -Dfile.encoding=utf-8 -jar pet-hospital-0.0.1-SNAPSHOT.jar &gt;&gt; log  2&gt;&amp;1 &amp;</code></p><p>用nohup可以在窗口关闭时，使程序继续运行，我们也可以写个启动的脚本，这样重启起来方便</p><blockquote><p>先 <code>vim startPet.sh</code> 编辑脚本</p></blockquote><figure class="highlight sh"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">pid=(`ps -ef | grep pet | grep -v grep | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`)</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="variable">$pid</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;is null&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"> ps -ef | grep pet | grep -v grep | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | xargs <span class="built_in">kill</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">nohup java -Dfile.encoding=utf-8 -jar pet-hospital-0.0.1-SNAPSHOT.jar &gt;&gt; <span class="built_in">log</span>  2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></div></figure><blockquote><p>在变成可执行命令：<code>chmod +x startPet.sh</code></p></blockquote><blockquote><p>在执行： <code>./startPet.sh</code> （启动或重启）</p></blockquote><p>这样就会参生log和nohup.out文件了，</p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204261927243.png" alt="image-20220426192659050"></p>        <h2 id="7、日志查看"   >          <a href="#7、日志查看" class="heading-link"><i class="fas fa-link"></i></a><a href="#7、日志查看" class="headerlink" title="7、日志查看"></a>7、日志查看</h2>      <p>看倒数n行 ： <code>tail -n 100 log</code></p><p>一直查看： <code>tail -f log</code></p><p>看下日志后端没问题，基本就是搞定了</p><p>浏览器访问：<code>服务器ip/pet</code> 就可以访问看到项目的界面了</p></div><script src="https://qiniu.techgrow.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {try {var plugin = new ReadmorePlugin();plugin.init({"id": "readmore-container","blogId": "63908-3467185019870-067","name": "牛哄哄的柯南","qrcode": "https://img-blog.csdnimg.cn/57e716984422402281cef814553b2ae9.png#pic_center","keyword": "柯南","lockToc": "yes","random": "1"});} catch(e) {console.warn(e.name + " : " + e.message);}}</script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;需求引入&quot;   &gt;
          &lt;a href=&quot;#需求引入&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#需求引入&quot; class=&quot;headerlink&quot; title=&quot;需求引入&quot;&gt;&lt;/a&gt;需求引入&lt;/h1&gt;
      &lt;blockquote&gt;
&lt;p&gt;题外话：这种标题网上一搜全是，我为啥还写这篇文章，一是作为笔记，二是可能不同人遇到的问题不一样，处理方案也不同，我多发一篇，就帮助读这篇文章的你多一种部署成功的情况。&lt;/p&gt;
&lt;p&gt;这个时候最多的是部署毕设吧，今天有朋友问我，我就整理成一篇文章供大家参考。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;需求很简单，就是想把自己写的前后端分离的项目部署到Linux服务器上，我们要准备啥，首先就是前后端分离的一个项目，其次一个安装好nginx和jdk的服务器，我相信你也都有了，才看到这篇文章的，来吧，跟着开始。&lt;/p&gt;
&lt;p&gt;Linux安装jdk可以看我的这篇文章：&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://blog.csdn.net/weixin_43883917/article/details/117256094&quot; &gt;学妹跑过来抱着我的胳膊让我帮她在Linux上装jdk【手把手教学】&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://keafmd.top/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://keafmd.top/tags/Linux/"/>
    
    <category term="SpringBoot" scheme="https://keafmd.top/tags/SpringBoot/"/>
    
    <category term="Vue" scheme="https://keafmd.top/tags/Vue/"/>
    
    <category term="Nginx" scheme="https://keafmd.top/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>验证回文串</title>
    <link href="https://keafmd.top/2022/04/25/%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E4%B8%B2/"/>
    <id>https://keafmd.top/2022/04/25/%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E4%B8%B2/</id>
    <published>2022-04-25T06:21:32.000Z</published>
    <updated>2022-04-28T05:49:19.016Z</updated>
    
    <content type="html"><![CDATA[<div id="readmore-container">        <h1 id="题目"   >          <a href="#题目" class="heading-link"><i class="fas fa-link"></i></a><a href="#题目" class="headerlink" title="题目"></a>题目</h1>      <p><span class="exturl"><a class="exturl__link"   href="https://leetcode-cn.com/problems/valid-palindrome/" >验证回文串</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>难度 简单</p><p>给定一个字符串，验证它是否是回文串，只考虑字母和数字字符，可以忽略字母的大小写。</p><p><strong>说明：</strong>本题中，我们将空字符串定义为有效的回文串。</p><a id="more"></a><blockquote><p>示例 1:</p><p>输入: “A man, a plan, a canal: Panama”<br>输出: true<br>解释：”amanaplanacanalpanama” 是回文串</p><p>示例 2:</p><p>输入: “race a car”<br>输出: false<br>解释：”raceacar” 不是回文串</p></blockquote><blockquote><p>提示：1 &lt;= s.length &lt;= 2 * 105<br>字符串 s 由 ASCII 字符组成</p></blockquote><p><strong>代码：</strong></p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPalindrome</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//先都转小写</span></span><br><span class="line">        s = s.toLowerCase();</span><br><span class="line">        StringBuilder sCopy = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">            <span class="comment">//自保留字母和数字</span></span><br><span class="line">            <span class="keyword">if</span>(Character.isLetterOrDigit(s.charAt(i))) &#123;</span><br><span class="line">                sCopy.append(s.charAt(i));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//反转字符串</span></span><br><span class="line">        StringBuffer sCopy2 = <span class="keyword">new</span> StringBuffer(sCopy).reverse();</span><br><span class="line">        <span class="comment">//比较</span></span><br><span class="line">        <span class="keyword">return</span> sCopy.toString().equals(sCopy2.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p><strong>C++版：</strong></p><figure class="highlight c++"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">string</span> str;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> ch : s)&#123;</span><br><span class="line">            <span class="comment">// 只考虑字母和数字字符</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">isalnum</span>(ch))&#123;</span><br><span class="line">                <span class="comment">// 将字符转换为小写</span></span><br><span class="line">                str += <span class="built_in">tolower</span>(ch);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * c.rbegin() 返回一个逆序迭代器，它指向容器c的最后一个元素</span></span><br><span class="line"><span class="comment">         * c.rend() 返回一个逆序迭代器，它指向容器c的第一个元素前面的位置</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="built_in">string</span> <span class="title">str2</span><span class="params">(str.rbegin(), str.rend())</span></span>;</span><br><span class="line">        <span class="comment">// 判断是否为回文串</span></span><br><span class="line">        <span class="keyword">return</span> str == str2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Solution s;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; (s.isPalindrome(<span class="string">&quot;A man, a plan, a canal: Panama&quot;</span>) ?<span class="string">&quot;true&quot;</span>:<span class="string">&quot;false&quot;</span>)&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></div></figure><blockquote><p><strong>以上就是验证回文串的全部内容</strong></p></blockquote><blockquote><p><strong>版权声明：keafmd</strong><br><strong>原创博主：牛哄哄的柯南</strong><br><strong>博主原文链接：<a href="https://keafmd.top/">https://keafmd.top/</a></strong></p></blockquote><p><strong>加油！</strong></p><p><strong>共同努力！</strong></p><p><strong>Keafmd</strong></p></div><script src="https://qiniu.techgrow.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {try {var plugin = new ReadmorePlugin();plugin.init({"id": "readmore-container","blogId": "63908-3467185019870-067","name": "牛哄哄的柯南","qrcode": "https://img-blog.csdnimg.cn/57e716984422402281cef814553b2ae9.png#pic_center","keyword": "柯南","lockToc": "yes","random": "1"});} catch(e) {console.warn(e.name + " : " + e.message);}}</script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;   &gt;
          &lt;a href=&quot;#题目&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;
      &lt;p&gt;&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://leetcode-cn.com/problems/valid-palindrome/&quot; &gt;验证回文串&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;难度 简单&lt;/p&gt;
&lt;p&gt;给定一个字符串，验证它是否是回文串，只考虑字母和数字字符，可以忽略字母的大小写。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;本题中，我们将空字符串定义为有效的回文串。&lt;/p&gt;</summary>
    
    
    
    <category term="LeetCode" scheme="https://keafmd.top/categories/LeetCode/"/>
    
    
    <category term="每天进步一点点系列" scheme="https://keafmd.top/tags/%E6%AF%8F%E5%A4%A9%E8%BF%9B%E6%AD%A5%E4%B8%80%E7%82%B9%E7%82%B9%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>配置文件加密（Jasypt的简单使用）</title>
    <link href="https://keafmd.top/2022/04/25/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8A%A0%E5%AF%86%EF%BC%88Jasypt%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%EF%BC%89/"/>
    <id>https://keafmd.top/2022/04/25/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8A%A0%E5%AF%86%EF%BC%88Jasypt%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%EF%BC%89/</id>
    <published>2022-04-25T03:54:56.000Z</published>
    <updated>2022-04-25T05:41:43.926Z</updated>
    
    <content type="html"><![CDATA[<div id="readmore-container">        <h1 id="需求引入"   >          <a href="#需求引入" class="heading-link"><i class="fas fa-link"></i></a><a href="#需求引入" class="headerlink" title="需求引入"></a>需求引入</h1>      <p>当我们需要对SpringBoot项目的配置文件中的信息进行加密时，如数据库密码等，此时我们可以使用Jasypt来实现。</p><a id="more"></a>        <h1 id="解决方案"   >          <a href="#解决方案" class="heading-link"><i class="fas fa-link"></i></a><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1>              <h2 id="第一步，引入Jasypt依赖"   >          <a href="#第一步，引入Jasypt依赖" class="heading-link"><i class="fas fa-link"></i></a><a href="#第一步，引入Jasypt依赖" class="headerlink" title="第一步，引入Jasypt依赖"></a>第一步，引入Jasypt依赖</h2>      <figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.ulisesbocchio<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jasypt-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></div></figure>        <h2 id="第二步，编写工具类"   >          <a href="#第二步，编写工具类" class="heading-link"><i class="fas fa-link"></i></a><a href="#第二步，编写工具类" class="headerlink" title="第二步，编写工具类"></a>第二步，编写工具类</h2>      <p><strong>JasyptUtils：</strong></p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.keafmd.springdemo.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.jasypt.encryption.pbe.PooledPBEStringEncryptor;</span><br><span class="line"><span class="keyword">import</span> org.jasypt.encryption.pbe.StandardPBEByteEncryptor;</span><br><span class="line"><span class="keyword">import</span> org.jasypt.encryption.pbe.config.SimpleStringPBEConfig;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Keafmd</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: JasyptUtils</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: 牛哄哄的柯南</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2022-04-25 11:18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JasyptUtils</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Jasypt生成加密结果</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password 配置文件中设定的加密密码 jasypt.encryptor.password</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value    待加密值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encryptPwd</span><span class="params">(String password, String value)</span> </span>&#123;</span><br><span class="line">        PooledPBEStringEncryptor encryptOr = <span class="keyword">new</span> PooledPBEStringEncryptor();</span><br><span class="line">        encryptOr.setConfig(cryptOr(password));</span><br><span class="line">        String result = encryptOr.encrypt(value);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password 配置文件中设定的加密密码 jasypt.encryptor.password</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value    待解密密文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decyptPwd</span><span class="params">(String password, String value)</span> </span>&#123;</span><br><span class="line">        PooledPBEStringEncryptor encryptOr = <span class="keyword">new</span> PooledPBEStringEncryptor();</span><br><span class="line">        encryptOr.setConfig(cryptOr(password));</span><br><span class="line">        String result = encryptOr.decrypt(value);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password salt</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SimpleStringPBEConfig <span class="title">cryptOr</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        SimpleStringPBEConfig config = <span class="keyword">new</span> SimpleStringPBEConfig();</span><br><span class="line">        config.setPassword(password);</span><br><span class="line">        config.setAlgorithm(StandardPBEByteEncryptor.DEFAULT_ALGORITHM);</span><br><span class="line">        config.setKeyObtentionIterations(<span class="string">&quot;1000&quot;</span>);</span><br><span class="line">        config.setPoolSize(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        config.setProviderName(<span class="keyword">null</span>);</span><br><span class="line">        config.setSaltGeneratorClassName(<span class="string">&quot;org.jasypt.salt.RandomSaltGenerator&quot;</span>);</span><br><span class="line">        config.setStringOutputType(<span class="string">&quot;base64&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> config;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 加密</span></span><br><span class="line">        <span class="comment">// 盐值替换成自己熟悉的口令，此口令为解密密钥，需要妥善保管。</span></span><br><span class="line">        <span class="comment">// 盐值也需要在第三步写入配置文件</span></span><br><span class="line">        System.out.println(encryptPwd(<span class="string">&quot;keafmd&quot;</span>, <span class="string">&quot;123456&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="第三步，修改配置文件"   >          <a href="#第三步，修改配置文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#第三步，修改配置文件" class="headerlink" title="第三步，修改配置文件"></a>第三步，修改配置文件</h2>      <ul><li>把盐值写入配置文件</li><li>把明文密码替换为工具类生成的密文，并用ENC(）包着</li></ul><p><strong>eg：</strong></p><figure class="highlight yml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 连接数据源</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">ENC(aXcmM77CmYgj67mBxQgI2A==)</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://XXXX:XX/tt?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false</span></span><br><span class="line">    </span><br><span class="line"><span class="attr">jasypt:</span></span><br><span class="line">  <span class="attr">encryptor:</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">keafmd</span></span><br></pre></td></tr></table></div></figure><blockquote><p><strong>以上就是配置文件加密（Jasypt的简单使用）的全部内容</strong></p></blockquote><blockquote><p><strong>版权声明：keafmd</strong><br><strong>原创博主：牛哄哄的柯南</strong><br><strong>博主原文链接：<a href="https://keafmd.top/">https://keafmd.top/</a></strong></p></blockquote><p><strong>加油！</strong></p><p><strong>共同努力！</strong></p><p><strong>Keafmd</strong></p></div><script src="https://qiniu.techgrow.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {try {var plugin = new ReadmorePlugin();plugin.init({"id": "readmore-container","blogId": "63908-3467185019870-067","name": "牛哄哄的柯南","qrcode": "https://img-blog.csdnimg.cn/57e716984422402281cef814553b2ae9.png#pic_center","keyword": "柯南","lockToc": "yes","random": "1"});} catch(e) {console.warn(e.name + " : " + e.message);}}</script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;需求引入&quot;   &gt;
          &lt;a href=&quot;#需求引入&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#需求引入&quot; class=&quot;headerlink&quot; title=&quot;需求引入&quot;&gt;&lt;/a&gt;需求引入&lt;/h1&gt;
      &lt;p&gt;当我们需要对SpringBoot项目的配置文件中的信息进行加密时，如数据库密码等，此时我们可以使用Jasypt来实现。&lt;/p&gt;</summary>
    
    
    
    <category term="Jasypt" scheme="https://keafmd.top/categories/Jasypt/"/>
    
    
    <category term="Jasypt" scheme="https://keafmd.top/tags/Jasypt/"/>
    
  </entry>
  
  <entry>
    <title>clion中cpp文件显示This file does not belong to any project ，code insight features might not work【解决方案】</title>
    <link href="https://keafmd.top/2022/04/24/clion%E4%B8%ADcpp%E6%96%87%E4%BB%B6%E6%98%BE%E7%A4%BAThis%20file%20does%20not%20belong%20to%20any%20project%20%EF%BC%8Ccode%20insight%20features%20might%20not%20work%E3%80%90%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E3%80%91/"/>
    <id>https://keafmd.top/2022/04/24/clion%E4%B8%ADcpp%E6%96%87%E4%BB%B6%E6%98%BE%E7%A4%BAThis%20file%20does%20not%20belong%20to%20any%20project%20%EF%BC%8Ccode%20insight%20features%20might%20not%20work%E3%80%90%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E3%80%91/</id>
    <published>2022-04-24T08:11:19.000Z</published>
    <updated>2022-04-25T05:41:50.129Z</updated>
    
    <content type="html"><![CDATA[<div id="readmore-container">        <h1 id="问题"   >          <a href="#问题" class="heading-link"><i class="fas fa-link"></i></a><a href="#问题" class="headerlink" title="问题"></a>问题</h1>      <p>cpp文件上方出现<br><code>This file does not belong to any project ，code insight features might not work properly</code>，并且main函数无法运行<br><img src="https://img-blog.csdnimg.cn/1b60aaf08e6b4a988cca8a192be06a93.png" alt="在这里插入图片描述"></p><a id="more"></a>        <h1 id="解决方案"   >          <a href="#解决方案" class="heading-link"><i class="fas fa-link"></i></a><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1>              <h2 id="第一步：修改下CMakeLists-txt文件"   >          <a href="#第一步：修改下CMakeLists-txt文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#第一步：修改下CMakeLists-txt文件" class="headerlink" title="第一步：修改下CMakeLists.txt文件"></a>第一步：修改下CMakeLists.txt文件</h2>      <p>为了以后方便，我们先修改下CMakeLists.txt文件<br><img   src="https://img-blog.csdnimg.cn/7530aa84b8764a65862ddfd13ba7c7b2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA54mb5ZOE5ZOE55qE5p-v5Y2X,size_20,color_FFFFFF,t_70,g_se,x_16" style="width: image/watermark,type_d3F5LXplbmhlaQ,shadow_50,tepx;height: t_Q1NETiBA54mb5ZOE5ZOE55qE5p-v5Y2X,size_20,color_FFFFFF,t_70,g_se,px;"  alt="在这里插入图片描述"><br><strong>CMakeLists.txt：</strong></p><figure class="highlight cpp"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 遍历项目根目录下所有的 .cpp 文件</span><br><span class="line">file (GLOB_RECURSE files *.cpp)</span><br><span class="line">foreach (file $&#123;files&#125;)</span><br><span class="line">    <span class="built_in">string</span>(REGEX REPLACE <span class="string">&quot;.+/(.+)\\..*&quot;</span> <span class="string">&quot;\\1&quot;</span> exe $&#123;file&#125;)</span><br><span class="line">    add_executable ($&#123;exe&#125; $&#123;file&#125;)</span><br><span class="line">    message (\ \ \ \ --\ src/$&#123;exe&#125;.cpp\ will\ be\ compiled\ to\ bin/$&#123;exe&#125;)</span><br><span class="line">endforeach ()</span><br></pre></td></tr></table></div></figure><blockquote><p><strong>这样以后就不用再修改CMakeLists.txt这个文件了。</strong></p></blockquote>        <h2 id="第二步：重新加载下项目"   >          <a href="#第二步：重新加载下项目" class="heading-link"><i class="fas fa-link"></i></a><a href="#第二步：重新加载下项目" class="headerlink" title="第二步：重新加载下项目"></a>第二步：重新加载下项目</h2>      <p><img   src="https://img-blog.csdnimg.cn/b5b821740a284b0ab0ec3836a1067291.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA54mb5ZOE5ZOE55qE5p-v5Y2X,size_20,color_FFFFFF,t_70,g_se,x_16" style="width: image/watermark,type_d3F5LXplbmhlaQ,shadow_50,tepx;height: t_Q1NETiBA54mb5ZOE5ZOE55qE5p-v5Y2X,size_20,color_FFFFFF,t_70,g_se,px;"  alt="在这里插入图片描述"></p><blockquote><p><strong>加载完成后main函数就可以执行了，及时cpp文件上方还有那句话也不影响。</strong></p></blockquote><p><img   src="https://img-blog.csdnimg.cn/933a865697274b85971e81f4a86c2a31.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA54mb5ZOE5ZOE55qE5p-v5Y2X,size_20,color_FFFFFF,t_70,g_se,x_16" style="width: image/watermark,type_d3F5LXplbmhlaQ,shadow_50,tepx;height: t_Q1NETiBA54mb5ZOE5ZOE55qE5p-v5Y2X,size_20,color_FFFFFF,t_70,g_se,px;"  alt="在这里插入图片描述"></p><blockquote><p><strong>以上就是clion中cpp文件显示This file does not belong to any project ，code insight features might not work【解决方案】的全部内容</strong></p></blockquote><blockquote><p><strong>版权声明：</strong><br><strong>原创博主：牛哄哄的柯南</strong><br><strong>博主原文链接：<a href="https://keafmd.top/">https://keafmd.top/</a></strong></p></blockquote><p><strong>看完如果对你有帮助</strong></p><p><strong>加油！</strong></p><p><strong>共同努力！</strong></p><p><strong>Keafmd</strong></p></div><script src="https://qiniu.techgrow.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {try {var plugin = new ReadmorePlugin();plugin.init({"id": "readmore-container","blogId": "63908-3467185019870-067","name": "牛哄哄的柯南","qrcode": "https://img-blog.csdnimg.cn/57e716984422402281cef814553b2ae9.png#pic_center","keyword": "柯南","lockToc": "yes","random": "1"});} catch(e) {console.warn(e.name + " : " + e.message);}}</script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;问题&quot;   &gt;
          &lt;a href=&quot;#问题&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h1&gt;
      &lt;p&gt;cpp文件上方出现&lt;br&gt;&lt;code&gt;This file does not belong to any project ，code insight features might not work properly&lt;/code&gt;，并且main函数无法运行&lt;br&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/1b60aaf08e6b4a988cca8a192be06a93.png&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="帮学妹解决问题" scheme="https://keafmd.top/tags/%E5%B8%AE%E5%AD%A6%E5%A6%B9%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>买卖股票的最佳时机</title>
    <link href="https://keafmd.top/2022/04/24/%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/"/>
    <id>https://keafmd.top/2022/04/24/%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/</id>
    <published>2022-04-24T05:35:24.000Z</published>
    <updated>2022-04-24T05:42:05.028Z</updated>
    
    <content type="html"><![CDATA[<div id="readmore-container">        <h1 id="题目"   >          <a href="#题目" class="heading-link"><i class="fas fa-link"></i></a><a href="#题目" class="headerlink" title="题目"></a>题目</h1>      <p><span class="exturl"><a class="exturl__link"   href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/" >买卖股票的最佳时机</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>难度 简单</p><blockquote><p>给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。你只能选择 某一天 买入这只股票，并选择在 未来的某一个不同的日子 卖出该股票。设计一个算法来计算你所能获取的最大利润。返回你可以从这笔交易中获取的最大利润。如果你不能获取任何利润，返回 0 。</p></blockquote><a id="more"></a><blockquote><p>示例 1：</p><p>输入：[7,1,5,3,6,4]<br>输出：5<br>解释：在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6-1 = 5 。<br>注意利润不能是 7-1 = 6, 因为卖出价格需要大于买入价格；同时，你不能在买入前卖出股票。</p><p>示例 2：</p><p>输入：prices = [7,6,4,3,1]<br>输出：0<br>解释：在这种情况下, 没有交易完成, 所以最大利润为 0。</p></blockquote><blockquote><p>提示：1 &lt;= prices.length &lt;= 105<br>0 &lt;= prices[i] &lt;= 104</p></blockquote><p>代码：</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span>[] prices)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//dp dp[i]表示该天的最大利益</span></span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[prices.length];</span><br><span class="line">        <span class="comment">//最大利益</span></span><br><span class="line">        <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//从第二天开始，每天的最大利益取决于前一天的最大利益和当天的价格</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; prices.length; i++) &#123;</span><br><span class="line">            <span class="comment">//当前天的最大利益 = 前一天的最大利益 + 当天的价格 - 前一天的价格</span></span><br><span class="line">            <span class="comment">//如果当天的利益小于0，则当天的利益为0</span></span><br><span class="line">            dp[i] = Math.max(dp[i-<span class="number">1</span>] + prices[i] - prices[i-<span class="number">1</span>],<span class="number">0</span>);</span><br><span class="line">            <span class="comment">//更新最大利益</span></span><br><span class="line">            max = Math.max(max,dp[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//返回最大利益</span></span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h1 id="每日单词"   >          <a href="#每日单词" class="heading-link"><i class="fas fa-link"></i></a><a href="#每日单词" class="headerlink" title="每日单词"></a>每日单词</h1>      <p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204241341716.png" alt="image-20220424134137071"></p></div><script src="https://qiniu.techgrow.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {try {var plugin = new ReadmorePlugin();plugin.init({"id": "readmore-container","blogId": "63908-3467185019870-067","name": "牛哄哄的柯南","qrcode": "https://img-blog.csdnimg.cn/57e716984422402281cef814553b2ae9.png#pic_center","keyword": "柯南","lockToc": "yes","random": "1"});} catch(e) {console.warn(e.name + " : " + e.message);}}</script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;   &gt;
          &lt;a href=&quot;#题目&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;
      &lt;p&gt;&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/&quot; &gt;买卖股票的最佳时机&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;难度 简单&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。你只能选择 某一天 买入这只股票，并选择在 未来的某一个不同的日子 卖出该股票。设计一个算法来计算你所能获取的最大利润。返回你可以从这笔交易中获取的最大利润。如果你不能获取任何利润，返回 0 。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="每天进步一点点系列" scheme="https://keafmd.top/tags/%E6%AF%8F%E5%A4%A9%E8%BF%9B%E6%AD%A5%E4%B8%80%E7%82%B9%E7%82%B9%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>最长连续序列</title>
    <link href="https://keafmd.top/2022/04/22/%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97/"/>
    <id>https://keafmd.top/2022/04/22/%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97/</id>
    <published>2022-04-22T03:33:47.000Z</published>
    <updated>2022-04-22T03:47:57.155Z</updated>
    
    <content type="html"><![CDATA[<div id="readmore-container">        <h1 id="题目"   >          <a href="#题目" class="heading-link"><i class="fas fa-link"></i></a><a href="#题目" class="headerlink" title="题目"></a>题目</h1>      <p>题目：<span class="exturl"><a class="exturl__link"   href="https://leetcode-cn.com/problems/longest-consecutive-sequence/" >最长连续序列</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>难度：中等</p><blockquote><p>给定一个未排序的整数数组 nums ，找出数字连续的最长序列（不要求序列元素在原数组中连续）的长度。请你设计并实现时间复杂度为 O(n) 的算法解决此问题。</p></blockquote><a id="more"></a><blockquote><p>示例 1：</p><p>输入：nums = [100,4,200,1,3,2]<br>输出：4<br>解释：最长数字连续序列是 [1, 2, 3, 4]。它的长度为 4。</p><p>示例 2：</p><p>输入：nums = [0,3,7,2,5,8,4,6,0,1]<br>输出：9</p><p>提示：0 &lt;= nums.length &lt;= 105<br>-109 &lt;= nums[i] &lt;= 109</p></blockquote><p><strong>题解：</strong>先排下序，用个一维dp数组，dp[n]记录长度，最后求出最大的dp值就行了，数组长度为0的先处理下就行了，注意点就是返回值默认值为1，先给dp数组都初始化为1，因为最小的连续长度肯定是包含自身也就是1</p><p><strong>代码：</strong></p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">longestConsecutive</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums.length==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//排序下</span></span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        <span class="comment">//max初始化为1，因为最小的连续序列长度为1，避免数组中只有一个元素的情况，也可以在上面写if提前过滤</span></span><br><span class="line">        <span class="keyword">int</span> max = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[nums.length];</span><br><span class="line">        <span class="comment">//先填充个初始长度，包括本身，也就是1</span></span><br><span class="line">        Arrays.fill(dp,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">            <span class="comment">//比前一个大，那么就是连续的</span></span><br><span class="line">            <span class="keyword">if</span>(nums[i]==nums[i-<span class="number">1</span>]+<span class="number">1</span>)&#123;</span><br><span class="line">                dp[i] = dp[i-<span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//和前一个相等，连续长度保持就行</span></span><br><span class="line">            <span class="keyword">if</span>(nums[i]==nums[i-<span class="number">1</span>])&#123;</span><br><span class="line">                dp[i] = dp[i-<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            max = Math.max(max,dp[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h1 id="每日单词"   >          <a href="#每日单词" class="heading-link"><i class="fas fa-link"></i></a><a href="#每日单词" class="headerlink" title="每日单词"></a>每日单词</h1>      <p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204221147708.png" alt="image-20220422114734937"></p></div><script src="https://qiniu.techgrow.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {try {var plugin = new ReadmorePlugin();plugin.init({"id": "readmore-container","blogId": "63908-3467185019870-067","name": "牛哄哄的柯南","qrcode": "https://img-blog.csdnimg.cn/57e716984422402281cef814553b2ae9.png#pic_center","keyword": "柯南","lockToc": "yes","random": "1"});} catch(e) {console.warn(e.name + " : " + e.message);}}</script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;   &gt;
          &lt;a href=&quot;#题目&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;
      &lt;p&gt;题目：&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://leetcode-cn.com/problems/longest-consecutive-sequence/&quot; &gt;最长连续序列&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;难度：中等&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给定一个未排序的整数数组 nums ，找出数字连续的最长序列（不要求序列元素在原数组中连续）的长度。请你设计并实现时间复杂度为 O(n) 的算法解决此问题。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="每天进步一点点系列" scheme="https://keafmd.top/tags/%E6%AF%8F%E5%A4%A9%E8%BF%9B%E6%AD%A5%E4%B8%80%E7%82%B9%E7%82%B9%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>只出现一次的数字（水了个简单题）</title>
    <link href="https://keafmd.top/2022/04/21/%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97%EF%BC%88%E6%B0%B4%E4%BA%86%E4%B8%AA%E7%AE%80%E5%8D%95%E9%A2%98%EF%BC%89/"/>
    <id>https://keafmd.top/2022/04/21/%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97%EF%BC%88%E6%B0%B4%E4%BA%86%E4%B8%AA%E7%AE%80%E5%8D%95%E9%A2%98%EF%BC%89/</id>
    <published>2022-04-21T11:59:40.000Z</published>
    <updated>2022-04-22T01:50:13.020Z</updated>
    
    <content type="html"><![CDATA[<div id="readmore-container">        <h1 id="题目"   >          <a href="#题目" class="heading-link"><i class="fas fa-link"></i></a><a href="#题目" class="headerlink" title="题目"></a>题目</h1>      <p>题目：<span class="exturl"><a class="exturl__link"   href="https://leetcode-cn.com/problems/single-number/" >只出现一次的数字</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><blockquote><p>给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。</p><p>说明：你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？</p></blockquote><a id="more"></a><p><strong>示例 1:</strong></p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: [2,2,1]</span><br><span class="line">输出: 1</span><br></pre></td></tr></table></div></figure><p><strong>示例 2:</strong></p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: [4,1,2,1,2]</span><br><span class="line">输出: 4</span><br></pre></td></tr></table></div></figure><p><strong>题解：</strong></p><blockquote><p>本题可以直接使用异或(^,相同为0，不同为1)去解决，先说方案，异或数组中的所有数，最后剩下的就是只出现一次的数</p><p>分析：</p><p>a^a = 0  0^b = b ,所以 a^a ^ b = b</p><p>拿个数举例子：</p><p>3 ^ 3 = 0011^0011 = 0000 = 0</p><p>0 ^ 2 = 0000^0010 = 0010 = 2</p><p>所以 3^3 ^2 = 2</p><p>最后所有出现偶数次的数异或后都成0了，0在和出现一次的（其实出现奇数次也是一样）异或，得到的就是我们要的那个数了</p></blockquote><p><strong>代码：</strong></p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">singleNumber</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//用异或 ，因为 a^b^a = b </span></span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> num : nums) &#123;</span><br><span class="line">            <span class="comment">//所以</span></span><br><span class="line">            res ^= num;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></div><script src="https://qiniu.techgrow.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {try {var plugin = new ReadmorePlugin();plugin.init({"id": "readmore-container","blogId": "63908-3467185019870-067","name": "牛哄哄的柯南","qrcode": "https://img-blog.csdnimg.cn/57e716984422402281cef814553b2ae9.png#pic_center","keyword": "柯南","lockToc": "yes","random": "1"});} catch(e) {console.warn(e.name + " : " + e.message);}}</script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;   &gt;
          &lt;a href=&quot;#题目&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;
      &lt;p&gt;题目：&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://leetcode-cn.com/problems/single-number/&quot; &gt;只出现一次的数字&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。&lt;/p&gt;
&lt;p&gt;说明：你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="每天进步一点点系列" scheme="https://keafmd.top/tags/%E6%AF%8F%E5%A4%A9%E8%BF%9B%E6%AD%A5%E4%B8%80%E7%82%B9%E7%82%B9%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>名侦探柯南核心人物图</title>
    <link href="https://keafmd.top/2022/04/19/%E5%90%8D%E4%BE%A6%E6%8E%A2%E6%9F%AF%E5%8D%97%E6%A0%B8%E5%BF%83%E4%BA%BA%E7%89%A9%E5%9B%BE/"/>
    <id>https://keafmd.top/2022/04/19/%E5%90%8D%E4%BE%A6%E6%8E%A2%E6%9F%AF%E5%8D%97%E6%A0%B8%E5%BF%83%E4%BA%BA%E7%89%A9%E5%9B%BE/</id>
    <published>2022-04-19T07:33:14.000Z</published>
    <updated>2022-04-19T07:55:08.475Z</updated>
    
    <content type="html"><![CDATA[<div id="readmore-container">        <h1 id="核心人物图"   >          <a href="#核心人物图" class="heading-link"><i class="fas fa-link"></i></a><a href="#核心人物图" class="headerlink" title="核心人物图"></a>核心人物图</h1>      <p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/%E6%9F%AF%E5%8D%97.webp" alt="柯南"></p><a id="more"></a><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/%E6%96%B0%E4%B8%80.webp" alt="新一"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/%E5%B0%8F%E5%85%B0.webp" alt="小兰"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/%E6%AF%9B%E5%88%A9%E5%B0%8F%E4%BA%94%E9%83%8E.webp" alt="毛利小五郎"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191545827.webp" alt="阿笠博士"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191546437.webp" alt="妃英理"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191546944.webp" alt="工藤优作"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191546523.webp" alt="工藤有希子"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191546974.webp" alt="目暮警官"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191546545.webp" alt="高木"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191546185.webp" alt="佐藤"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191546688.webp" alt="光彦"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191546998.webp" alt="元太"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191547553.webp" alt="园子"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191547061.webp" alt="步美"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191547557.webp" alt="怪盗基德"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191547245.webp" alt="和叶"></p><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/202204191547818.webp" alt="平次"></p><p>来源</p><p>百度百科：<span class="exturl"><a class="exturl__link"   href="https://baike.baidu.com/item/%E5%90%8D%E4%BE%A6%E6%8E%A2%E6%9F%AF%E5%8D%97/3469662?fromtitle=%E6%9F%AF%E5%8D%97&fromid=14081833" >柯南</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p></div><script src="https://qiniu.techgrow.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {try {var plugin = new ReadmorePlugin();plugin.init({"id": "readmore-container","blogId": "63908-3467185019870-067","name": "牛哄哄的柯南","qrcode": "https://img-blog.csdnimg.cn/57e716984422402281cef814553b2ae9.png#pic_center","keyword": "柯南","lockToc": "yes","random": "1"});} catch(e) {console.warn(e.name + " : " + e.message);}}</script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;核心人物图&quot;   &gt;
          &lt;a href=&quot;#核心人物图&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#核心人物图&quot; class=&quot;headerlink&quot; title=&quot;核心人物图&quot;&gt;&lt;/a&gt;核心人物图&lt;/h1&gt;
      &lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/%E6%9F%AF%E5%8D%97.webp&quot; alt=&quot;柯南&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="柯南" scheme="https://keafmd.top/tags/%E6%9F%AF%E5%8D%97/"/>
    
  </entry>
  
  <entry>
    <title>组合总和-Leetcode</title>
    <link href="https://keafmd.top/2022/04/19/%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C-Leetcode/"/>
    <id>https://keafmd.top/2022/04/19/%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C-Leetcode/</id>
    <published>2022-04-19T01:47:00.000Z</published>
    <updated>2022-04-19T01:55:06.697Z</updated>
    
    <content type="html"><![CDATA[<div id="readmore-container">        <h1 id="每日题目"   >          <a href="#每日题目" class="heading-link"><i class="fas fa-link"></i></a><a href="#每日题目" class="headerlink" title="每日题目"></a>每日题目</h1>      <p>题目：<span class="exturl"><a class="exturl__link"   href="https://leetcode-cn.com/problems/combination-sum/" >组合总和</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><blockquote><p>给你一个 无重复元素 的整数数组 candidates 和一个目标整数 target ，找出 candidates 中可以使数字和为目标数 target 的 所有 不同组合 ，并以列表形式返回。你可以按 任意顺序 返回这些组合。</p><p>candidates 中的 同一个 数字可以 无限制重复被选取 。如果至少一个数字的被选数量不同，则两种组合是不同的。 </p><p>对于给定的输入，保证和为 target 的不同组合数少于 150 个。</p></blockquote><a id="more"></a><p>示例：</p><blockquote><p>示例 1：</p><p>输入：candidates = [2,3,6,7], target = 7<br>输出：[[2,2,3],[7]]<br>解释：<br>2 和 3 可以形成一组候选，2 + 2 + 3 = 7 。注意 2 可以使用多次。<br>7 也是一个候选， 7 = 7 。<br>仅有这两种组合。</p><p>示例 2：</p><p>输入: candidates = [2,3,5], target = 8<br>输出: [[2,2,2,2],[2,3,3],[3,5]]</p><p>示例 3：</p><p>输入: candidates = [2], target = 1<br>输出: []</p></blockquote><blockquote><p>提示：</p><p>1 &lt;= candidates.length &lt;= 30<br>1 &lt;= candidates[i] &lt;= 200<br>candidate 中的每个元素都 互不相同<br>1 &lt;= target &lt;= 500</p></blockquote><p><strong>代码：</strong></p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; combinationSum(<span class="keyword">int</span>[] candidates, <span class="keyword">int</span> target) &#123;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; res =  <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">//如果数组为空，直接返回空结果</span></span><br><span class="line">        <span class="keyword">if</span>(candidates==<span class="keyword">null</span>||candidates.length==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//先排序</span></span><br><span class="line">        Arrays.sort(candidates);</span><br><span class="line">        <span class="comment">//dfs</span></span><br><span class="line">        dfs(candidates,target,<span class="number">0</span>,<span class="keyword">new</span> ArrayList&lt;&gt;(),res);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span>[] candidates,<span class="keyword">int</span> target ,<span class="keyword">int</span> start,List&lt;Integer&gt; list,List&lt;List&lt;Integer&gt;&gt; res)</span></span>&#123;</span><br><span class="line">        <span class="comment">//如果目标值为0，说明已经找到一个组合，添加到结果集中</span></span><br><span class="line">        <span class="keyword">if</span>(target==<span class="number">0</span>)&#123;</span><br><span class="line">            res.add(<span class="keyword">new</span> ArrayList&lt;&gt;(list));</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//遍历数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = start; i &lt; candidates.length; i++) &#123;</span><br><span class="line">            <span class="comment">//如果当前值大于目标值，则不需要继续遍历</span></span><br><span class="line">            <span class="keyword">if</span>(candidates[i]&gt;target)&#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            list.add(candidates[i]);</span><br><span class="line">            <span class="comment">//更新目标值和起始位置</span></span><br><span class="line">            dfs(candidates,target-candidates[i],i,list,res);</span><br><span class="line">            <span class="comment">//回溯,删除当前值</span></span><br><span class="line">            list.remove(list.size()-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h1 id="每日单词"   >          <a href="#每日单词" class="heading-link"><i class="fas fa-link"></i></a><a href="#每日单词" class="headerlink" title="每日单词"></a>每日单词</h1>      <p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/image-20220419095327903.png" alt="image-20220419095327903"></p></div><script src="https://qiniu.techgrow.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {try {var plugin = new ReadmorePlugin();plugin.init({"id": "readmore-container","blogId": "63908-3467185019870-067","name": "牛哄哄的柯南","qrcode": "https://img-blog.csdnimg.cn/57e716984422402281cef814553b2ae9.png#pic_center","keyword": "柯南","lockToc": "yes","random": "1"});} catch(e) {console.warn(e.name + " : " + e.message);}}</script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;每日题目&quot;   &gt;
          &lt;a href=&quot;#每日题目&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#每日题目&quot; class=&quot;headerlink&quot; title=&quot;每日题目&quot;&gt;&lt;/a&gt;每日题目&lt;/h1&gt;
      &lt;p&gt;题目：&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://leetcode-cn.com/problems/combination-sum/&quot; &gt;组合总和&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给你一个 无重复元素 的整数数组 candidates 和一个目标整数 target ，找出 candidates 中可以使数字和为目标数 target 的 所有 不同组合 ，并以列表形式返回。你可以按 任意顺序 返回这些组合。&lt;/p&gt;
&lt;p&gt;candidates 中的 同一个 数字可以 无限制重复被选取 。如果至少一个数字的被选数量不同，则两种组合是不同的。 &lt;/p&gt;
&lt;p&gt;对于给定的输入，保证和为 target 的不同组合数少于 150 个。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="每天进步一点点系列" scheme="https://keafmd.top/tags/%E6%AF%8F%E5%A4%A9%E8%BF%9B%E6%AD%A5%E4%B8%80%E7%82%B9%E7%82%B9%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>计算器</title>
    <link href="https://keafmd.top/2022/04/18/%E8%AE%A1%E7%AE%97%E5%99%A8/"/>
    <id>https://keafmd.top/2022/04/18/%E8%AE%A1%E7%AE%97%E5%99%A8/</id>
    <published>2022-04-18T07:15:13.000Z</published>
    <updated>2022-04-18T07:20:25.556Z</updated>
    
    <content type="html"><![CDATA[<div id="readmore-container">        <h1 id="每日题目"   >          <a href="#每日题目" class="heading-link"><i class="fas fa-link"></i></a><a href="#每日题目" class="headerlink" title="每日题目"></a>每日题目</h1>      <p>题目：<span class="exturl"><a class="exturl__link"   href="https://leetcode-cn.com/problems/calculator-lcci/" >计算器</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><blockquote><p>给定一个包含正整数、加(+)、减(-)、乘(*)、除(/)的算数表达式(括号除外)，计算其结果。</p><p>表达式仅包含非负整数，+， - ，*，/ 四种运算符和空格  。 整数除法仅保留整数部分。</p></blockquote><a id="more"></a><p>示例：</p><blockquote><p>示例 1:</p><p>输入: “3+2*2”<br>输出: 7</p><p>示例 2:</p><p>输入: “ 3/2 “<br>输出: 1</p><p>示例 3:</p><p>输入: “ 3+5 / 2 “<br>输出: 5</p><p>说明：</p><p>你可以假设所给定的表达式都是有效的。<br>请不要使用内置的库函数 eval。</p></blockquote><blockquote><p>小坑，字符串里有空格，需要替换掉</p></blockquote><p>代码：</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">calculate</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        s =s.replaceAll(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">        Deque&lt;Integer&gt; stack = <span class="keyword">new</span> ArrayDeque&lt;&gt;();</span><br><span class="line">        <span class="comment">//先把第一个加进去</span></span><br><span class="line">        <span class="keyword">char</span> flag = <span class="string">&#x27;+&#x27;</span>;</span><br><span class="line">        <span class="comment">//数字的初始值</span></span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length();i++)&#123;</span><br><span class="line">            <span class="comment">//转换成数字</span></span><br><span class="line">            <span class="keyword">if</span>(Character.isDigit(s.charAt(i)))&#123;</span><br><span class="line">                num = num*<span class="number">10</span>+s.charAt(i)-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//根据符号进行运行，就是*和/，优先级高，先把栈中的数字拿出来，运算后放进去</span></span><br><span class="line">            <span class="keyword">if</span>(!Character.isDigit(s.charAt(i)) || i==s.length()-<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(flag==<span class="string">&#x27;+&#x27;</span>)&#123;</span><br><span class="line">                    stack.push(num);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(flag==<span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">                    stack.push(-num);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(flag==<span class="string">&#x27;*&#x27;</span>)&#123;</span><br><span class="line">                    stack.push(stack.pop()*num);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(flag==<span class="string">&#x27;/&#x27;</span>)&#123;</span><br><span class="line">                    stack.push(stack.pop()/num);</span><br><span class="line">                &#125;</span><br><span class="line">                flag = s.charAt(i);</span><br><span class="line">                num =<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//遍历栈，累加结果</span></span><br><span class="line">        <span class="keyword">int</span> res =<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(!stack.isEmpty())&#123;</span><br><span class="line">            res += stack.pop();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></div><script src="https://qiniu.techgrow.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {try {var plugin = new ReadmorePlugin();plugin.init({"id": "readmore-container","blogId": "63908-3467185019870-067","name": "牛哄哄的柯南","qrcode": "https://img-blog.csdnimg.cn/57e716984422402281cef814553b2ae9.png#pic_center","keyword": "柯南","lockToc": "yes","random": "1"});} catch(e) {console.warn(e.name + " : " + e.message);}}</script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;每日题目&quot;   &gt;
          &lt;a href=&quot;#每日题目&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#每日题目&quot; class=&quot;headerlink&quot; title=&quot;每日题目&quot;&gt;&lt;/a&gt;每日题目&lt;/h1&gt;
      &lt;p&gt;题目：&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://leetcode-cn.com/problems/calculator-lcci/&quot; &gt;计算器&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给定一个包含正整数、加(+)、减(-)、乘(*)、除(/)的算数表达式(括号除外)，计算其结果。&lt;/p&gt;
&lt;p&gt;表达式仅包含非负整数，+， - ，*，/ 四种运算符和空格  。 整数除法仅保留整数部分。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="每天进步一点点系列" scheme="https://keafmd.top/tags/%E6%AF%8F%E5%A4%A9%E8%BF%9B%E6%AD%A5%E4%B8%80%E7%82%B9%E7%82%B9%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>使用LamdbaUpdateWrapper的setSql作用及风险</title>
    <link href="https://keafmd.top/2022/04/12/%E4%BD%BF%E7%94%A8LamdbaUpdateWrapper%E7%9A%84setSql%E4%BD%9C%E7%94%A8%E5%8F%8A%E9%A3%8E%E9%99%A9/"/>
    <id>https://keafmd.top/2022/04/12/%E4%BD%BF%E7%94%A8LamdbaUpdateWrapper%E7%9A%84setSql%E4%BD%9C%E7%94%A8%E5%8F%8A%E9%A3%8E%E9%99%A9/</id>
    <published>2022-04-12T10:10:34.000Z</published>
    <updated>2022-04-18T07:42:42.969Z</updated>
    
    <content type="html"><![CDATA[<div id="readmore-container">        <h1 id="问题引入"   >          <a href="#问题引入" class="heading-link"><i class="fas fa-link"></i></a><a href="#问题引入" class="headerlink" title="问题引入"></a>问题引入</h1>      <blockquote><p>先思考下：我们要对数据库里面的某条数据进行更新，并且想要在某个字段原先的基础上修改，我们怎么办？</p></blockquote><a id="more"></a><blockquote><p>正常的情况下，我们需要先查出来再更新，可就是想直接更新，那就需要去Mapper中写sql，就为了一个字段感觉费劲，在这种情况下使用LamdbaUpdateWrapper的setSql()方法即可。</p></blockquote><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//把num字段加5</span></span><br><span class="line">LambdaUpdateWrapper&lt;User&gt; updateWrapper = Wrappers.&lt;User&gt;lambdaUpdate()</span><br><span class="line">.eq(User::getId, userId)</span><br><span class="line">.setSql(<span class="string">&quot;count = count + 5&quot;</span>);</span><br><span class="line"></span><br><span class="line">userService.update(updateWrapper);</span><br></pre></td></tr></table></div></figure><p>BUT，这样就会存在可能有风险，主要还是为了测试mybatis-plus，是否进行的防范，经过测试，并没有。</p><p>比如就使用最常见的 sleep()，把这部分加到sql段中 <code>+ sleep(5)</code></p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LambdaUpdateWrapper&lt;User&gt; updateWrapper = Wrappers.&lt;User&gt;lambdaUpdate()</span><br><span class="line">                .eq(User::getId, userId)</span><br><span class="line">                .setSql(<span class="string">&quot;count = count + 5 + sleep(5)&quot;</span>);</span><br></pre></td></tr></table></div></figure><p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/image-20220418154212043.png" alt="image-20220418154212043"></p><p>不过话说回来，这也就是开发人员能接触到的，只是证明mybatis-plus并没有对setSql()进行过滤，是采取直接拼上去的方式。</p>        <h1 id="每日单词"   >          <a href="#每日单词" class="heading-link"><i class="fas fa-link"></i></a><a href="#每日单词" class="headerlink" title="每日单词"></a>每日单词</h1>      <p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/image-20220418154234138.png" alt="image-20220418154234138"></p></div><script src="https://qiniu.techgrow.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {try {var plugin = new ReadmorePlugin();plugin.init({"id": "readmore-container","blogId": "63908-3467185019870-067","name": "牛哄哄的柯南","qrcode": "https://img-blog.csdnimg.cn/57e716984422402281cef814553b2ae9.png#pic_center","keyword": "柯南","lockToc": "yes","random": "1"});} catch(e) {console.warn(e.name + " : " + e.message);}}</script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;问题引入&quot;   &gt;
          &lt;a href=&quot;#问题引入&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#问题引入&quot; class=&quot;headerlink&quot; title=&quot;问题引入&quot;&gt;&lt;/a&gt;问题引入&lt;/h1&gt;
      &lt;blockquote&gt;
&lt;p&gt;先思考下：我们要对数据库里面的某条数据进行更新，并且想要在某个字段原先的基础上修改，我们怎么办？&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="java" scheme="https://keafmd.top/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>最小差值（附加单词积累）</title>
    <link href="https://keafmd.top/2022/04/12/%E6%9C%80%E5%B0%8F%E5%B7%AE%E5%80%BC%EF%BC%88%E9%99%84%E5%8A%A0%E5%8D%95%E8%AF%8D%E7%A7%AF%E7%B4%AF%EF%BC%89/"/>
    <id>https://keafmd.top/2022/04/12/%E6%9C%80%E5%B0%8F%E5%B7%AE%E5%80%BC%EF%BC%88%E9%99%84%E5%8A%A0%E5%8D%95%E8%AF%8D%E7%A7%AF%E7%B4%AF%EF%BC%89/</id>
    <published>2022-04-12T03:49:14.000Z</published>
    <updated>2022-04-12T04:11:08.911Z</updated>
    
    <content type="html"><![CDATA[<div id="readmore-container">        <h1 id="每日题目"   >          <a href="#每日题目" class="heading-link"><i class="fas fa-link"></i></a><a href="#每日题目" class="headerlink" title="每日题目"></a>每日题目</h1>      <p>题目：<span class="exturl"><a class="exturl__link"   href="https://leetcode-cn.com/problems/smallest-range-i/" >最小差值 I</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><blockquote><p>给你一个整数数组 nums，和一个整数 k 。</p><p>在一个操作中，您可以选择 0 &lt;= i &lt; nums 的任何索引 i 。将 nums[i] 改为 nums[i] + x ，其中 x 是一个范围为 [-k, k] 的整数。对于每个索引 i ，最多 只能 应用 一次 此操作。</p><p>nums 的 分数 是 nums 中最大和最小元素的差值。 </p><p>在对nums中的每个索引最多应用一次上述操作后，返回 nums 的最低 分数 。</p></blockquote><a id="more"></a><p>示例：</p><blockquote><p>示例 1：</p><p>输入：nums = [1], k = 0<br>输出：0<br>解释：分数是 max(nums) - min(nums) = 1 - 1 = 0。<br>示例 2：</p><p>输入：nums = [0,10], k = 2<br>输出：6<br>解释：将 nums 改为 [2,8]。分数是 max(nums) - min(nums) = 8 - 2 = 6。<br>示例 3：</p><p>输入：nums = [1,3,6], k = 3<br>输出：0<br>解释：将 nums 改为 [4,4,4]。分数是 max(nums) - min(nums) = 4 - 4 = 0。</p></blockquote><p>提示：</p><blockquote><p>1 &lt;= nums.length &lt;= 104<br>0 &lt;= nums[i] &lt;= 104<br>0 &lt;= k &lt;= 104</p></blockquote><p>代码：</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">smallestRangeI</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> res =<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> max = Integer.MIN_VALUE;</span><br><span class="line">        <span class="keyword">int</span> min = Integer.MAX_VALUE;</span><br><span class="line">        <span class="comment">//取最大最小值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> num : nums) &#123;</span><br><span class="line">            max = Math.max(max, num);</span><br><span class="line">            min = Math.min(min, num);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//这样取最大最小值速度慢</span></span><br><span class="line"><span class="comment">//        Arrays.sort(nums);</span></span><br><span class="line"><span class="comment">//        min = nums[0];</span></span><br><span class="line"><span class="comment">//        max = nums[nums.length - 1];</span></span><br><span class="line">        <span class="comment">//最大值减k，最小值加k，然后算差值res</span></span><br><span class="line">        res = max - min - <span class="number">2</span> * k;</span><br><span class="line">        <span class="comment">//因为k可变，如果res&lt;0,就证明可以把最大最小值变成一样，so，res = 0</span></span><br><span class="line">        <span class="keyword">if</span>(res &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            res = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h1 id="每日单词"   >          <a href="#每日单词" class="heading-link"><i class="fas fa-link"></i></a><a href="#每日单词" class="headerlink" title="每日单词"></a>每日单词</h1>      <p><img src="https://cdn.jsdelivr.net/gh/Keafmd/drawing-bed/img/image-20220412120606361.png" alt="image-20220412120606361"></p></div><script src="https://qiniu.techgrow.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {try {var plugin = new ReadmorePlugin();plugin.init({"id": "readmore-container","blogId": "63908-3467185019870-067","name": "牛哄哄的柯南","qrcode": "https://img-blog.csdnimg.cn/57e716984422402281cef814553b2ae9.png#pic_center","keyword": "柯南","lockToc": "yes","random": "1"});} catch(e) {console.warn(e.name + " : " + e.message);}}</script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;每日题目&quot;   &gt;
          &lt;a href=&quot;#每日题目&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#每日题目&quot; class=&quot;headerlink&quot; title=&quot;每日题目&quot;&gt;&lt;/a&gt;每日题目&lt;/h1&gt;
      &lt;p&gt;题目：&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://leetcode-cn.com/problems/smallest-range-i/&quot; &gt;最小差值 I&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给你一个整数数组 nums，和一个整数 k 。&lt;/p&gt;
&lt;p&gt;在一个操作中，您可以选择 0 &amp;lt;= i &amp;lt; nums 的任何索引 i 。将 nums[i] 改为 nums[i] + x ，其中 x 是一个范围为 [-k, k] 的整数。对于每个索引 i ，最多 只能 应用 一次 此操作。&lt;/p&gt;
&lt;p&gt;nums 的 分数 是 nums 中最大和最小元素的差值。 &lt;/p&gt;
&lt;p&gt;在对nums中的每个索引最多应用一次上述操作后，返回 nums 的最低 分数 。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="每天进步一点点系列" scheme="https://keafmd.top/tags/%E6%AF%8F%E5%A4%A9%E8%BF%9B%E6%AD%A5%E4%B8%80%E7%82%B9%E7%82%B9%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>DataGrip连接人大金仓数据库（kingbase）详细教程【超详细】</title>
    <link href="https://keafmd.top/2022/03/18/DataGrip%E8%BF%9E%E6%8E%A5%E4%BA%BA%E5%A4%A7%E9%87%91%E4%BB%93%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%88kingbase%EF%BC%89%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B%E3%80%90%E8%B6%85%E8%AF%A6%E7%BB%86%E3%80%91/"/>
    <id>https://keafmd.top/2022/03/18/DataGrip%E8%BF%9E%E6%8E%A5%E4%BA%BA%E5%A4%A7%E9%87%91%E4%BB%93%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%88kingbase%EF%BC%89%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B%E3%80%90%E8%B6%85%E8%AF%A6%E7%BB%86%E3%80%91/</id>
    <published>2022-03-18T07:30:53.000Z</published>
    <updated>2022-04-02T08:34:44.991Z</updated>
    
    <content type="html"><![CDATA[<div id="readmore-container">        <h1 id="DataGrip连接人大金仓数据库（kingbase）详细教程【超详细】"   >          <a href="#DataGrip连接人大金仓数据库（kingbase）详细教程【超详细】" class="heading-link"><i class="fas fa-link"></i></a><a href="#DataGrip连接人大金仓数据库（kingbase）详细教程【超详细】" class="headerlink" title="DataGrip连接人大金仓数据库（kingbase）详细教程【超详细】"></a>DataGrip连接人大金仓数据库（kingbase）详细教程【超详细】</h1>              <h1 id="第一步：下载DataGrip"   >          <a href="#第一步：下载DataGrip" class="heading-link"><i class="fas fa-link"></i></a><a href="#第一步：下载DataGrip" class="headerlink" title="第一步：下载DataGrip"></a>第一步：下载DataGrip</h1>      <p><strong>官网地址：<span class="exturl"><a class="exturl__link"   href="https://www.jetbrains.com/zh-cn/datagrip/download/#section=windows" >戳这里</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></strong></p><p><img src="https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021459816.png" alt="image-20210913111047913"></p><a id="more"></a>        <h1 id="第二步：添加人大金仓的数据库引擎"   >          <a href="#第二步：添加人大金仓的数据库引擎" class="heading-link"><i class="fas fa-link"></i></a><a href="#第二步：添加人大金仓的数据库引擎" class="headerlink" title="第二步：添加人大金仓的数据库引擎"></a>第二步：添加人大金仓的数据库引擎</h1>      <blockquote><p><strong>其实就是选择我们本地仓库引入的jar包</strong></p></blockquote><p><strong>如下图：</strong></p><p><img src="https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021459327.png" alt="image-20210913111417486"></p><blockquote><p><strong>选择Driver Files，也就是我们本地仓库中kingbase8的jar包</strong></p></blockquote><p><img src="https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021500539.png" alt="image-20210913111636394"></p><blockquote><p><strong>从本地仓库中找到</strong></p></blockquote><p><img src="https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021500709.png" alt="image-20210913111654473"></p><blockquote><p><strong>切换Class</strong></p></blockquote><p><img src="https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021500688.png" alt="image-20210913111758561"></p><blockquote><p><strong>完成后如下图：</strong></p></blockquote><p><img src="https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021500158.png" alt="image-20210913111507062"></p><blockquote><p><strong>点击Apply保存引擎</strong></p></blockquote><p><img src="https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021500077.png" alt="image-20210913111854079"></p>        <h1 id="第三步：输入账号密码连接"   >          <a href="#第三步：输入账号密码连接" class="heading-link"><i class="fas fa-link"></i></a><a href="#第三步：输入账号密码连接" class="headerlink" title="第三步：输入账号密码连接"></a>第三步：输入账号密码连接</h1>      <p><img src="https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021500183.png" alt="image-20210913112022474"></p><blockquote><p><strong>先测试连接一下</strong></p></blockquote><p><img src="https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021500322.png" alt="image-20210913112050134"></p><blockquote><p><strong>没有问题就点击OK</strong></p></blockquote>        <h1 id="第四步：查看数据库"   >          <a href="#第四步：查看数据库" class="heading-link"><i class="fas fa-link"></i></a><a href="#第四步：查看数据库" class="headerlink" title="第四步：查看数据库"></a>第四步：查看数据库</h1>      <blockquote><p><strong>我们需要勾选下All database，不然看不到表数据</strong></p></blockquote><p><img src="https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021500556.png" alt="image-20210913112202575"></p><blockquote><p><strong>这样就OK了</strong></p></blockquote><p><img src="https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021500427.png" alt="image-20210913112435055"></p>        <h1 id="关于连接其它数据库"   >          <a href="#关于连接其它数据库" class="heading-link"><i class="fas fa-link"></i></a><a href="#关于连接其它数据库" class="headerlink" title="关于连接其它数据库"></a>关于连接其它数据库</h1>      <blockquote><p><strong>连接其他数据库的时候，自定义性没有那么强，可以从支持的数据库中选择，上面连接kingbase数据库自定义性较强，使用DataGrip比较方便，对于MySQL这些比较常用的，使用我们比较熟悉的SQLYog、Naviate即可。</strong></p></blockquote><p><img src="https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021501149.png" alt="image-20210913112521317"></p><p><img src="https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021501799.png" alt="image-20210913112949157"></p></div><script src="https://qiniu.techgrow.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {try {var plugin = new ReadmorePlugin();plugin.init({"id": "readmore-container","blogId": "63908-3467185019870-067","name": "牛哄哄的柯南","qrcode": "https://img-blog.csdnimg.cn/57e716984422402281cef814553b2ae9.png#pic_center","keyword": "柯南","lockToc": "yes","random": "1"});} catch(e) {console.warn(e.name + " : " + e.message);}}</script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;DataGrip连接人大金仓数据库（kingbase）详细教程【超详细】&quot;   &gt;
          &lt;a href=&quot;#DataGrip连接人大金仓数据库（kingbase）详细教程【超详细】&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#DataGrip连接人大金仓数据库（kingbase）详细教程【超详细】&quot; class=&quot;headerlink&quot; title=&quot;DataGrip连接人大金仓数据库（kingbase）详细教程【超详细】&quot;&gt;&lt;/a&gt;DataGrip连接人大金仓数据库（kingbase）详细教程【超详细】&lt;/h1&gt;
      
        &lt;h1 id=&quot;第一步：下载DataGrip&quot;   &gt;
          &lt;a href=&quot;#第一步：下载DataGrip&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#第一步：下载DataGrip&quot; class=&quot;headerlink&quot; title=&quot;第一步：下载DataGrip&quot;&gt;&lt;/a&gt;第一步：下载DataGrip&lt;/h1&gt;
      &lt;p&gt;&lt;strong&gt;官网地址：&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://www.jetbrains.com/zh-cn/datagrip/download/#section=windows&quot; &gt;戳这里&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Keafmd/drawing-bed/main/img/202204021459816.png&quot; alt=&quot;image-20210913111047913&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="kingbase" scheme="https://keafmd.top/tags/kingbase/"/>
    
  </entry>
  
  <entry>
    <title>mysql和oorcale日期区间查询【含左右区间问题】</title>
    <link href="https://keafmd.top/2021/12/13/mysql%E5%92%8Coorcale%E6%97%A5%E6%9C%9F%E5%8C%BA%E9%97%B4%E6%9F%A5%E8%AF%A2%E3%80%90%E5%90%AB%E5%B7%A6%E5%8F%B3%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98%E3%80%91/"/>
    <id>https://keafmd.top/2021/12/13/mysql%E5%92%8Coorcale%E6%97%A5%E6%9C%9F%E5%8C%BA%E9%97%B4%E6%9F%A5%E8%AF%A2%E3%80%90%E5%90%AB%E5%B7%A6%E5%8F%B3%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98%E3%80%91/</id>
    <published>2021-12-13T12:55:04.000Z</published>
    <updated>2022-03-18T07:31:36.242Z</updated>
    
    <content type="html"><![CDATA[<div id="readmore-container">        <h1 id="mysql和oorcale日期区间查询【含左右区间问题】"   >          <a href="#mysql和oorcale日期区间查询【含左右区间问题】" class="heading-link"><i class="fas fa-link"></i></a><a href="#mysql和oorcale日期区间查询【含左右区间问题】" class="headerlink" title="mysql和oorcale日期区间查询【含左右区间问题】"></a>mysql和oorcale日期区间查询【含左右区间问题】</h1>      <blockquote><p><strong>直接看样例↓</strong></p></blockquote><p><strong>mysql：</strong></p><figure class="highlight sql"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">-- 查询区间[2021-12-01,2021-12-03)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> b <span class="keyword">WHERE</span> b.trigger_time <span class="operator">&gt;=</span> <span class="string">&#x27;2021-12-01&#x27;</span> </span><br><span class="line"><span class="keyword">AND</span> b.trigger_time <span class="operator">&lt;=</span> <span class="string">&#x27;2021-12-03&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询区间[2021-12-01,2021-12-03]</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> b <span class="keyword">WHERE</span> to_days( b.trigger_time ) <span class="operator">&gt;=</span> to_days( <span class="string">&#x27;2021-12-01&#x27;</span> ) </span><br><span class="line"><span class="keyword">AND</span> to_days( b.trigger_time ) <span class="operator">&lt;=</span> to_days( <span class="string">&#x27;2021-12-03&#x27;</span> )</span><br><span class="line"></span><br></pre></td></tr></table></div></figure><a id="more"></a><p><strong>orcale：</strong></p><figure class="highlight sql"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">-- 查询区间[2021-12-01,2021-12-03)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> b <span class="keyword">WHERE</span> b.trigger_time <span class="operator">&gt;=</span> to_date( <span class="string">&#x27;2021-12-01&#x27;</span>, <span class="string">&#x27;yyyy-MM-dd&#x27;</span> ) </span><br><span class="line"><span class="keyword">AND</span> b.trigger_time <span class="operator">&lt;=</span> to_date( <span class="string">&#x27;2021-12-03&#x27;</span>, <span class="string">&#x27;yyyy-MM-dd&#x27;</span> )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询区间[2021-12-01,2021-12-03]</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> b <span class="keyword">WHERE</span> to_char( b.trigger_time, <span class="string">&#x27;yyyy-MM-dd&#x27;</span> ) <span class="operator">&gt;=</span> <span class="string">&#x27;2021-12-01&#x27;</span> </span><br><span class="line"><span class="keyword">AND</span> to_char( b.trigger_time, <span class="string">&#x27;yyyy-MM-dd&#x27;</span> ) <span class="operator">&lt;=</span> <span class="string">&#x27;2021-12-03&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></div></figure><blockquote><p><strong>以上就是mysql和oorcale日期区间查询【含左右区间问题】的全部内容</strong></p></blockquote><blockquote><p><strong>版权声明：</strong><br><strong>原创博主：牛哄哄的柯南</strong><br><strong>博主原文链接：<span class="exturl"><a class="exturl__link"   href="https://keafmd.blog.csdn.net/" >https://keafmd.blog.csdn.net/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></strong></p></blockquote><p><strong>看完如果对你有帮助，感谢支持！</strong><br><img src="https://img-blog.csdnimg.cn/20201023201048810.gif#pic_center" alt="在这里插入图片描述"><br><strong>加油！</strong></p><p><strong>共同努力！</strong></p><p><strong>Keafmd</strong></p></div><script src="https://qiniu.techgrow.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {try {var plugin = new ReadmorePlugin();plugin.init({"id": "readmore-container","blogId": "63908-3467185019870-067","name": "牛哄哄的柯南","qrcode": "https://img-blog.csdnimg.cn/57e716984422402281cef814553b2ae9.png#pic_center","keyword": "柯南","lockToc": "yes","random": "1"});} catch(e) {console.warn(e.name + " : " + e.message);}}</script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;mysql和oorcale日期区间查询【含左右区间问题】&quot;   &gt;
          &lt;a href=&quot;#mysql和oorcale日期区间查询【含左右区间问题】&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#mysql和oorcale日期区间查询【含左右区间问题】&quot; class=&quot;headerlink&quot; title=&quot;mysql和oorcale日期区间查询【含左右区间问题】&quot;&gt;&lt;/a&gt;mysql和oorcale日期区间查询【含左右区间问题】&lt;/h1&gt;
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;直接看样例↓&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;mysql：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;div class=&quot;table-container&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- 查询区间[2021-12-01,2021-12-03)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; b &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; b.trigger_time &lt;span class=&quot;operator&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;2021-12-01&amp;#x27;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; b.trigger_time &lt;span class=&quot;operator&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;2021-12-03&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- 查询区间[2021-12-01,2021-12-03]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; b &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; to_days( b.trigger_time ) &lt;span class=&quot;operator&quot;&gt;&amp;gt;=&lt;/span&gt; to_days( &lt;span class=&quot;string&quot;&gt;&amp;#x27;2021-12-01&amp;#x27;&lt;/span&gt; ) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; to_days( b.trigger_time ) &lt;span class=&quot;operator&quot;&gt;&amp;lt;=&lt;/span&gt; to_days( &lt;span class=&quot;string&quot;&gt;&amp;#x27;2021-12-03&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;</summary>
    
    
    
    
    <category term="mysql" scheme="https://keafmd.top/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>规范【锦上添花系列】</title>
    <link href="https://keafmd.top/2021/10/25/%E8%A7%84%E8%8C%83%E3%80%90%E9%94%A6%E4%B8%8A%E6%B7%BB%E8%8A%B1%E7%B3%BB%E5%88%97%E3%80%91/"/>
    <id>https://keafmd.top/2021/10/25/%E8%A7%84%E8%8C%83%E3%80%90%E9%94%A6%E4%B8%8A%E6%B7%BB%E8%8A%B1%E7%B3%BB%E5%88%97%E3%80%91/</id>
    <published>2021-10-25T09:19:00.000Z</published>
    <updated>2021-10-25T09:20:09.050Z</updated>
    
    <content type="html"><![CDATA[<div id="readmore-container"><blockquote><p><strong>我们提交代码时，有时可能没有什么格式，就简单记录下这次提交了哪部分代码，但是当我们看gitee和github上的提交时就会发现，在提交信息前会有一些单词，那就是用来标识这次提交代码的类别的。</strong></p></blockquote><p><strong>规范的好处：</strong></p><ul><li><strong>首先可读性强，不比深看代码，即可知道本次commit的作用</strong></li><li><strong>便于根据项目开发历史</strong></li><li><strong>提高项目整体质量，提高个人专业性</strong></li><li><strong>为Code Reviewing做准备</strong></li><li>…</li></ul><a id="more"></a><p><strong>规范有很多种，本文介绍目前使用最广泛的Angular 规范</strong><br><img   src="https://img-blog.csdnimg.cn/0210eac7b05f4bc38b0a04fcd36c9a96.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA54mb5ZOE5ZOE55qE5p-v5Y2X,size_20,color_FFFFFF,t_70,g_se,x_16" style="width: image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,tepx;height: t_Q1NETiBA54mb5ZOE5ZOE55qE5p-v5Y2X,size_20,color_FFFFFF,t_70,g_se,px;"  alt="在这里插入图片描述"></p><blockquote><p><strong>关于commit的类别，Angular 规范提到了七种标识：</strong></p></blockquote><ul><li><strong>feat：最常用的，开发新功能</strong></li><li><strong>fix：也常用，修复bug</strong></li><li><strong>docs：文档</strong></li><li><strong>style：常用，格式修改（不改变代码运行）</strong></li><li><strong>refactor：重构，改变代码结构，不是新功能也不是修复bug</strong></li><li><strong>test：测试</strong></li><li><strong>chore：维护，一些其它修改</strong></li></ul><blockquote><p><strong>版权声明：</strong><br><strong>原创博主：牛哄哄的柯南</strong><br><strong>博主原文链接：<span class="exturl"><a class="exturl__link"   href="https://keafmd.blog.csdn.net/" >https://keafmd.blog.csdn.net/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></strong></p></blockquote><p><strong>看完如果对你有帮助，感谢点击下面的==一键三连==支持！<br>[哈哈][抱拳]</strong><br><img src="https://img-blog.csdnimg.cn/e76df83ccd6d4e139968fbb68f7b1f99.png" alt="请添加图片描述"><img src="https://img-blog.csdnimg.cn/20201023201048810.gif#pic_center" alt="在这里插入图片描述"><br><strong>加油！</strong></p><p><strong>共同努力！</strong></p><p><strong>Keafmd</strong></p></div><script src="https://qiniu.techgrow.cn/js/readmore.js" type="text/javascript"></script><script>var isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);if (!isMobile) {try {var plugin = new ReadmorePlugin();plugin.init({"id": "readmore-container","blogId": "63908-3467185019870-067","name": "牛哄哄的柯南","qrcode": "https://img-blog.csdnimg.cn/57e716984422402281cef814553b2ae9.png#pic_center","keyword": "柯南","lockToc": "yes","random": "1"});} catch(e) {console.warn(e.name + " : " + e.message);}}</script>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;我们提交代码时，有时可能没有什么格式，就简单记录下这次提交了哪部分代码，但是当我们看gitee和github上的提交时就会发现，在提交信息前会有一些单词，那就是用来标识这次提交代码的类别的。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;规范的好处：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;首先可读性强，不比深看代码，即可知道本次commit的作用&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;便于根据项目开发历史&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;提高项目整体质量，提高个人专业性&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;为Code Reviewing做准备&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    
    <category term="git" scheme="https://keafmd.top/tags/git/"/>
    
  </entry>
  
</feed>
